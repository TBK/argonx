// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_friends.proto

#include "steammessages_clientserver_friends.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmoticonList_Emoticon;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsGroupsList_FriendGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsList_Friend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPersonaState_Friend_ClanData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPersonaState_Friend_KV;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPlayerNicknameList_PlayerNickname;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_steammessages_5fclientserver_5ffriends_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPersonaState_Friend;
}  // namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto
class CMsgClientFriendMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendMsg>
      _instance;
} _CMsgClientFriendMsg_default_instance_;
class CMsgClientFriendMsgIncomingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendMsgIncoming>
      _instance;
} _CMsgClientFriendMsgIncoming_default_instance_;
class CMsgClientAddFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAddFriend>
      _instance;
} _CMsgClientAddFriend_default_instance_;
class CMsgClientAddFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAddFriendResponse>
      _instance;
} _CMsgClientAddFriendResponse_default_instance_;
class CMsgClientRemoveFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRemoveFriend>
      _instance;
} _CMsgClientRemoveFriend_default_instance_;
class CMsgClientHideFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientHideFriend>
      _instance;
} _CMsgClientHideFriend_default_instance_;
class CMsgClientFriendsList_FriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendsList_Friend>
      _instance;
} _CMsgClientFriendsList_Friend_default_instance_;
class CMsgClientFriendsListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendsList>
      _instance;
} _CMsgClientFriendsList_default_instance_;
class CMsgClientFriendsGroupsList_FriendGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendsGroupsList_FriendGroup>
      _instance;
} _CMsgClientFriendsGroupsList_FriendGroup_default_instance_;
class CMsgClientFriendsGroupsList_FriendGroupsMembershipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendsGroupsList_FriendGroupsMembership>
      _instance;
} _CMsgClientFriendsGroupsList_FriendGroupsMembership_default_instance_;
class CMsgClientFriendsGroupsListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendsGroupsList>
      _instance;
} _CMsgClientFriendsGroupsList_default_instance_;
class CMsgClientPlayerNicknameList_PlayerNicknameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPlayerNicknameList_PlayerNickname>
      _instance;
} _CMsgClientPlayerNicknameList_PlayerNickname_default_instance_;
class CMsgClientPlayerNicknameListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPlayerNicknameList>
      _instance;
} _CMsgClientPlayerNicknameList_default_instance_;
class CMsgClientSetPlayerNicknameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSetPlayerNickname>
      _instance;
} _CMsgClientSetPlayerNickname_default_instance_;
class CMsgClientSetPlayerNicknameResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSetPlayerNicknameResponse>
      _instance;
} _CMsgClientSetPlayerNicknameResponse_default_instance_;
class CMsgClientRequestFriendDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFriendData>
      _instance;
} _CMsgClientRequestFriendData_default_instance_;
class CMsgClientChangeStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChangeStatus>
      _instance;
} _CMsgClientChangeStatus_default_instance_;
class CMsgPersonaChangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPersonaChangeResponse>
      _instance;
} _CMsgPersonaChangeResponse_default_instance_;
class CMsgClientPersonaState_Friend_ClanDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPersonaState_Friend_ClanData>
      _instance;
} _CMsgClientPersonaState_Friend_ClanData_default_instance_;
class CMsgClientPersonaState_Friend_KVDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPersonaState_Friend_KV>
      _instance;
} _CMsgClientPersonaState_Friend_KV_default_instance_;
class CMsgClientPersonaState_FriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPersonaState_Friend>
      _instance;
} _CMsgClientPersonaState_Friend_default_instance_;
class CMsgClientPersonaStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPersonaState>
      _instance;
} _CMsgClientPersonaState_default_instance_;
class CMsgClientFriendProfileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendProfileInfo>
      _instance;
} _CMsgClientFriendProfileInfo_default_instance_;
class CMsgClientFriendProfileInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendProfileInfoResponse>
      _instance;
} _CMsgClientFriendProfileInfoResponse_default_instance_;
class CMsgClientCreateFriendsGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCreateFriendsGroup>
      _instance;
} _CMsgClientCreateFriendsGroup_default_instance_;
class CMsgClientCreateFriendsGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCreateFriendsGroupResponse>
      _instance;
} _CMsgClientCreateFriendsGroupResponse_default_instance_;
class CMsgClientDeleteFriendsGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeleteFriendsGroup>
      _instance;
} _CMsgClientDeleteFriendsGroup_default_instance_;
class CMsgClientDeleteFriendsGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeleteFriendsGroupResponse>
      _instance;
} _CMsgClientDeleteFriendsGroupResponse_default_instance_;
class CMsgClientManageFriendsGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientManageFriendsGroup>
      _instance;
} _CMsgClientManageFriendsGroup_default_instance_;
class CMsgClientManageFriendsGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientManageFriendsGroupResponse>
      _instance;
} _CMsgClientManageFriendsGroupResponse_default_instance_;
class CMsgClientAddFriendToGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAddFriendToGroup>
      _instance;
} _CMsgClientAddFriendToGroup_default_instance_;
class CMsgClientAddFriendToGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAddFriendToGroupResponse>
      _instance;
} _CMsgClientAddFriendToGroupResponse_default_instance_;
class CMsgClientRemoveFriendFromGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRemoveFriendFromGroup>
      _instance;
} _CMsgClientRemoveFriendFromGroup_default_instance_;
class CMsgClientRemoveFriendFromGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRemoveFriendFromGroupResponse>
      _instance;
} _CMsgClientRemoveFriendFromGroupResponse_default_instance_;
class CMsgClientGetEmoticonListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetEmoticonList>
      _instance;
} _CMsgClientGetEmoticonList_default_instance_;
class CMsgClientEmoticonList_EmoticonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmoticonList_Emoticon>
      _instance;
} _CMsgClientEmoticonList_Emoticon_default_instance_;
class CMsgClientEmoticonListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmoticonList>
      _instance;
} _CMsgClientEmoticonList_default_instance_;
namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto {
static void InitDefaultsCMsgClientFriendMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendMsg_default_instance_;
    new (ptr) ::CMsgClientFriendMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendMsg}, {}};

static void InitDefaultsCMsgClientFriendMsgIncoming() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendMsgIncoming_default_instance_;
    new (ptr) ::CMsgClientFriendMsgIncoming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendMsgIncoming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendMsgIncoming =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendMsgIncoming}, {}};

static void InitDefaultsCMsgClientAddFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAddFriend_default_instance_;
    new (ptr) ::CMsgClientAddFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAddFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAddFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAddFriend}, {}};

static void InitDefaultsCMsgClientAddFriendResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAddFriendResponse_default_instance_;
    new (ptr) ::CMsgClientAddFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAddFriendResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAddFriendResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAddFriendResponse}, {}};

static void InitDefaultsCMsgClientRemoveFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRemoveFriend_default_instance_;
    new (ptr) ::CMsgClientRemoveFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRemoveFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRemoveFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRemoveFriend}, {}};

static void InitDefaultsCMsgClientHideFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientHideFriend_default_instance_;
    new (ptr) ::CMsgClientHideFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientHideFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientHideFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientHideFriend}, {}};

static void InitDefaultsCMsgClientFriendsList_Friend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendsList_Friend_default_instance_;
    new (ptr) ::CMsgClientFriendsList_Friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendsList_Friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsList_Friend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendsList_Friend}, {}};

static void InitDefaultsCMsgClientFriendsList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendsList_default_instance_;
    new (ptr) ::CMsgClientFriendsList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendsList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientFriendsList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientFriendsList}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsList_Friend.base,}};

static void InitDefaultsCMsgClientFriendsGroupsList_FriendGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendsGroupsList_FriendGroup_default_instance_;
    new (ptr) ::CMsgClientFriendsGroupsList_FriendGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendsGroupsList_FriendGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsGroupsList_FriendGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendsGroupsList_FriendGroup}, {}};

static void InitDefaultsCMsgClientFriendsGroupsList_FriendGroupsMembership() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendsGroupsList_FriendGroupsMembership_default_instance_;
    new (ptr) ::CMsgClientFriendsGroupsList_FriendGroupsMembership();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendsGroupsList_FriendGroupsMembership::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendsGroupsList_FriendGroupsMembership}, {}};

static void InitDefaultsCMsgClientFriendsGroupsList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendsGroupsList_default_instance_;
    new (ptr) ::CMsgClientFriendsGroupsList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendsGroupsList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientFriendsGroupsList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientFriendsGroupsList}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroup.base,
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership.base,}};

static void InitDefaultsCMsgClientPlayerNicknameList_PlayerNickname() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPlayerNicknameList_PlayerNickname_default_instance_;
    new (ptr) ::CMsgClientPlayerNicknameList_PlayerNickname();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPlayerNicknameList_PlayerNickname::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPlayerNicknameList_PlayerNickname =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPlayerNicknameList_PlayerNickname}, {}};

static void InitDefaultsCMsgClientPlayerNicknameList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPlayerNicknameList_default_instance_;
    new (ptr) ::CMsgClientPlayerNicknameList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPlayerNicknameList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientPlayerNicknameList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientPlayerNicknameList}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPlayerNicknameList_PlayerNickname.base,}};

static void InitDefaultsCMsgClientSetPlayerNickname() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSetPlayerNickname_default_instance_;
    new (ptr) ::CMsgClientSetPlayerNickname();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSetPlayerNickname::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSetPlayerNickname =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSetPlayerNickname}, {}};

static void InitDefaultsCMsgClientSetPlayerNicknameResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientSetPlayerNicknameResponse_default_instance_;
    new (ptr) ::CMsgClientSetPlayerNicknameResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientSetPlayerNicknameResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSetPlayerNicknameResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSetPlayerNicknameResponse}, {}};

static void InitDefaultsCMsgClientRequestFriendData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRequestFriendData_default_instance_;
    new (ptr) ::CMsgClientRequestFriendData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRequestFriendData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestFriendData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestFriendData}, {}};

static void InitDefaultsCMsgClientChangeStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientChangeStatus_default_instance_;
    new (ptr) ::CMsgClientChangeStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientChangeStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChangeStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChangeStatus}, {}};

static void InitDefaultsCMsgPersonaChangeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPersonaChangeResponse_default_instance_;
    new (ptr) ::CMsgPersonaChangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPersonaChangeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPersonaChangeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPersonaChangeResponse}, {}};

static void InitDefaultsCMsgClientPersonaState_Friend_ClanData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPersonaState_Friend_ClanData_default_instance_;
    new (ptr) ::CMsgClientPersonaState_Friend_ClanData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPersonaState_Friend_ClanData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPersonaState_Friend_ClanData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPersonaState_Friend_ClanData}, {}};

static void InitDefaultsCMsgClientPersonaState_Friend_KV() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPersonaState_Friend_KV_default_instance_;
    new (ptr) ::CMsgClientPersonaState_Friend_KV();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPersonaState_Friend_KV::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPersonaState_Friend_KV =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPersonaState_Friend_KV}, {}};

static void InitDefaultsCMsgClientPersonaState_Friend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPersonaState_Friend_default_instance_;
    new (ptr) ::CMsgClientPersonaState_Friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPersonaState_Friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientPersonaState_Friend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientPersonaState_Friend}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_ClanData.base,
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_KV.base,}};

static void InitDefaultsCMsgClientPersonaState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientPersonaState_default_instance_;
    new (ptr) ::CMsgClientPersonaState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientPersonaState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientPersonaState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientPersonaState}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend.base,}};

static void InitDefaultsCMsgClientFriendProfileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendProfileInfo_default_instance_;
    new (ptr) ::CMsgClientFriendProfileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendProfileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendProfileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendProfileInfo}, {}};

static void InitDefaultsCMsgClientFriendProfileInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientFriendProfileInfoResponse_default_instance_;
    new (ptr) ::CMsgClientFriendProfileInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientFriendProfileInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendProfileInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendProfileInfoResponse}, {}};

static void InitDefaultsCMsgClientCreateFriendsGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCreateFriendsGroup_default_instance_;
    new (ptr) ::CMsgClientCreateFriendsGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCreateFriendsGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCreateFriendsGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCreateFriendsGroup}, {}};

static void InitDefaultsCMsgClientCreateFriendsGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientCreateFriendsGroupResponse_default_instance_;
    new (ptr) ::CMsgClientCreateFriendsGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientCreateFriendsGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCreateFriendsGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCreateFriendsGroupResponse}, {}};

static void InitDefaultsCMsgClientDeleteFriendsGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDeleteFriendsGroup_default_instance_;
    new (ptr) ::CMsgClientDeleteFriendsGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDeleteFriendsGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeleteFriendsGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeleteFriendsGroup}, {}};

static void InitDefaultsCMsgClientDeleteFriendsGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientDeleteFriendsGroupResponse_default_instance_;
    new (ptr) ::CMsgClientDeleteFriendsGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientDeleteFriendsGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeleteFriendsGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeleteFriendsGroupResponse}, {}};

static void InitDefaultsCMsgClientManageFriendsGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientManageFriendsGroup_default_instance_;
    new (ptr) ::CMsgClientManageFriendsGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientManageFriendsGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientManageFriendsGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientManageFriendsGroup}, {}};

static void InitDefaultsCMsgClientManageFriendsGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientManageFriendsGroupResponse_default_instance_;
    new (ptr) ::CMsgClientManageFriendsGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientManageFriendsGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientManageFriendsGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientManageFriendsGroupResponse}, {}};

static void InitDefaultsCMsgClientAddFriendToGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAddFriendToGroup_default_instance_;
    new (ptr) ::CMsgClientAddFriendToGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAddFriendToGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAddFriendToGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAddFriendToGroup}, {}};

static void InitDefaultsCMsgClientAddFriendToGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientAddFriendToGroupResponse_default_instance_;
    new (ptr) ::CMsgClientAddFriendToGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientAddFriendToGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAddFriendToGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAddFriendToGroupResponse}, {}};

static void InitDefaultsCMsgClientRemoveFriendFromGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRemoveFriendFromGroup_default_instance_;
    new (ptr) ::CMsgClientRemoveFriendFromGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRemoveFriendFromGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRemoveFriendFromGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRemoveFriendFromGroup}, {}};

static void InitDefaultsCMsgClientRemoveFriendFromGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientRemoveFriendFromGroupResponse_default_instance_;
    new (ptr) ::CMsgClientRemoveFriendFromGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientRemoveFriendFromGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRemoveFriendFromGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRemoveFriendFromGroupResponse}, {}};

static void InitDefaultsCMsgClientGetEmoticonList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientGetEmoticonList_default_instance_;
    new (ptr) ::CMsgClientGetEmoticonList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientGetEmoticonList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetEmoticonList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetEmoticonList}, {}};

static void InitDefaultsCMsgClientEmoticonList_Emoticon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientEmoticonList_Emoticon_default_instance_;
    new (ptr) ::CMsgClientEmoticonList_Emoticon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientEmoticonList_Emoticon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmoticonList_Emoticon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientEmoticonList_Emoticon}, {}};

static void InitDefaultsCMsgClientEmoticonList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClientEmoticonList_default_instance_;
    new (ptr) ::CMsgClientEmoticonList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientEmoticonList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientEmoticonList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientEmoticonList}, {
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientEmoticonList_Emoticon.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendMsgIncoming.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAddFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAddFriendResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRemoveFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientHideFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendsList_Friend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendsList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendsGroupsList_FriendGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendsGroupsList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPlayerNicknameList_PlayerNickname.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPlayerNicknameList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSetPlayerNickname.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSetPlayerNicknameResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestFriendData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChangeStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPersonaChangeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPersonaState_Friend_ClanData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPersonaState_Friend_KV.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPersonaState_Friend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPersonaState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendProfileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendProfileInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCreateFriendsGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCreateFriendsGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeleteFriendsGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeleteFriendsGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientManageFriendsGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientManageFriendsGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAddFriendToGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAddFriendToGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRemoveFriendFromGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRemoveFriendFromGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetEmoticonList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmoticonList_Emoticon.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmoticonList.base);
}

::google::protobuf::Metadata file_level_metadata[37];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, chat_entry_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, rtime32_server_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsg, echo_to_sender_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, steamid_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, chat_entry_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, from_limited_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendMsgIncoming, rtime32_server_timestamp_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriend, steamid_to_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriend, accountname_or_email_to_add_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendResponse, steam_id_added_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendResponse, persona_name_added_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriend, friendid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHideFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHideFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHideFriend, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHideFriend, hide_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList_Friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList_Friend, ulfriendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList_Friend, efriendrelationship_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, bincremental_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, max_friend_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, active_friend_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsList, friends_limit_hit_),
  1,
  ~0u,
  0,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroup, ngroupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroup, strgroupname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroupsMembership, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroupsMembership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroupsMembership, ulsteamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList_FriendGroupsMembership, ngroupid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, bremoval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, bincremental_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, friendgroups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendsGroupsList, memberships_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList_PlayerNickname, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList_PlayerNickname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList_PlayerNickname, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList_PlayerNickname, nickname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList, removal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList, incremental_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPlayerNicknameList, nicknames_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNickname, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNickname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNickname, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNickname, nickname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNicknameResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNicknameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientSetPlayerNicknameResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFriendData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFriendData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFriendData, persona_state_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRequestFriendData, friends_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, persona_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, is_auto_generated_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, high_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, persona_set_by_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, persona_state_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientChangeStatus, need_persona_response_),
  1,
  0,
  2,
  3,
  4,
  6,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPersonaChangeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPersonaChangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPersonaChangeResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPersonaChangeResponse, player_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_ClanData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_ClanData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_ClanData, ogg_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_ClanData, chat_group_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_KV, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_KV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_KV, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend_KV, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, persona_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_played_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, persona_state_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, online_session_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, published_instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, persona_set_by_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, query_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, steamid_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, avatar_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, last_logoff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, last_logon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, last_seen_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, clan_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_data_blob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, clan_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, clan_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, rich_presence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, broadcast_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, game_lobby_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, watching_broadcast_accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, watching_broadcast_appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, watching_broadcast_viewers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState_Friend, watching_broadcast_title_),
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  0,
  17,
  16,
  1,
  18,
  19,
  20,
  22,
  2,
  21,
  3,
  6,
  4,
  ~0u,
  24,
  25,
  23,
  26,
  27,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState, status_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientPersonaState, friends_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfo, steamid_friend_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, steamid_friend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, time_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, real_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, city_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, state_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, country_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, headline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientFriendProfileInfoResponse, summary_),
  8,
  6,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroup, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroup, groupname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroup, steamid_friends_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroupResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientCreateFriendsGroupResponse, groupid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroup, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroup, groupid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientDeleteFriendsGroupResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, groupname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, steamid_friends_added_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroup, steamid_friends_removed_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientManageFriendsGroupResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroup, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroup, steamiduser_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientAddFriendToGroupResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroup, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroup, steamiduser_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientRemoveFriendFromGroupResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetEmoticonList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientGetEmoticonList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, time_last_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, use_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList_Emoticon, time_received_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientEmoticonList, emoticons_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::CMsgClientFriendMsg)},
  { 15, 25, sizeof(::CMsgClientFriendMsgIncoming)},
  { 30, 37, sizeof(::CMsgClientAddFriend)},
  { 39, 47, sizeof(::CMsgClientAddFriendResponse)},
  { 50, 56, sizeof(::CMsgClientRemoveFriend)},
  { 57, 64, sizeof(::CMsgClientHideFriend)},
  { 66, 73, sizeof(::CMsgClientFriendsList_Friend)},
  { 75, 85, sizeof(::CMsgClientFriendsList)},
  { 90, 97, sizeof(::CMsgClientFriendsGroupsList_FriendGroup)},
  { 99, 106, sizeof(::CMsgClientFriendsGroupsList_FriendGroupsMembership)},
  { 108, 117, sizeof(::CMsgClientFriendsGroupsList)},
  { 121, 128, sizeof(::CMsgClientPlayerNicknameList_PlayerNickname)},
  { 130, 138, sizeof(::CMsgClientPlayerNicknameList)},
  { 141, 148, sizeof(::CMsgClientSetPlayerNickname)},
  { 150, 156, sizeof(::CMsgClientSetPlayerNicknameResponse)},
  { 157, 164, sizeof(::CMsgClientRequestFriendData)},
  { 166, 178, sizeof(::CMsgClientChangeStatus)},
  { 185, 192, sizeof(::CMsgPersonaChangeResponse)},
  { 194, 201, sizeof(::CMsgClientPersonaState_Friend_ClanData)},
  { 203, 210, sizeof(::CMsgClientPersonaState_Friend_KV)},
  { 212, 246, sizeof(::CMsgClientPersonaState_Friend)},
  { 275, 282, sizeof(::CMsgClientPersonaState)},
  { 284, 290, sizeof(::CMsgClientFriendProfileInfo)},
  { 291, 305, sizeof(::CMsgClientFriendProfileInfoResponse)},
  { 314, 322, sizeof(::CMsgClientCreateFriendsGroup)},
  { 325, 332, sizeof(::CMsgClientCreateFriendsGroupResponse)},
  { 334, 341, sizeof(::CMsgClientDeleteFriendsGroup)},
  { 343, 349, sizeof(::CMsgClientDeleteFriendsGroupResponse)},
  { 350, 359, sizeof(::CMsgClientManageFriendsGroup)},
  { 363, 369, sizeof(::CMsgClientManageFriendsGroupResponse)},
  { 370, 377, sizeof(::CMsgClientAddFriendToGroup)},
  { 379, 385, sizeof(::CMsgClientAddFriendToGroupResponse)},
  { 386, 393, sizeof(::CMsgClientRemoveFriendFromGroup)},
  { 395, 401, sizeof(::CMsgClientRemoveFriendFromGroupResponse)},
  { 402, 407, sizeof(::CMsgClientGetEmoticonList)},
  { 407, 417, sizeof(::CMsgClientEmoticonList_Emoticon)},
  { 422, 428, sizeof(::CMsgClientEmoticonList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendMsgIncoming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAddFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAddFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRemoveFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientHideFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendsList_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendsList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendsGroupsList_FriendGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendsGroupsList_FriendGroupsMembership_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendsGroupsList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPlayerNicknameList_PlayerNickname_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPlayerNicknameList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSetPlayerNickname_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientSetPlayerNicknameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRequestFriendData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientChangeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPersonaChangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPersonaState_Friend_ClanData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPersonaState_Friend_KV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPersonaState_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientPersonaState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendProfileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientFriendProfileInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCreateFriendsGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientCreateFriendsGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDeleteFriendsGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientDeleteFriendsGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientManageFriendsGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientManageFriendsGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAddFriendToGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientAddFriendToGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRemoveFriendFromGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientRemoveFriendFromGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientGetEmoticonList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientEmoticonList_Emoticon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientEmoticonList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_clientserver_friends.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 37);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(steammessages_clientserver_friends.pro"
      "to\032\030steammessages_base.proto\"\212\001\n\023CMsgCli"
      "entFriendMsg\022\017\n\007steamid\030\001 \001(\006\022\027\n\017chat_en"
      "try_type\030\002 \001(\005\022\017\n\007message\030\003 \001(\014\022 \n\030rtime"
      "32_server_timestamp\030\004 \001(\007\022\026\n\016echo_to_sen"
      "der\030\005 \001(\010\"\235\001\n\033CMsgClientFriendMsgIncomin"
      "g\022\024\n\014steamid_from\030\001 \001(\006\022\027\n\017chat_entry_ty"
      "pe\030\002 \001(\005\022\034\n\024from_limited_account\030\003 \001(\010\022\017"
      "\n\007message\030\004 \001(\014\022 \n\030rtime32_server_timest"
      "amp\030\005 \001(\007\"R\n\023CMsgClientAddFriend\022\026\n\016stea"
      "mid_to_add\030\001 \001(\006\022#\n\033accountname_or_email"
      "_to_add\030\002 \001(\t\"e\n\033CMsgClientAddFriendResp"
      "onse\022\022\n\007eresult\030\001 \001(\005:\0012\022\026\n\016steam_id_add"
      "ed\030\002 \001(\006\022\032\n\022persona_name_added\030\003 \001(\t\"*\n\026"
      "CMsgClientRemoveFriend\022\020\n\010friendid\030\001 \001(\006"
      "\"6\n\024CMsgClientHideFriend\022\020\n\010friendid\030\001 \001"
      "(\006\022\014\n\004hide\030\002 \001(\010\"\352\001\n\025CMsgClientFriendsLi"
      "st\022\024\n\014bincremental\030\001 \001(\010\022.\n\007friends\030\002 \003("
      "\0132\035.CMsgClientFriendsList.Friend\022\030\n\020max_"
      "friend_count\030\003 \001(\r\022\033\n\023active_friend_coun"
      "t\030\004 \001(\r\022\031\n\021friends_limit_hit\030\005 \001(\010\0329\n\006Fr"
      "iend\022\022\n\nulfriendid\030\001 \001(\006\022\033\n\023efriendrelat"
      "ionship\030\002 \001(\r\"\305\002\n\033CMsgClientFriendsGroup"
      "sList\022\020\n\010bremoval\030\001 \001(\010\022\024\n\014bincremental\030"
      "\002 \001(\010\022>\n\014friendGroups\030\003 \003(\0132(.CMsgClient"
      "FriendsGroupsList.FriendGroup\022H\n\013members"
      "hips\030\004 \003(\01323.CMsgClientFriendsGroupsList"
      ".FriendGroupsMembership\0325\n\013FriendGroup\022\020"
      "\n\010nGroupID\030\001 \001(\005\022\024\n\014strGroupName\030\002 \001(\t\032="
      "\n\026FriendGroupsMembership\022\021\n\tulSteamID\030\001 "
      "\001(\006\022\020\n\010nGroupID\030\002 \001(\005\"\272\001\n\034CMsgClientPlay"
      "erNicknameList\022\017\n\007removal\030\001 \001(\010\022\023\n\013incre"
      "mental\030\002 \001(\010\022\?\n\tnicknames\030\003 \003(\0132,.CMsgCl"
      "ientPlayerNicknameList.PlayerNickname\0323\n"
      "\016PlayerNickname\022\017\n\007steamid\030\001 \001(\006\022\020\n\010nick"
      "name\030\003 \001(\t\"@\n\033CMsgClientSetPlayerNicknam"
      "e\022\017\n\007steamid\030\001 \001(\006\022\020\n\010nickname\030\002 \001(\t\"6\n#"
      "CMsgClientSetPlayerNicknameResponse\022\017\n\007e"
      "result\030\001 \001(\r\"O\n\033CMsgClientRequestFriendD"
      "ata\022\037\n\027persona_state_requested\030\001 \001(\r\022\017\n\007"
      "friends\030\002 \003(\006\"\327\001\n\026CMsgClientChangeStatus"
      "\022\025\n\rpersona_state\030\001 \001(\r\022\023\n\013player_name\030\002"
      " \001(\t\022\036\n\026is_auto_generated_name\030\003 \001(\010\022\025\n\r"
      "high_priority\030\004 \001(\010\022\033\n\023persona_set_by_us"
      "er\030\005 \001(\010\022\036\n\023persona_state_flags\030\006 \001(\r:\0010"
      "\022\035\n\025need_persona_response\030\007 \001(\010\"@\n\031CMsgP"
      "ersonaChangeResponse\022\016\n\006result\030\001 \001(\r\022\023\n\013"
      "player_name\030\002 \001(\t\"\337\007\n\026CMsgClientPersonaS"
      "tate\022\024\n\014status_flags\030\001 \001(\r\022/\n\007friends\030\002 "
      "\003(\0132\036.CMsgClientPersonaState.Friend\032\375\006\n\006"
      "Friend\022\020\n\010friendid\030\001 \001(\006\022\025\n\rpersona_stat"
      "e\030\002 \001(\r\022\032\n\022game_played_app_id\030\003 \001(\r\022\026\n\016g"
      "ame_server_ip\030\004 \001(\r\022\030\n\020game_server_port\030"
      "\005 \001(\r\022\033\n\023persona_state_flags\030\006 \001(\r\022 \n\030on"
      "line_session_instances\030\007 \001(\r\022\035\n\025publishe"
      "d_instance_id\030\010 \001(\r\022\033\n\023persona_set_by_us"
      "er\030\n \001(\010\022\023\n\013player_name\030\017 \001(\t\022\022\n\nquery_p"
      "ort\030\024 \001(\r\022\026\n\016steamid_source\030\031 \001(\006\022\023\n\013ava"
      "tar_hash\030\037 \001(\014\022\023\n\013last_logoff\030- \001(\r\022\022\n\nl"
      "ast_logon\030. \001(\r\022\030\n\020last_seen_online\030/ \001("
      "\r\022\021\n\tclan_rank\0302 \001(\r\022\021\n\tgame_name\0307 \001(\t\022"
      "\016\n\006gameid\0308 \001(\006\022\026\n\016game_data_blob\030< \001(\014\022"
      ":\n\tclan_data\030@ \001(\0132\'.CMsgClientPersonaSt"
      "ate.Friend.ClanData\022\020\n\010clan_tag\030A \001(\t\0228\n"
      "\rrich_presence\030G \003(\0132!.CMsgClientPersona"
      "State.Friend.KV\022\024\n\014broadcast_id\030H \001(\006\022\025\n"
      "\rgame_lobby_id\030I \001(\006\022$\n\034watching_broadca"
      "st_accountid\030J \001(\r\022 \n\030watching_broadcast"
      "_appid\030K \001(\r\022\"\n\032watching_broadcast_viewe"
      "rs\030L \001(\r\022 \n\030watching_broadcast_title\030M \001"
      "(\t\0325\n\010ClanData\022\022\n\nogg_app_id\030\001 \001(\r\022\025\n\rch"
      "at_group_id\030\002 \001(\004\032 \n\002KV\022\013\n\003key\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\t\"5\n\033CMsgClientFriendProfileIn"
      "fo\022\026\n\016steamid_friend\030\001 \001(\006\"\332\001\n#CMsgClien"
      "tFriendProfileInfoResponse\022\022\n\007eresult\030\001 "
      "\001(\005:\0012\022\026\n\016steamid_friend\030\002 \001(\006\022\024\n\014time_c"
      "reated\030\003 \001(\r\022\021\n\treal_name\030\004 \001(\t\022\021\n\tcity_"
      "name\030\005 \001(\t\022\022\n\nstate_name\030\006 \001(\t\022\024\n\014countr"
      "y_name\030\007 \001(\t\022\020\n\010headline\030\010 \001(\t\022\017\n\007summar"
      "y\030\t \001(\t\"[\n\034CMsgClientCreateFriendsGroup\022"
      "\017\n\007steamid\030\001 \001(\006\022\021\n\tgroupname\030\002 \001(\t\022\027\n\017s"
      "teamid_friends\030\003 \003(\006\"H\n$CMsgClientCreate"
      "FriendsGroupResponse\022\017\n\007eresult\030\001 \001(\r\022\017\n"
      "\007groupid\030\002 \001(\005\"@\n\034CMsgClientDeleteFriend"
      "sGroup\022\017\n\007steamid\030\001 \001(\006\022\017\n\007groupid\030\002 \001(\005"
      "\"7\n$CMsgClientDeleteFriendsGroupResponse"
      "\022\017\n\007eresult\030\001 \001(\r\"\202\001\n\034CMsgClientManageFr"
      "iendsGroup\022\017\n\007groupid\030\001 \001(\005\022\021\n\tgroupname"
      "\030\002 \001(\t\022\035\n\025steamid_friends_added\030\003 \003(\006\022\037\n"
      "\027steamid_friends_removed\030\004 \003(\006\"7\n$CMsgCl"
      "ientManageFriendsGroupResponse\022\017\n\007eresul"
      "t\030\001 \001(\r\"B\n\032CMsgClientAddFriendToGroup\022\017\n"
      "\007groupid\030\001 \001(\005\022\023\n\013steamiduser\030\002 \001(\006\"5\n\"C"
      "MsgClientAddFriendToGroupResponse\022\017\n\007ere"
      "sult\030\001 \001(\r\"G\n\037CMsgClientRemoveFriendFrom"
      "Group\022\017\n\007groupid\030\001 \001(\005\022\023\n\013steamiduser\030\002 "
      "\001(\006\":\n\'CMsgClientRemoveFriendFromGroupRe"
      "sponse\022\017\n\007eresult\030\001 \001(\r\"\033\n\031CMsgClientGet"
      "EmoticonList\"\270\001\n\026CMsgClientEmoticonList\022"
      "3\n\temoticons\030\001 \003(\0132 .CMsgClientEmoticonL"
      "ist.Emoticon\032i\n\010Emoticon\022\014\n\004name\030\001 \001(\t\022\r"
      "\n\005count\030\002 \001(\005\022\026\n\016time_last_used\030\003 \001(\r\022\021\n"
      "\tuse_count\030\004 \001(\r\022\025\n\rtime_received\030\005 \001(\rB"
      "\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4126);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_clientserver_friends.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto

// ===================================================================

void CMsgClientFriendMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendMsg::kSteamidFieldNumber;
const int CMsgClientFriendMsg::kChatEntryTypeFieldNumber;
const int CMsgClientFriendMsg::kMessageFieldNumber;
const int CMsgClientFriendMsg::kRtime32ServerTimestampFieldNumber;
const int CMsgClientFriendMsg::kEchoToSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendMsg::CMsgClientFriendMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendMsg)
}
CMsgClientFriendMsg::CMsgClientFriendMsg(const CMsgClientFriendMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&echo_to_sender_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(echo_to_sender_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendMsg)
}

void CMsgClientFriendMsg::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_to_sender_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(echo_to_sender_));
}

CMsgClientFriendMsg::~CMsgClientFriendMsg() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendMsg)
  SharedDtor();
}

void CMsgClientFriendMsg::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendMsg::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendMsg& CMsgClientFriendMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendMsg.base);
  return *internal_default_instance();
}


void CMsgClientFriendMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&echo_to_sender_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(echo_to_sender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_entry_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat_entry_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_entry_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_server_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_rtime32_server_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_server_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool echo_to_sender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_echo_to_sender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &echo_to_sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendMsg)
  return false;
#undef DO_
}

void CMsgClientFriendMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional int32 chat_entry_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_entry_type(), output);
  }

  // optional bytes message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  // optional fixed32 rtime32_server_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->rtime32_server_timestamp(), output);
  }

  // optional bool echo_to_sender = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->echo_to_sender(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendMsg)
}

::google::protobuf::uint8* CMsgClientFriendMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional int32 chat_entry_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_entry_type(), target);
  }

  // optional bytes message = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  // optional fixed32 rtime32_server_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->rtime32_server_timestamp(), target);
  }

  // optional bool echo_to_sender = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->echo_to_sender(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendMsg)
  return target;
}

size_t CMsgClientFriendMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 chat_entry_type = 2;
    if (has_chat_entry_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_entry_type());
    }

    // optional fixed32 rtime32_server_timestamp = 4;
    if (has_rtime32_server_timestamp()) {
      total_size += 1 + 4;
    }

    // optional bool echo_to_sender = 5;
    if (has_echo_to_sender()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendMsg)
    MergeFrom(*source);
  }
}

void CMsgClientFriendMsg::MergeFrom(const CMsgClientFriendMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      chat_entry_type_ = from.chat_entry_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      rtime32_server_timestamp_ = from.rtime32_server_timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      echo_to_sender_ = from.echo_to_sender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendMsg::CopyFrom(const CMsgClientFriendMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendMsg::IsInitialized() const {
  return true;
}

void CMsgClientFriendMsg::Swap(CMsgClientFriendMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendMsg::InternalSwap(CMsgClientFriendMsg* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(chat_entry_type_, other->chat_entry_type_);
  swap(rtime32_server_timestamp_, other->rtime32_server_timestamp_);
  swap(echo_to_sender_, other->echo_to_sender_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendMsg::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendMsgIncoming::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendMsgIncoming::kSteamidFromFieldNumber;
const int CMsgClientFriendMsgIncoming::kChatEntryTypeFieldNumber;
const int CMsgClientFriendMsgIncoming::kFromLimitedAccountFieldNumber;
const int CMsgClientFriendMsgIncoming::kMessageFieldNumber;
const int CMsgClientFriendMsgIncoming::kRtime32ServerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendMsgIncoming::CMsgClientFriendMsgIncoming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendMsgIncoming.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendMsgIncoming)
}
CMsgClientFriendMsgIncoming::CMsgClientFriendMsgIncoming(const CMsgClientFriendMsgIncoming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&steamid_from_, &from.steamid_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime32_server_timestamp_) -
    reinterpret_cast<char*>(&steamid_from_)) + sizeof(rtime32_server_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendMsgIncoming)
}

void CMsgClientFriendMsgIncoming::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime32_server_timestamp_) -
      reinterpret_cast<char*>(&steamid_from_)) + sizeof(rtime32_server_timestamp_));
}

CMsgClientFriendMsgIncoming::~CMsgClientFriendMsgIncoming() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendMsgIncoming)
  SharedDtor();
}

void CMsgClientFriendMsgIncoming::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendMsgIncoming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendMsgIncoming::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendMsgIncoming& CMsgClientFriendMsgIncoming::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendMsgIncoming.base);
  return *internal_default_instance();
}


void CMsgClientFriendMsgIncoming::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendMsgIncoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&steamid_from_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime32_server_timestamp_) -
        reinterpret_cast<char*>(&steamid_from_)) + sizeof(rtime32_server_timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendMsgIncoming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendMsgIncoming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_entry_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat_entry_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_entry_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_limited_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_limited_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_limited_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_server_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_rtime32_server_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_server_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendMsgIncoming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendMsgIncoming)
  return false;
#undef DO_
}

void CMsgClientFriendMsgIncoming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendMsgIncoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_from = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_from(), output);
  }

  // optional int32 chat_entry_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_entry_type(), output);
  }

  // optional bool from_limited_account = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_limited_account(), output);
  }

  // optional bytes message = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->message(), output);
  }

  // optional fixed32 rtime32_server_timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->rtime32_server_timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendMsgIncoming)
}

::google::protobuf::uint8* CMsgClientFriendMsgIncoming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendMsgIncoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_from = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_from(), target);
  }

  // optional int32 chat_entry_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_entry_type(), target);
  }

  // optional bool from_limited_account = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_limited_account(), target);
  }

  // optional bytes message = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->message(), target);
  }

  // optional fixed32 rtime32_server_timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->rtime32_server_timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendMsgIncoming)
  return target;
}

size_t CMsgClientFriendMsgIncoming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendMsgIncoming)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes message = 4;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

    // optional fixed64 steamid_from = 1;
    if (has_steamid_from()) {
      total_size += 1 + 8;
    }

    // optional int32 chat_entry_type = 2;
    if (has_chat_entry_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_entry_type());
    }

    // optional bool from_limited_account = 3;
    if (has_from_limited_account()) {
      total_size += 1 + 1;
    }

    // optional fixed32 rtime32_server_timestamp = 5;
    if (has_rtime32_server_timestamp()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendMsgIncoming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendMsgIncoming)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendMsgIncoming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendMsgIncoming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendMsgIncoming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendMsgIncoming)
    MergeFrom(*source);
  }
}

void CMsgClientFriendMsgIncoming::MergeFrom(const CMsgClientFriendMsgIncoming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendMsgIncoming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_from_ = from.steamid_from_;
    }
    if (cached_has_bits & 0x00000004u) {
      chat_entry_type_ = from.chat_entry_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      from_limited_account_ = from.from_limited_account_;
    }
    if (cached_has_bits & 0x00000010u) {
      rtime32_server_timestamp_ = from.rtime32_server_timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendMsgIncoming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendMsgIncoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendMsgIncoming::CopyFrom(const CMsgClientFriendMsgIncoming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendMsgIncoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendMsgIncoming::IsInitialized() const {
  return true;
}

void CMsgClientFriendMsgIncoming::Swap(CMsgClientFriendMsgIncoming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendMsgIncoming::InternalSwap(CMsgClientFriendMsgIncoming* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_from_, other->steamid_from_);
  swap(chat_entry_type_, other->chat_entry_type_);
  swap(from_limited_account_, other->from_limited_account_);
  swap(rtime32_server_timestamp_, other->rtime32_server_timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendMsgIncoming::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAddFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAddFriend::kSteamidToAddFieldNumber;
const int CMsgClientAddFriend::kAccountnameOrEmailToAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAddFriend::CMsgClientAddFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAddFriend)
}
CMsgClientAddFriend::CMsgClientAddFriend(const CMsgClientAddFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_or_email_to_add_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountname_or_email_to_add()) {
    accountname_or_email_to_add_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_or_email_to_add_);
  }
  steamid_to_add_ = from.steamid_to_add_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAddFriend)
}

void CMsgClientAddFriend::SharedCtor() {
  accountname_or_email_to_add_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_to_add_ = GOOGLE_ULONGLONG(0);
}

CMsgClientAddFriend::~CMsgClientAddFriend() {
  // @@protoc_insertion_point(destructor:CMsgClientAddFriend)
  SharedDtor();
}

void CMsgClientAddFriend::SharedDtor() {
  accountname_or_email_to_add_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAddFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAddFriend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAddFriend& CMsgClientAddFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriend.base);
  return *internal_default_instance();
}


void CMsgClientAddFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAddFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    accountname_or_email_to_add_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_to_add_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAddFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAddFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_to_add = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_to_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_to_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string accountname_or_email_to_add = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname_or_email_to_add()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname_or_email_to_add().data(), static_cast<int>(this->accountname_or_email_to_add().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientAddFriend.accountname_or_email_to_add");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAddFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAddFriend)
  return false;
#undef DO_
}

void CMsgClientAddFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAddFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_to_add = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_to_add(), output);
  }

  // optional string accountname_or_email_to_add = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname_or_email_to_add().data(), static_cast<int>(this->accountname_or_email_to_add().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAddFriend.accountname_or_email_to_add");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname_or_email_to_add(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAddFriend)
}

::google::protobuf::uint8* CMsgClientAddFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAddFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_to_add = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_to_add(), target);
  }

  // optional string accountname_or_email_to_add = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname_or_email_to_add().data(), static_cast<int>(this->accountname_or_email_to_add().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAddFriend.accountname_or_email_to_add");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname_or_email_to_add(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAddFriend)
  return target;
}

size_t CMsgClientAddFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAddFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string accountname_or_email_to_add = 2;
    if (has_accountname_or_email_to_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname_or_email_to_add());
    }

    // optional fixed64 steamid_to_add = 1;
    if (has_steamid_to_add()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAddFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAddFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAddFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAddFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAddFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAddFriend)
    MergeFrom(*source);
  }
}

void CMsgClientAddFriend::MergeFrom(const CMsgClientAddFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAddFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_accountname_or_email_to_add();
      accountname_or_email_to_add_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_or_email_to_add_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_to_add_ = from.steamid_to_add_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAddFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAddFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAddFriend::CopyFrom(const CMsgClientAddFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAddFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAddFriend::IsInitialized() const {
  return true;
}

void CMsgClientAddFriend::Swap(CMsgClientAddFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAddFriend::InternalSwap(CMsgClientAddFriend* other) {
  using std::swap;
  accountname_or_email_to_add_.Swap(&other->accountname_or_email_to_add_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_to_add_, other->steamid_to_add_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAddFriend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAddFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAddFriendResponse::kEresultFieldNumber;
const int CMsgClientAddFriendResponse::kSteamIdAddedFieldNumber;
const int CMsgClientAddFriendResponse::kPersonaNameAddedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAddFriendResponse::CMsgClientAddFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAddFriendResponse)
}
CMsgClientAddFriendResponse::CMsgClientAddFriendResponse(const CMsgClientAddFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_added_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name_added()) {
    persona_name_added_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_added_);
  }
  ::memcpy(&steam_id_added_, &from.steam_id_added_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_added_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAddFriendResponse)
}

void CMsgClientAddFriendResponse::SharedCtor() {
  persona_name_added_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steam_id_added_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2;
}

CMsgClientAddFriendResponse::~CMsgClientAddFriendResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientAddFriendResponse)
  SharedDtor();
}

void CMsgClientAddFriendResponse::SharedDtor() {
  persona_name_added_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAddFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAddFriendResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAddFriendResponse& CMsgClientAddFriendResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendResponse.base);
  return *internal_default_instance();
}


void CMsgClientAddFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAddFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_name_added_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    steam_id_added_ = GOOGLE_ULONGLONG(0);
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAddFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAddFriendResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id_added = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id_added();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_added_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name_added = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name_added()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name_added().data(), static_cast<int>(this->persona_name_added().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientAddFriendResponse.persona_name_added");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAddFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAddFriendResponse)
  return false;
#undef DO_
}

void CMsgClientAddFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAddFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 steam_id_added = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id_added(), output);
  }

  // optional string persona_name_added = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name_added().data(), static_cast<int>(this->persona_name_added().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAddFriendResponse.persona_name_added");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->persona_name_added(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAddFriendResponse)
}

::google::protobuf::uint8* CMsgClientAddFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAddFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 steam_id_added = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id_added(), target);
  }

  // optional string persona_name_added = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name_added().data(), static_cast<int>(this->persona_name_added().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientAddFriendResponse.persona_name_added");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->persona_name_added(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAddFriendResponse)
  return target;
}

size_t CMsgClientAddFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAddFriendResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string persona_name_added = 3;
    if (has_persona_name_added()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name_added());
    }

    // optional fixed64 steam_id_added = 2;
    if (has_steam_id_added()) {
      total_size += 1 + 8;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAddFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAddFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAddFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAddFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAddFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAddFriendResponse)
    MergeFrom(*source);
  }
}

void CMsgClientAddFriendResponse::MergeFrom(const CMsgClientAddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAddFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name_added();
      persona_name_added_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_added_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_added_ = from.steam_id_added_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAddFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAddFriendResponse::CopyFrom(const CMsgClientAddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAddFriendResponse::IsInitialized() const {
  return true;
}

void CMsgClientAddFriendResponse::Swap(CMsgClientAddFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAddFriendResponse::InternalSwap(CMsgClientAddFriendResponse* other) {
  using std::swap;
  persona_name_added_.Swap(&other->persona_name_added_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_added_, other->steam_id_added_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAddFriendResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRemoveFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRemoveFriend::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRemoveFriend::CMsgClientRemoveFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRemoveFriend)
}
CMsgClientRemoveFriend::CMsgClientRemoveFriend(const CMsgClientRemoveFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendid_ = from.friendid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRemoveFriend)
}

void CMsgClientRemoveFriend::SharedCtor() {
  friendid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientRemoveFriend::~CMsgClientRemoveFriend() {
  // @@protoc_insertion_point(destructor:CMsgClientRemoveFriend)
  SharedDtor();
}

void CMsgClientRemoveFriend::SharedDtor() {
}

void CMsgClientRemoveFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRemoveFriend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRemoveFriend& CMsgClientRemoveFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriend.base);
  return *internal_default_instance();
}


void CMsgClientRemoveFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRemoveFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRemoveFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRemoveFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_friendid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRemoveFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRemoveFriend)
  return false;
#undef DO_
}

void CMsgClientRemoveFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRemoveFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friendid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRemoveFriend)
}

::google::protobuf::uint8* CMsgClientRemoveFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRemoveFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friendid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRemoveFriend)
  return target;
}

size_t CMsgClientRemoveFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRemoveFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 friendid = 1;
  if (has_friendid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRemoveFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRemoveFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRemoveFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRemoveFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRemoveFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRemoveFriend)
    MergeFrom(*source);
  }
}

void CMsgClientRemoveFriend::MergeFrom(const CMsgClientRemoveFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRemoveFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_friendid()) {
    set_friendid(from.friendid());
  }
}

void CMsgClientRemoveFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRemoveFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRemoveFriend::CopyFrom(const CMsgClientRemoveFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRemoveFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRemoveFriend::IsInitialized() const {
  return true;
}

void CMsgClientRemoveFriend::Swap(CMsgClientRemoveFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRemoveFriend::InternalSwap(CMsgClientRemoveFriend* other) {
  using std::swap;
  swap(friendid_, other->friendid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRemoveFriend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientHideFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientHideFriend::kFriendidFieldNumber;
const int CMsgClientHideFriend::kHideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientHideFriend::CMsgClientHideFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientHideFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientHideFriend)
}
CMsgClientHideFriend::CMsgClientHideFriend(const CMsgClientHideFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&friendid_, &from.friendid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hide_) -
    reinterpret_cast<char*>(&friendid_)) + sizeof(hide_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientHideFriend)
}

void CMsgClientHideFriend::SharedCtor() {
  ::memset(&friendid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hide_) -
      reinterpret_cast<char*>(&friendid_)) + sizeof(hide_));
}

CMsgClientHideFriend::~CMsgClientHideFriend() {
  // @@protoc_insertion_point(destructor:CMsgClientHideFriend)
  SharedDtor();
}

void CMsgClientHideFriend::SharedDtor() {
}

void CMsgClientHideFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientHideFriend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientHideFriend& CMsgClientHideFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientHideFriend.base);
  return *internal_default_instance();
}


void CMsgClientHideFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientHideFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&friendid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hide_) -
        reinterpret_cast<char*>(&friendid_)) + sizeof(hide_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientHideFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientHideFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_friendid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hide = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientHideFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientHideFriend)
  return false;
#undef DO_
}

void CMsgClientHideFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientHideFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friendid(), output);
  }

  // optional bool hide = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hide(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientHideFriend)
}

::google::protobuf::uint8* CMsgClientHideFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientHideFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friendid(), target);
  }

  // optional bool hide = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hide(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientHideFriend)
  return target;
}

size_t CMsgClientHideFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientHideFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 friendid = 1;
    if (has_friendid()) {
      total_size += 1 + 8;
    }

    // optional bool hide = 2;
    if (has_hide()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientHideFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientHideFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientHideFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientHideFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientHideFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientHideFriend)
    MergeFrom(*source);
  }
}

void CMsgClientHideFriend::MergeFrom(const CMsgClientHideFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientHideFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      friendid_ = from.friendid_;
    }
    if (cached_has_bits & 0x00000002u) {
      hide_ = from.hide_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientHideFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientHideFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientHideFriend::CopyFrom(const CMsgClientHideFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientHideFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientHideFriend::IsInitialized() const {
  return true;
}

void CMsgClientHideFriend::Swap(CMsgClientHideFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientHideFriend::InternalSwap(CMsgClientHideFriend* other) {
  using std::swap;
  swap(friendid_, other->friendid_);
  swap(hide_, other->hide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientHideFriend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendsList_Friend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendsList_Friend::kUlfriendidFieldNumber;
const int CMsgClientFriendsList_Friend::kEfriendrelationshipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendsList_Friend::CMsgClientFriendsList_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsList_Friend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendsList.Friend)
}
CMsgClientFriendsList_Friend::CMsgClientFriendsList_Friend(const CMsgClientFriendsList_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ulfriendid_, &from.ulfriendid_,
    static_cast<size_t>(reinterpret_cast<char*>(&efriendrelationship_) -
    reinterpret_cast<char*>(&ulfriendid_)) + sizeof(efriendrelationship_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendsList.Friend)
}

void CMsgClientFriendsList_Friend::SharedCtor() {
  ::memset(&ulfriendid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&efriendrelationship_) -
      reinterpret_cast<char*>(&ulfriendid_)) + sizeof(efriendrelationship_));
}

CMsgClientFriendsList_Friend::~CMsgClientFriendsList_Friend() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendsList.Friend)
  SharedDtor();
}

void CMsgClientFriendsList_Friend::SharedDtor() {
}

void CMsgClientFriendsList_Friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendsList_Friend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendsList_Friend& CMsgClientFriendsList_Friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsList_Friend.base);
  return *internal_default_instance();
}


void CMsgClientFriendsList_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendsList.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ulfriendid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&efriendrelationship_) -
        reinterpret_cast<char*>(&ulfriendid_)) + sizeof(efriendrelationship_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendsList_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendsList.Friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 ulfriendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_ulfriendid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &ulfriendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 efriendrelationship = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_efriendrelationship();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &efriendrelationship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendsList.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendsList.Friend)
  return false;
#undef DO_
}

void CMsgClientFriendsList_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendsList.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 ulfriendid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->ulfriendid(), output);
  }

  // optional uint32 efriendrelationship = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->efriendrelationship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendsList.Friend)
}

::google::protobuf::uint8* CMsgClientFriendsList_Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendsList.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 ulfriendid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->ulfriendid(), target);
  }

  // optional uint32 efriendrelationship = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->efriendrelationship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendsList.Friend)
  return target;
}

size_t CMsgClientFriendsList_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendsList.Friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 ulfriendid = 1;
    if (has_ulfriendid()) {
      total_size += 1 + 8;
    }

    // optional uint32 efriendrelationship = 2;
    if (has_efriendrelationship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->efriendrelationship());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendsList_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendsList.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendsList_Friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendsList_Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendsList.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendsList.Friend)
    MergeFrom(*source);
  }
}

void CMsgClientFriendsList_Friend::MergeFrom(const CMsgClientFriendsList_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendsList.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ulfriendid_ = from.ulfriendid_;
    }
    if (cached_has_bits & 0x00000002u) {
      efriendrelationship_ = from.efriendrelationship_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendsList_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendsList.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendsList_Friend::CopyFrom(const CMsgClientFriendsList_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendsList.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendsList_Friend::IsInitialized() const {
  return true;
}

void CMsgClientFriendsList_Friend::Swap(CMsgClientFriendsList_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendsList_Friend::InternalSwap(CMsgClientFriendsList_Friend* other) {
  using std::swap;
  swap(ulfriendid_, other->ulfriendid_);
  swap(efriendrelationship_, other->efriendrelationship_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendsList_Friend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendsList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendsList::kBincrementalFieldNumber;
const int CMsgClientFriendsList::kFriendsFieldNumber;
const int CMsgClientFriendsList::kMaxFriendCountFieldNumber;
const int CMsgClientFriendsList::kActiveFriendCountFieldNumber;
const int CMsgClientFriendsList::kFriendsLimitHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendsList::CMsgClientFriendsList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendsList)
}
CMsgClientFriendsList::CMsgClientFriendsList(const CMsgClientFriendsList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_friend_count_, &from.max_friend_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&active_friend_count_) -
    reinterpret_cast<char*>(&max_friend_count_)) + sizeof(active_friend_count_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendsList)
}

void CMsgClientFriendsList::SharedCtor() {
  ::memset(&max_friend_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_friend_count_) -
      reinterpret_cast<char*>(&max_friend_count_)) + sizeof(active_friend_count_));
}

CMsgClientFriendsList::~CMsgClientFriendsList() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendsList)
  SharedDtor();
}

void CMsgClientFriendsList::SharedDtor() {
}

void CMsgClientFriendsList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendsList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendsList& CMsgClientFriendsList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsList.base);
  return *internal_default_instance();
}


void CMsgClientFriendsList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&max_friend_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&active_friend_count_) -
        reinterpret_cast<char*>(&max_friend_count_)) + sizeof(active_friend_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendsList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bincremental = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bincremental();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bincremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientFriendsList.Friend friends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_friend_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_friend_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_friend_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 active_friend_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_active_friend_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_friend_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool friends_limit_hit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_friends_limit_hit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &friends_limit_hit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendsList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendsList)
  return false;
#undef DO_
}

void CMsgClientFriendsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bincremental = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bincremental(), output);
  }

  // repeated .CMsgClientFriendsList.Friend friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->friends(static_cast<int>(i)),
      output);
  }

  // optional uint32 max_friend_count = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_friend_count(), output);
  }

  // optional uint32 active_friend_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->active_friend_count(), output);
  }

  // optional bool friends_limit_hit = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->friends_limit_hit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendsList)
}

::google::protobuf::uint8* CMsgClientFriendsList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bincremental = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bincremental(), target);
  }

  // repeated .CMsgClientFriendsList.Friend friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->friends(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 max_friend_count = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_friend_count(), target);
  }

  // optional uint32 active_friend_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->active_friend_count(), target);
  }

  // optional bool friends_limit_hit = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->friends_limit_hit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendsList)
  return target;
}

size_t CMsgClientFriendsList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendsList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientFriendsList.Friend friends = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friends(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 max_friend_count = 3;
    if (has_max_friend_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_friend_count());
    }

    // optional bool bincremental = 1;
    if (has_bincremental()) {
      total_size += 1 + 1;
    }

    // optional bool friends_limit_hit = 5;
    if (has_friends_limit_hit()) {
      total_size += 1 + 1;
    }

    // optional uint32 active_friend_count = 4;
    if (has_active_friend_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_friend_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendsList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendsList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendsList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendsList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendsList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendsList)
    MergeFrom(*source);
  }
}

void CMsgClientFriendsList::MergeFrom(const CMsgClientFriendsList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendsList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      max_friend_count_ = from.max_friend_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      bincremental_ = from.bincremental_;
    }
    if (cached_has_bits & 0x00000004u) {
      friends_limit_hit_ = from.friends_limit_hit_;
    }
    if (cached_has_bits & 0x00000008u) {
      active_friend_count_ = from.active_friend_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendsList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendsList::CopyFrom(const CMsgClientFriendsList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendsList::IsInitialized() const {
  return true;
}

void CMsgClientFriendsList::Swap(CMsgClientFriendsList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendsList::InternalSwap(CMsgClientFriendsList* other) {
  using std::swap;
  CastToBase(&friends_)->InternalSwap(CastToBase(&other->friends_));
  swap(max_friend_count_, other->max_friend_count_);
  swap(bincremental_, other->bincremental_);
  swap(friends_limit_hit_, other->friends_limit_hit_);
  swap(active_friend_count_, other->active_friend_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendsList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendsGroupsList_FriendGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendsGroupsList_FriendGroup::kNGroupIDFieldNumber;
const int CMsgClientFriendsGroupsList_FriendGroup::kStrGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendsGroupsList_FriendGroup::CMsgClientFriendsGroupsList_FriendGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendsGroupsList.FriendGroup)
}
CMsgClientFriendsGroupsList_FriendGroup::CMsgClientFriendsGroupsList_FriendGroup(const CMsgClientFriendsGroupsList_FriendGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strgroupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strgroupname()) {
    strgroupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strgroupname_);
  }
  ngroupid_ = from.ngroupid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendsGroupsList.FriendGroup)
}

void CMsgClientFriendsGroupsList_FriendGroup::SharedCtor() {
  strgroupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngroupid_ = 0;
}

CMsgClientFriendsGroupsList_FriendGroup::~CMsgClientFriendsGroupsList_FriendGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendsGroupsList.FriendGroup)
  SharedDtor();
}

void CMsgClientFriendsGroupsList_FriendGroup::SharedDtor() {
  strgroupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendsGroupsList_FriendGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendsGroupsList_FriendGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendsGroupsList_FriendGroup& CMsgClientFriendsGroupsList_FriendGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroup.base);
  return *internal_default_instance();
}


void CMsgClientFriendsGroupsList_FriendGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendsGroupsList.FriendGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    strgroupname_.ClearNonDefaultToEmptyNoArena();
  }
  ngroupid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendsGroupsList_FriendGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendsGroupsList.FriendGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nGroupID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ngroupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngroupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strGroupName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strgroupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strgroupname().data(), static_cast<int>(this->strgroupname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendsGroupsList.FriendGroup.strGroupName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendsGroupsList.FriendGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendsGroupsList.FriendGroup)
  return false;
#undef DO_
}

void CMsgClientFriendsGroupsList_FriendGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendsGroupsList.FriendGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 nGroupID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ngroupid(), output);
  }

  // optional string strGroupName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strgroupname().data(), static_cast<int>(this->strgroupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendsGroupsList.FriendGroup.strGroupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strgroupname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendsGroupsList.FriendGroup)
}

::google::protobuf::uint8* CMsgClientFriendsGroupsList_FriendGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendsGroupsList.FriendGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 nGroupID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ngroupid(), target);
  }

  // optional string strGroupName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strgroupname().data(), static_cast<int>(this->strgroupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendsGroupsList.FriendGroup.strGroupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strgroupname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendsGroupsList.FriendGroup)
  return target;
}

size_t CMsgClientFriendsGroupsList_FriendGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendsGroupsList.FriendGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string strGroupName = 2;
    if (has_strgroupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strgroupname());
    }

    // optional int32 nGroupID = 1;
    if (has_ngroupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngroupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendsGroupsList_FriendGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendsGroupsList.FriendGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendsGroupsList_FriendGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendsGroupsList_FriendGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendsGroupsList.FriendGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendsGroupsList.FriendGroup)
    MergeFrom(*source);
  }
}

void CMsgClientFriendsGroupsList_FriendGroup::MergeFrom(const CMsgClientFriendsGroupsList_FriendGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendsGroupsList.FriendGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strgroupname();
      strgroupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strgroupname_);
    }
    if (cached_has_bits & 0x00000002u) {
      ngroupid_ = from.ngroupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendsGroupsList_FriendGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendsGroupsList.FriendGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendsGroupsList_FriendGroup::CopyFrom(const CMsgClientFriendsGroupsList_FriendGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendsGroupsList.FriendGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendsGroupsList_FriendGroup::IsInitialized() const {
  return true;
}

void CMsgClientFriendsGroupsList_FriendGroup::Swap(CMsgClientFriendsGroupsList_FriendGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendsGroupsList_FriendGroup::InternalSwap(CMsgClientFriendsGroupsList_FriendGroup* other) {
  using std::swap;
  strgroupname_.Swap(&other->strgroupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ngroupid_, other->ngroupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendsGroupsList_FriendGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendsGroupsList_FriendGroupsMembership::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendsGroupsList_FriendGroupsMembership::kUlSteamIDFieldNumber;
const int CMsgClientFriendsGroupsList_FriendGroupsMembership::kNGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendsGroupsList_FriendGroupsMembership::CMsgClientFriendsGroupsList_FriendGroupsMembership()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendsGroupsList.FriendGroupsMembership)
}
CMsgClientFriendsGroupsList_FriendGroupsMembership::CMsgClientFriendsGroupsList_FriendGroupsMembership(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ulsteamid_, &from.ulsteamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ngroupid_) -
    reinterpret_cast<char*>(&ulsteamid_)) + sizeof(ngroupid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendsGroupsList.FriendGroupsMembership)
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::SharedCtor() {
  ::memset(&ulsteamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ngroupid_) -
      reinterpret_cast<char*>(&ulsteamid_)) + sizeof(ngroupid_));
}

CMsgClientFriendsGroupsList_FriendGroupsMembership::~CMsgClientFriendsGroupsList_FriendGroupsMembership() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  SharedDtor();
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::SharedDtor() {
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendsGroupsList_FriendGroupsMembership::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendsGroupsList_FriendGroupsMembership& CMsgClientFriendsGroupsList_FriendGroupsMembership::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList_FriendGroupsMembership.base);
  return *internal_default_instance();
}


void CMsgClientFriendsGroupsList_FriendGroupsMembership::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ulsteamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ngroupid_) -
        reinterpret_cast<char*>(&ulsteamid_)) + sizeof(ngroupid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendsGroupsList_FriendGroupsMembership::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 ulSteamID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_ulsteamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &ulsteamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nGroupID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ngroupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngroupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  return false;
#undef DO_
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 ulSteamID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->ulsteamid(), output);
  }

  // optional int32 nGroupID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ngroupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendsGroupsList.FriendGroupsMembership)
}

::google::protobuf::uint8* CMsgClientFriendsGroupsList_FriendGroupsMembership::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 ulSteamID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->ulsteamid(), target);
  }

  // optional int32 nGroupID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ngroupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  return target;
}

size_t CMsgClientFriendsGroupsList_FriendGroupsMembership::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 ulSteamID = 1;
    if (has_ulsteamid()) {
      total_size += 1 + 8;
    }

    // optional int32 nGroupID = 2;
    if (has_ngroupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngroupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendsGroupsList_FriendGroupsMembership* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendsGroupsList_FriendGroupsMembership>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendsGroupsList.FriendGroupsMembership)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendsGroupsList.FriendGroupsMembership)
    MergeFrom(*source);
  }
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::MergeFrom(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ulsteamid_ = from.ulsteamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ngroupid_ = from.ngroupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::CopyFrom(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendsGroupsList.FriendGroupsMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendsGroupsList_FriendGroupsMembership::IsInitialized() const {
  return true;
}

void CMsgClientFriendsGroupsList_FriendGroupsMembership::Swap(CMsgClientFriendsGroupsList_FriendGroupsMembership* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendsGroupsList_FriendGroupsMembership::InternalSwap(CMsgClientFriendsGroupsList_FriendGroupsMembership* other) {
  using std::swap;
  swap(ulsteamid_, other->ulsteamid_);
  swap(ngroupid_, other->ngroupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendsGroupsList_FriendGroupsMembership::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendsGroupsList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendsGroupsList::kBremovalFieldNumber;
const int CMsgClientFriendsGroupsList::kBincrementalFieldNumber;
const int CMsgClientFriendsGroupsList::kFriendGroupsFieldNumber;
const int CMsgClientFriendsGroupsList::kMembershipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendsGroupsList::CMsgClientFriendsGroupsList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendsGroupsList)
}
CMsgClientFriendsGroupsList::CMsgClientFriendsGroupsList(const CMsgClientFriendsGroupsList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friendgroups_(from.friendgroups_),
      memberships_(from.memberships_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bremoval_, &from.bremoval_,
    static_cast<size_t>(reinterpret_cast<char*>(&bincremental_) -
    reinterpret_cast<char*>(&bremoval_)) + sizeof(bincremental_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendsGroupsList)
}

void CMsgClientFriendsGroupsList::SharedCtor() {
  ::memset(&bremoval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bincremental_) -
      reinterpret_cast<char*>(&bremoval_)) + sizeof(bincremental_));
}

CMsgClientFriendsGroupsList::~CMsgClientFriendsGroupsList() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendsGroupsList)
  SharedDtor();
}

void CMsgClientFriendsGroupsList::SharedDtor() {
}

void CMsgClientFriendsGroupsList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendsGroupsList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendsGroupsList& CMsgClientFriendsGroupsList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendsGroupsList.base);
  return *internal_default_instance();
}


void CMsgClientFriendsGroupsList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendsGroupsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendgroups_.Clear();
  memberships_.Clear();
  ::memset(&bremoval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bincremental_) -
      reinterpret_cast<char*>(&bremoval_)) + sizeof(bincremental_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendsGroupsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendsGroupsList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bremoval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bremoval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bremoval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bincremental = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bincremental();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bincremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friendgroups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_memberships()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendsGroupsList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendsGroupsList)
  return false;
#undef DO_
}

void CMsgClientFriendsGroupsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendsGroupsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bremoval = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bremoval(), output);
  }

  // optional bool bincremental = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bincremental(), output);
  }

  // repeated .CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendgroups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->friendgroups(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memberships_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->memberships(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendsGroupsList)
}

::google::protobuf::uint8* CMsgClientFriendsGroupsList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendsGroupsList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bremoval = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bremoval(), target);
  }

  // optional bool bincremental = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bincremental(), target);
  }

  // repeated .CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendgroups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->friendgroups(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memberships_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->memberships(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendsGroupsList)
  return target;
}

size_t CMsgClientFriendsGroupsList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendsGroupsList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->friendgroups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friendgroups(static_cast<int>(i)));
    }
  }

  // repeated .CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->memberships_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->memberships(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool bremoval = 1;
    if (has_bremoval()) {
      total_size += 1 + 1;
    }

    // optional bool bincremental = 2;
    if (has_bincremental()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendsGroupsList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendsGroupsList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendsGroupsList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendsGroupsList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendsGroupsList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendsGroupsList)
    MergeFrom(*source);
  }
}

void CMsgClientFriendsGroupsList::MergeFrom(const CMsgClientFriendsGroupsList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendsGroupsList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendgroups_.MergeFrom(from.friendgroups_);
  memberships_.MergeFrom(from.memberships_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bremoval_ = from.bremoval_;
    }
    if (cached_has_bits & 0x00000002u) {
      bincremental_ = from.bincremental_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendsGroupsList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendsGroupsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendsGroupsList::CopyFrom(const CMsgClientFriendsGroupsList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendsGroupsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendsGroupsList::IsInitialized() const {
  return true;
}

void CMsgClientFriendsGroupsList::Swap(CMsgClientFriendsGroupsList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendsGroupsList::InternalSwap(CMsgClientFriendsGroupsList* other) {
  using std::swap;
  CastToBase(&friendgroups_)->InternalSwap(CastToBase(&other->friendgroups_));
  CastToBase(&memberships_)->InternalSwap(CastToBase(&other->memberships_));
  swap(bremoval_, other->bremoval_);
  swap(bincremental_, other->bincremental_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendsGroupsList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPlayerNicknameList_PlayerNickname::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPlayerNicknameList_PlayerNickname::kSteamidFieldNumber;
const int CMsgClientPlayerNicknameList_PlayerNickname::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPlayerNicknameList_PlayerNickname::CMsgClientPlayerNicknameList_PlayerNickname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPlayerNicknameList_PlayerNickname.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPlayerNicknameList.PlayerNickname)
}
CMsgClientPlayerNicknameList_PlayerNickname::CMsgClientPlayerNicknameList_PlayerNickname(const CMsgClientPlayerNicknameList_PlayerNickname& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientPlayerNicknameList.PlayerNickname)
}

void CMsgClientPlayerNicknameList_PlayerNickname::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientPlayerNicknameList_PlayerNickname::~CMsgClientPlayerNicknameList_PlayerNickname() {
  // @@protoc_insertion_point(destructor:CMsgClientPlayerNicknameList.PlayerNickname)
  SharedDtor();
}

void CMsgClientPlayerNicknameList_PlayerNickname::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPlayerNicknameList_PlayerNickname::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPlayerNicknameList_PlayerNickname::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPlayerNicknameList_PlayerNickname& CMsgClientPlayerNicknameList_PlayerNickname::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPlayerNicknameList_PlayerNickname.base);
  return *internal_default_instance();
}


void CMsgClientPlayerNicknameList_PlayerNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPlayerNicknameList.PlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    nickname_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPlayerNicknameList_PlayerNickname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPlayerNicknameList.PlayerNickname)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPlayerNicknameList.PlayerNickname.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPlayerNicknameList.PlayerNickname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPlayerNicknameList.PlayerNickname)
  return false;
#undef DO_
}

void CMsgClientPlayerNicknameList_PlayerNickname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPlayerNicknameList.PlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPlayerNicknameList.PlayerNickname.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPlayerNicknameList.PlayerNickname)
}

::google::protobuf::uint8* CMsgClientPlayerNicknameList_PlayerNickname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPlayerNicknameList.PlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPlayerNicknameList.PlayerNickname.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPlayerNicknameList.PlayerNickname)
  return target;
}

size_t CMsgClientPlayerNicknameList_PlayerNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPlayerNicknameList.PlayerNickname)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPlayerNicknameList_PlayerNickname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPlayerNicknameList.PlayerNickname)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPlayerNicknameList_PlayerNickname* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPlayerNicknameList_PlayerNickname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPlayerNicknameList.PlayerNickname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPlayerNicknameList.PlayerNickname)
    MergeFrom(*source);
  }
}

void CMsgClientPlayerNicknameList_PlayerNickname::MergeFrom(const CMsgClientPlayerNicknameList_PlayerNickname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPlayerNicknameList.PlayerNickname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPlayerNicknameList_PlayerNickname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPlayerNicknameList.PlayerNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPlayerNicknameList_PlayerNickname::CopyFrom(const CMsgClientPlayerNicknameList_PlayerNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPlayerNicknameList.PlayerNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPlayerNicknameList_PlayerNickname::IsInitialized() const {
  return true;
}

void CMsgClientPlayerNicknameList_PlayerNickname::Swap(CMsgClientPlayerNicknameList_PlayerNickname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPlayerNicknameList_PlayerNickname::InternalSwap(CMsgClientPlayerNicknameList_PlayerNickname* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPlayerNicknameList_PlayerNickname::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPlayerNicknameList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPlayerNicknameList::kRemovalFieldNumber;
const int CMsgClientPlayerNicknameList::kIncrementalFieldNumber;
const int CMsgClientPlayerNicknameList::kNicknamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPlayerNicknameList::CMsgClientPlayerNicknameList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPlayerNicknameList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPlayerNicknameList)
}
CMsgClientPlayerNicknameList::CMsgClientPlayerNicknameList(const CMsgClientPlayerNicknameList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nicknames_(from.nicknames_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&removal_, &from.removal_,
    static_cast<size_t>(reinterpret_cast<char*>(&incremental_) -
    reinterpret_cast<char*>(&removal_)) + sizeof(incremental_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPlayerNicknameList)
}

void CMsgClientPlayerNicknameList::SharedCtor() {
  ::memset(&removal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incremental_) -
      reinterpret_cast<char*>(&removal_)) + sizeof(incremental_));
}

CMsgClientPlayerNicknameList::~CMsgClientPlayerNicknameList() {
  // @@protoc_insertion_point(destructor:CMsgClientPlayerNicknameList)
  SharedDtor();
}

void CMsgClientPlayerNicknameList::SharedDtor() {
}

void CMsgClientPlayerNicknameList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPlayerNicknameList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPlayerNicknameList& CMsgClientPlayerNicknameList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPlayerNicknameList.base);
  return *internal_default_instance();
}


void CMsgClientPlayerNicknameList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPlayerNicknameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nicknames_.Clear();
  ::memset(&removal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incremental_) -
      reinterpret_cast<char*>(&removal_)) + sizeof(incremental_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPlayerNicknameList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPlayerNicknameList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool removal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_removal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool incremental = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_incremental();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nicknames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPlayerNicknameList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPlayerNicknameList)
  return false;
#undef DO_
}

void CMsgClientPlayerNicknameList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPlayerNicknameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool removal = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->removal(), output);
  }

  // optional bool incremental = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->incremental(), output);
  }

  // repeated .CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nicknames_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->nicknames(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPlayerNicknameList)
}

::google::protobuf::uint8* CMsgClientPlayerNicknameList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPlayerNicknameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool removal = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->removal(), target);
  }

  // optional bool incremental = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->incremental(), target);
  }

  // repeated .CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nicknames_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->nicknames(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPlayerNicknameList)
  return target;
}

size_t CMsgClientPlayerNicknameList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPlayerNicknameList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nicknames_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nicknames(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool removal = 1;
    if (has_removal()) {
      total_size += 1 + 1;
    }

    // optional bool incremental = 2;
    if (has_incremental()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPlayerNicknameList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPlayerNicknameList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPlayerNicknameList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPlayerNicknameList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPlayerNicknameList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPlayerNicknameList)
    MergeFrom(*source);
  }
}

void CMsgClientPlayerNicknameList::MergeFrom(const CMsgClientPlayerNicknameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPlayerNicknameList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nicknames_.MergeFrom(from.nicknames_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      removal_ = from.removal_;
    }
    if (cached_has_bits & 0x00000002u) {
      incremental_ = from.incremental_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPlayerNicknameList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPlayerNicknameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPlayerNicknameList::CopyFrom(const CMsgClientPlayerNicknameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPlayerNicknameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPlayerNicknameList::IsInitialized() const {
  return true;
}

void CMsgClientPlayerNicknameList::Swap(CMsgClientPlayerNicknameList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPlayerNicknameList::InternalSwap(CMsgClientPlayerNicknameList* other) {
  using std::swap;
  CastToBase(&nicknames_)->InternalSwap(CastToBase(&other->nicknames_));
  swap(removal_, other->removal_);
  swap(incremental_, other->incremental_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPlayerNicknameList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSetPlayerNickname::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSetPlayerNickname::kSteamidFieldNumber;
const int CMsgClientSetPlayerNickname::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSetPlayerNickname::CMsgClientSetPlayerNickname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientSetPlayerNickname.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSetPlayerNickname)
}
CMsgClientSetPlayerNickname::CMsgClientSetPlayerNickname(const CMsgClientSetPlayerNickname& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSetPlayerNickname)
}

void CMsgClientSetPlayerNickname::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientSetPlayerNickname::~CMsgClientSetPlayerNickname() {
  // @@protoc_insertion_point(destructor:CMsgClientSetPlayerNickname)
  SharedDtor();
}

void CMsgClientSetPlayerNickname::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientSetPlayerNickname::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSetPlayerNickname::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSetPlayerNickname& CMsgClientSetPlayerNickname::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientSetPlayerNickname.base);
  return *internal_default_instance();
}


void CMsgClientSetPlayerNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSetPlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    nickname_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSetPlayerNickname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSetPlayerNickname)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientSetPlayerNickname.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSetPlayerNickname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSetPlayerNickname)
  return false;
#undef DO_
}

void CMsgClientSetPlayerNickname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSetPlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientSetPlayerNickname.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSetPlayerNickname)
}

::google::protobuf::uint8* CMsgClientSetPlayerNickname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSetPlayerNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientSetPlayerNickname.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSetPlayerNickname)
  return target;
}

size_t CMsgClientSetPlayerNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSetPlayerNickname)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSetPlayerNickname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSetPlayerNickname)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSetPlayerNickname* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSetPlayerNickname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSetPlayerNickname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSetPlayerNickname)
    MergeFrom(*source);
  }
}

void CMsgClientSetPlayerNickname::MergeFrom(const CMsgClientSetPlayerNickname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSetPlayerNickname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSetPlayerNickname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSetPlayerNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSetPlayerNickname::CopyFrom(const CMsgClientSetPlayerNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSetPlayerNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSetPlayerNickname::IsInitialized() const {
  return true;
}

void CMsgClientSetPlayerNickname::Swap(CMsgClientSetPlayerNickname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSetPlayerNickname::InternalSwap(CMsgClientSetPlayerNickname* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSetPlayerNickname::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSetPlayerNicknameResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSetPlayerNicknameResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSetPlayerNicknameResponse::CMsgClientSetPlayerNicknameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientSetPlayerNicknameResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientSetPlayerNicknameResponse)
}
CMsgClientSetPlayerNicknameResponse::CMsgClientSetPlayerNicknameResponse(const CMsgClientSetPlayerNicknameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientSetPlayerNicknameResponse)
}

void CMsgClientSetPlayerNicknameResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientSetPlayerNicknameResponse::~CMsgClientSetPlayerNicknameResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientSetPlayerNicknameResponse)
  SharedDtor();
}

void CMsgClientSetPlayerNicknameResponse::SharedDtor() {
}

void CMsgClientSetPlayerNicknameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientSetPlayerNicknameResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSetPlayerNicknameResponse& CMsgClientSetPlayerNicknameResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientSetPlayerNicknameResponse.base);
  return *internal_default_instance();
}


void CMsgClientSetPlayerNicknameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientSetPlayerNicknameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSetPlayerNicknameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientSetPlayerNicknameResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientSetPlayerNicknameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientSetPlayerNicknameResponse)
  return false;
#undef DO_
}

void CMsgClientSetPlayerNicknameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientSetPlayerNicknameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientSetPlayerNicknameResponse)
}

::google::protobuf::uint8* CMsgClientSetPlayerNicknameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientSetPlayerNicknameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientSetPlayerNicknameResponse)
  return target;
}

size_t CMsgClientSetPlayerNicknameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientSetPlayerNicknameResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSetPlayerNicknameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientSetPlayerNicknameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSetPlayerNicknameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSetPlayerNicknameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientSetPlayerNicknameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientSetPlayerNicknameResponse)
    MergeFrom(*source);
  }
}

void CMsgClientSetPlayerNicknameResponse::MergeFrom(const CMsgClientSetPlayerNicknameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientSetPlayerNicknameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientSetPlayerNicknameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientSetPlayerNicknameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSetPlayerNicknameResponse::CopyFrom(const CMsgClientSetPlayerNicknameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientSetPlayerNicknameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSetPlayerNicknameResponse::IsInitialized() const {
  return true;
}

void CMsgClientSetPlayerNicknameResponse::Swap(CMsgClientSetPlayerNicknameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSetPlayerNicknameResponse::InternalSwap(CMsgClientSetPlayerNicknameResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientSetPlayerNicknameResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestFriendData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFriendData::kPersonaStateRequestedFieldNumber;
const int CMsgClientRequestFriendData::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFriendData::CMsgClientRequestFriendData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRequestFriendData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRequestFriendData)
}
CMsgClientRequestFriendData::CMsgClientRequestFriendData(const CMsgClientRequestFriendData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_state_requested_ = from.persona_state_requested_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRequestFriendData)
}

void CMsgClientRequestFriendData::SharedCtor() {
  persona_state_requested_ = 0u;
}

CMsgClientRequestFriendData::~CMsgClientRequestFriendData() {
  // @@protoc_insertion_point(destructor:CMsgClientRequestFriendData)
  SharedDtor();
}

void CMsgClientRequestFriendData::SharedDtor() {
}

void CMsgClientRequestFriendData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRequestFriendData::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestFriendData& CMsgClientRequestFriendData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRequestFriendData.base);
  return *internal_default_instance();
}


void CMsgClientRequestFriendData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRequestFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  persona_state_requested_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestFriendData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRequestFriendData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 persona_state_requested = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_persona_state_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persona_state_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 friends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_friends())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_friends())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRequestFriendData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRequestFriendData)
  return false;
#undef DO_
}

void CMsgClientRequestFriendData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRequestFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 persona_state_requested = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->persona_state_requested(), output);
  }

  // repeated fixed64 friends = 2;
  for (int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->friends(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRequestFriendData)
}

::google::protobuf::uint8* CMsgClientRequestFriendData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRequestFriendData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 persona_state_requested = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->persona_state_requested(), target);
  }

  // repeated fixed64 friends = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->friends_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRequestFriendData)
  return target;
}

size_t CMsgClientRequestFriendData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRequestFriendData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 friends = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friends_size());
    total_size += data_size;
  }

  // optional uint32 persona_state_requested = 1;
  if (has_persona_state_requested()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->persona_state_requested());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestFriendData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRequestFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFriendData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestFriendData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRequestFriendData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRequestFriendData)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFriendData::MergeFrom(const CMsgClientRequestFriendData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRequestFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.has_persona_state_requested()) {
    set_persona_state_requested(from.persona_state_requested());
  }
}

void CMsgClientRequestFriendData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRequestFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFriendData::CopyFrom(const CMsgClientRequestFriendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRequestFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFriendData::IsInitialized() const {
  return true;
}

void CMsgClientRequestFriendData::Swap(CMsgClientRequestFriendData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFriendData::InternalSwap(CMsgClientRequestFriendData* other) {
  using std::swap;
  friends_.InternalSwap(&other->friends_);
  swap(persona_state_requested_, other->persona_state_requested_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRequestFriendData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChangeStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChangeStatus::kPersonaStateFieldNumber;
const int CMsgClientChangeStatus::kPlayerNameFieldNumber;
const int CMsgClientChangeStatus::kIsAutoGeneratedNameFieldNumber;
const int CMsgClientChangeStatus::kHighPriorityFieldNumber;
const int CMsgClientChangeStatus::kPersonaSetByUserFieldNumber;
const int CMsgClientChangeStatus::kPersonaStateFlagsFieldNumber;
const int CMsgClientChangeStatus::kNeedPersonaResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChangeStatus::CMsgClientChangeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientChangeStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientChangeStatus)
}
CMsgClientChangeStatus::CMsgClientChangeStatus(const CMsgClientChangeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_name()) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  ::memcpy(&persona_state_, &from.persona_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&persona_state_flags_) -
    reinterpret_cast<char*>(&persona_state_)) + sizeof(persona_state_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientChangeStatus)
}

void CMsgClientChangeStatus::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&persona_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persona_state_flags_) -
      reinterpret_cast<char*>(&persona_state_)) + sizeof(persona_state_flags_));
}

CMsgClientChangeStatus::~CMsgClientChangeStatus() {
  // @@protoc_insertion_point(destructor:CMsgClientChangeStatus)
  SharedDtor();
}

void CMsgClientChangeStatus::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientChangeStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientChangeStatus::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChangeStatus& CMsgClientChangeStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientChangeStatus.base);
  return *internal_default_instance();
}


void CMsgClientChangeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientChangeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    player_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&persona_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&persona_state_flags_) -
        reinterpret_cast<char*>(&persona_state_)) + sizeof(persona_state_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChangeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientChangeStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 persona_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_persona_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persona_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string player_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientChangeStatus.player_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_auto_generated_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_auto_generated_name();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_auto_generated_name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool high_priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_high_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &high_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persona_set_by_user = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_persona_set_by_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persona_set_by_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 persona_state_flags = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_persona_state_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persona_state_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool need_persona_response = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_need_persona_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_persona_response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientChangeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientChangeStatus)
  return false;
#undef DO_
}

void CMsgClientChangeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientChangeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 persona_state = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->persona_state(), output);
  }

  // optional string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChangeStatus.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->player_name(), output);
  }

  // optional bool is_auto_generated_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_auto_generated_name(), output);
  }

  // optional bool high_priority = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->high_priority(), output);
  }

  // optional bool persona_set_by_user = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->persona_set_by_user(), output);
  }

  // optional uint32 persona_state_flags = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->persona_state_flags(), output);
  }

  // optional bool need_persona_response = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->need_persona_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientChangeStatus)
}

::google::protobuf::uint8* CMsgClientChangeStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientChangeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 persona_state = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->persona_state(), target);
  }

  // optional string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientChangeStatus.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }

  // optional bool is_auto_generated_name = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_auto_generated_name(), target);
  }

  // optional bool high_priority = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->high_priority(), target);
  }

  // optional bool persona_set_by_user = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->persona_set_by_user(), target);
  }

  // optional uint32 persona_state_flags = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->persona_state_flags(), target);
  }

  // optional bool need_persona_response = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->need_persona_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientChangeStatus)
  return target;
}

size_t CMsgClientChangeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientChangeStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string player_name = 2;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }

    // optional uint32 persona_state = 1;
    if (has_persona_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->persona_state());
    }

    // optional bool is_auto_generated_name = 3;
    if (has_is_auto_generated_name()) {
      total_size += 1 + 1;
    }

    // optional bool high_priority = 4;
    if (has_high_priority()) {
      total_size += 1 + 1;
    }

    // optional bool persona_set_by_user = 5;
    if (has_persona_set_by_user()) {
      total_size += 1 + 1;
    }

    // optional bool need_persona_response = 7;
    if (has_need_persona_response()) {
      total_size += 1 + 1;
    }

    // optional uint32 persona_state_flags = 6 [default = 0];
    if (has_persona_state_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->persona_state_flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChangeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientChangeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChangeStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChangeStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientChangeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientChangeStatus)
    MergeFrom(*source);
  }
}

void CMsgClientChangeStatus::MergeFrom(const CMsgClientChangeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientChangeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_player_name();
      player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      persona_state_ = from.persona_state_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_auto_generated_name_ = from.is_auto_generated_name_;
    }
    if (cached_has_bits & 0x00000008u) {
      high_priority_ = from.high_priority_;
    }
    if (cached_has_bits & 0x00000010u) {
      persona_set_by_user_ = from.persona_set_by_user_;
    }
    if (cached_has_bits & 0x00000020u) {
      need_persona_response_ = from.need_persona_response_;
    }
    if (cached_has_bits & 0x00000040u) {
      persona_state_flags_ = from.persona_state_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChangeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientChangeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChangeStatus::CopyFrom(const CMsgClientChangeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientChangeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChangeStatus::IsInitialized() const {
  return true;
}

void CMsgClientChangeStatus::Swap(CMsgClientChangeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChangeStatus::InternalSwap(CMsgClientChangeStatus* other) {
  using std::swap;
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(persona_state_, other->persona_state_);
  swap(is_auto_generated_name_, other->is_auto_generated_name_);
  swap(high_priority_, other->high_priority_);
  swap(persona_set_by_user_, other->persona_set_by_user_);
  swap(need_persona_response_, other->need_persona_response_);
  swap(persona_state_flags_, other->persona_state_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientChangeStatus::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPersonaChangeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPersonaChangeResponse::kResultFieldNumber;
const int CMsgPersonaChangeResponse::kPlayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPersonaChangeResponse::CMsgPersonaChangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgPersonaChangeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPersonaChangeResponse)
}
CMsgPersonaChangeResponse::CMsgPersonaChangeResponse(const CMsgPersonaChangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_name()) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgPersonaChangeResponse)
}

void CMsgPersonaChangeResponse::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
}

CMsgPersonaChangeResponse::~CMsgPersonaChangeResponse() {
  // @@protoc_insertion_point(destructor:CMsgPersonaChangeResponse)
  SharedDtor();
}

void CMsgPersonaChangeResponse::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgPersonaChangeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPersonaChangeResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPersonaChangeResponse& CMsgPersonaChangeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgPersonaChangeResponse.base);
  return *internal_default_instance();
}


void CMsgPersonaChangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPersonaChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    player_name_.ClearNonDefaultToEmptyNoArena();
  }
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPersonaChangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPersonaChangeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string player_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPersonaChangeResponse.player_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPersonaChangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPersonaChangeResponse)
  return false;
#undef DO_
}

void CMsgPersonaChangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPersonaChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPersonaChangeResponse.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->player_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPersonaChangeResponse)
}

::google::protobuf::uint8* CMsgPersonaChangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPersonaChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPersonaChangeResponse.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPersonaChangeResponse)
  return target;
}

size_t CMsgPersonaChangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPersonaChangeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string player_name = 2;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }

    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPersonaChangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPersonaChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPersonaChangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPersonaChangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPersonaChangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPersonaChangeResponse)
    MergeFrom(*source);
  }
}

void CMsgPersonaChangeResponse::MergeFrom(const CMsgPersonaChangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPersonaChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_player_name();
      player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPersonaChangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPersonaChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPersonaChangeResponse::CopyFrom(const CMsgPersonaChangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPersonaChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPersonaChangeResponse::IsInitialized() const {
  return true;
}

void CMsgPersonaChangeResponse::Swap(CMsgPersonaChangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPersonaChangeResponse::InternalSwap(CMsgPersonaChangeResponse* other) {
  using std::swap;
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPersonaChangeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPersonaState_Friend_ClanData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPersonaState_Friend_ClanData::kOggAppIdFieldNumber;
const int CMsgClientPersonaState_Friend_ClanData::kChatGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPersonaState_Friend_ClanData::CMsgClientPersonaState_Friend_ClanData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_ClanData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPersonaState.Friend.ClanData)
}
CMsgClientPersonaState_Friend_ClanData::CMsgClientPersonaState_Friend_ClanData(const CMsgClientPersonaState_Friend_ClanData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chat_group_id_, &from.chat_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ogg_app_id_) -
    reinterpret_cast<char*>(&chat_group_id_)) + sizeof(ogg_app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPersonaState.Friend.ClanData)
}

void CMsgClientPersonaState_Friend_ClanData::SharedCtor() {
  ::memset(&chat_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ogg_app_id_) -
      reinterpret_cast<char*>(&chat_group_id_)) + sizeof(ogg_app_id_));
}

CMsgClientPersonaState_Friend_ClanData::~CMsgClientPersonaState_Friend_ClanData() {
  // @@protoc_insertion_point(destructor:CMsgClientPersonaState.Friend.ClanData)
  SharedDtor();
}

void CMsgClientPersonaState_Friend_ClanData::SharedDtor() {
}

void CMsgClientPersonaState_Friend_ClanData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPersonaState_Friend_ClanData::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPersonaState_Friend_ClanData& CMsgClientPersonaState_Friend_ClanData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_ClanData.base);
  return *internal_default_instance();
}


void CMsgClientPersonaState_Friend_ClanData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPersonaState.Friend.ClanData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&chat_group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ogg_app_id_) -
        reinterpret_cast<char*>(&chat_group_id_)) + sizeof(ogg_app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPersonaState_Friend_ClanData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPersonaState.Friend.ClanData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ogg_app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ogg_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ogg_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 chat_group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &chat_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPersonaState.Friend.ClanData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPersonaState.Friend.ClanData)
  return false;
#undef DO_
}

void CMsgClientPersonaState_Friend_ClanData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPersonaState.Friend.ClanData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ogg_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ogg_app_id(), output);
  }

  // optional uint64 chat_group_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->chat_group_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPersonaState.Friend.ClanData)
}

::google::protobuf::uint8* CMsgClientPersonaState_Friend_ClanData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPersonaState.Friend.ClanData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ogg_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ogg_app_id(), target);
  }

  // optional uint64 chat_group_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->chat_group_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPersonaState.Friend.ClanData)
  return target;
}

size_t CMsgClientPersonaState_Friend_ClanData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPersonaState.Friend.ClanData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 chat_group_id = 2;
    if (has_chat_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->chat_group_id());
    }

    // optional uint32 ogg_app_id = 1;
    if (has_ogg_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ogg_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPersonaState_Friend_ClanData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPersonaState.Friend.ClanData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPersonaState_Friend_ClanData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPersonaState_Friend_ClanData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPersonaState.Friend.ClanData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPersonaState.Friend.ClanData)
    MergeFrom(*source);
  }
}

void CMsgClientPersonaState_Friend_ClanData::MergeFrom(const CMsgClientPersonaState_Friend_ClanData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPersonaState.Friend.ClanData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      chat_group_id_ = from.chat_group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ogg_app_id_ = from.ogg_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPersonaState_Friend_ClanData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPersonaState.Friend.ClanData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPersonaState_Friend_ClanData::CopyFrom(const CMsgClientPersonaState_Friend_ClanData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPersonaState.Friend.ClanData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPersonaState_Friend_ClanData::IsInitialized() const {
  return true;
}

void CMsgClientPersonaState_Friend_ClanData::Swap(CMsgClientPersonaState_Friend_ClanData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPersonaState_Friend_ClanData::InternalSwap(CMsgClientPersonaState_Friend_ClanData* other) {
  using std::swap;
  swap(chat_group_id_, other->chat_group_id_);
  swap(ogg_app_id_, other->ogg_app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPersonaState_Friend_ClanData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPersonaState_Friend_KV::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPersonaState_Friend_KV::kKeyFieldNumber;
const int CMsgClientPersonaState_Friend_KV::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPersonaState_Friend_KV::CMsgClientPersonaState_Friend_KV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_KV.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPersonaState.Friend.KV)
}
CMsgClientPersonaState_Friend_KV::CMsgClientPersonaState_Friend_KV(const CMsgClientPersonaState_Friend_KV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientPersonaState.Friend.KV)
}

void CMsgClientPersonaState_Friend_KV::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientPersonaState_Friend_KV::~CMsgClientPersonaState_Friend_KV() {
  // @@protoc_insertion_point(destructor:CMsgClientPersonaState.Friend.KV)
  SharedDtor();
}

void CMsgClientPersonaState_Friend_KV::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPersonaState_Friend_KV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPersonaState_Friend_KV::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPersonaState_Friend_KV& CMsgClientPersonaState_Friend_KV::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend_KV.base);
  return *internal_default_instance();
}


void CMsgClientPersonaState_Friend_KV::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPersonaState.Friend.KV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPersonaState_Friend_KV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPersonaState.Friend.KV)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.KV.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.KV.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPersonaState.Friend.KV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPersonaState.Friend.KV)
  return false;
#undef DO_
}

void CMsgClientPersonaState_Friend_KV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPersonaState.Friend.KV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.KV.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.KV.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPersonaState.Friend.KV)
}

::google::protobuf::uint8* CMsgClientPersonaState_Friend_KV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPersonaState.Friend.KV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.KV.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.KV.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPersonaState.Friend.KV)
  return target;
}

size_t CMsgClientPersonaState_Friend_KV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPersonaState.Friend.KV)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPersonaState_Friend_KV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPersonaState.Friend.KV)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPersonaState_Friend_KV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPersonaState_Friend_KV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPersonaState.Friend.KV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPersonaState.Friend.KV)
    MergeFrom(*source);
  }
}

void CMsgClientPersonaState_Friend_KV::MergeFrom(const CMsgClientPersonaState_Friend_KV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPersonaState.Friend.KV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgClientPersonaState_Friend_KV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPersonaState.Friend.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPersonaState_Friend_KV::CopyFrom(const CMsgClientPersonaState_Friend_KV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPersonaState.Friend.KV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPersonaState_Friend_KV::IsInitialized() const {
  return true;
}

void CMsgClientPersonaState_Friend_KV::Swap(CMsgClientPersonaState_Friend_KV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPersonaState_Friend_KV::InternalSwap(CMsgClientPersonaState_Friend_KV* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPersonaState_Friend_KV::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPersonaState_Friend::InitAsDefaultInstance() {
  ::_CMsgClientPersonaState_Friend_default_instance_._instance.get_mutable()->clan_data_ = const_cast< ::CMsgClientPersonaState_Friend_ClanData*>(
      ::CMsgClientPersonaState_Friend_ClanData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPersonaState_Friend::kFriendidFieldNumber;
const int CMsgClientPersonaState_Friend::kPersonaStateFieldNumber;
const int CMsgClientPersonaState_Friend::kGamePlayedAppIdFieldNumber;
const int CMsgClientPersonaState_Friend::kGameServerIpFieldNumber;
const int CMsgClientPersonaState_Friend::kGameServerPortFieldNumber;
const int CMsgClientPersonaState_Friend::kPersonaStateFlagsFieldNumber;
const int CMsgClientPersonaState_Friend::kOnlineSessionInstancesFieldNumber;
const int CMsgClientPersonaState_Friend::kPublishedInstanceIdFieldNumber;
const int CMsgClientPersonaState_Friend::kPersonaSetByUserFieldNumber;
const int CMsgClientPersonaState_Friend::kPlayerNameFieldNumber;
const int CMsgClientPersonaState_Friend::kQueryPortFieldNumber;
const int CMsgClientPersonaState_Friend::kSteamidSourceFieldNumber;
const int CMsgClientPersonaState_Friend::kAvatarHashFieldNumber;
const int CMsgClientPersonaState_Friend::kLastLogoffFieldNumber;
const int CMsgClientPersonaState_Friend::kLastLogonFieldNumber;
const int CMsgClientPersonaState_Friend::kLastSeenOnlineFieldNumber;
const int CMsgClientPersonaState_Friend::kClanRankFieldNumber;
const int CMsgClientPersonaState_Friend::kGameNameFieldNumber;
const int CMsgClientPersonaState_Friend::kGameidFieldNumber;
const int CMsgClientPersonaState_Friend::kGameDataBlobFieldNumber;
const int CMsgClientPersonaState_Friend::kClanDataFieldNumber;
const int CMsgClientPersonaState_Friend::kClanTagFieldNumber;
const int CMsgClientPersonaState_Friend::kRichPresenceFieldNumber;
const int CMsgClientPersonaState_Friend::kBroadcastIdFieldNumber;
const int CMsgClientPersonaState_Friend::kGameLobbyIdFieldNumber;
const int CMsgClientPersonaState_Friend::kWatchingBroadcastAccountidFieldNumber;
const int CMsgClientPersonaState_Friend::kWatchingBroadcastAppidFieldNumber;
const int CMsgClientPersonaState_Friend::kWatchingBroadcastViewersFieldNumber;
const int CMsgClientPersonaState_Friend::kWatchingBroadcastTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPersonaState_Friend::CMsgClientPersonaState_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPersonaState.Friend)
}
CMsgClientPersonaState_Friend::CMsgClientPersonaState_Friend(const CMsgClientPersonaState_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rich_presence_(from.rich_presence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_name()) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  avatar_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar_hash()) {
    avatar_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_hash_);
  }
  game_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_name()) {
    game_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_name_);
  }
  game_data_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data_blob()) {
    game_data_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_blob_);
  }
  clan_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clan_tag()) {
    clan_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clan_tag_);
  }
  watching_broadcast_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_watching_broadcast_title()) {
    watching_broadcast_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watching_broadcast_title_);
  }
  if (from.has_clan_data()) {
    clan_data_ = new ::CMsgClientPersonaState_Friend_ClanData(*from.clan_data_);
  } else {
    clan_data_ = NULL;
  }
  ::memcpy(&friendid_, &from.friendid_,
    static_cast<size_t>(reinterpret_cast<char*>(&watching_broadcast_viewers_) -
    reinterpret_cast<char*>(&friendid_)) + sizeof(watching_broadcast_viewers_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientPersonaState.Friend)
}

void CMsgClientPersonaState_Friend::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clan_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  watching_broadcast_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clan_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&watching_broadcast_viewers_) -
      reinterpret_cast<char*>(&clan_data_)) + sizeof(watching_broadcast_viewers_));
}

CMsgClientPersonaState_Friend::~CMsgClientPersonaState_Friend() {
  // @@protoc_insertion_point(destructor:CMsgClientPersonaState.Friend)
  SharedDtor();
}

void CMsgClientPersonaState_Friend::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clan_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  watching_broadcast_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete clan_data_;
}

void CMsgClientPersonaState_Friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPersonaState_Friend::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPersonaState_Friend& CMsgClientPersonaState_Friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState_Friend.base);
  return *internal_default_instance();
}


void CMsgClientPersonaState_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPersonaState.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rich_presence_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      player_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      avatar_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      game_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      game_data_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      clan_tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      watching_broadcast_title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(clan_data_ != NULL);
      clan_data_->Clear();
    }
  }
  friendid_ = GOOGLE_ULONGLONG(0);
  if (cached_has_bits & 65280u) {
    ::memset(&persona_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&persona_set_by_user_) -
        reinterpret_cast<char*>(&persona_state_)) + sizeof(persona_set_by_user_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&steamid_source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&watching_broadcast_accountid_) -
        reinterpret_cast<char*>(&steamid_source_)) + sizeof(watching_broadcast_accountid_));
  }
  if (cached_has_bits & 251658240u) {
    ::memset(&broadcast_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&watching_broadcast_viewers_) -
        reinterpret_cast<char*>(&broadcast_id_)) + sizeof(watching_broadcast_viewers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPersonaState_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPersonaState.Friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_friendid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 persona_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_persona_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persona_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_played_app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_game_played_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_played_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_game_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 persona_state_flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_persona_state_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persona_state_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 online_session_instances = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_online_session_instances();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_session_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 published_instance_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_published_instance_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &published_instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persona_set_by_user = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_persona_set_by_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persona_set_by_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string player_name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.player_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_source = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          set_has_steamid_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar_hash = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_logoff = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_last_logoff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_logoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_logon = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_last_logon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_logon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_seen_online = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          set_has_last_seen_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_seen_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clan_rank = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_clan_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clan_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_name = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_name().data(), static_cast<int>(this->game_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.game_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 gameid = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 449 & 0xFF */)) {
          set_has_gameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data_blob = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientPersonaState.Friend.ClanData clan_data = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clan_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string clan_tag = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clan_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clan_tag().data(), static_cast<int>(this->clan_tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.clan_tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPersonaState.Friend.KV rich_presence = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rich_presence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 broadcast_id = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 577 & 0xFF */)) {
          set_has_broadcast_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &broadcast_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_lobby_id = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 585 & 0xFF */)) {
          set_has_game_lobby_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_lobby_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 watching_broadcast_accountid = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 592 & 0xFF */)) {
          set_has_watching_broadcast_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &watching_broadcast_accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 watching_broadcast_appid = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {
          set_has_watching_broadcast_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &watching_broadcast_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 watching_broadcast_viewers = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {
          set_has_watching_broadcast_viewers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &watching_broadcast_viewers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string watching_broadcast_title = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_watching_broadcast_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->watching_broadcast_title().data(), static_cast<int>(this->watching_broadcast_title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientPersonaState.Friend.watching_broadcast_title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPersonaState.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPersonaState.Friend)
  return false;
#undef DO_
}

void CMsgClientPersonaState_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPersonaState.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friendid(), output);
  }

  // optional uint32 persona_state = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->persona_state(), output);
  }

  // optional uint32 game_played_app_id = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_played_app_id(), output);
  }

  // optional uint32 game_server_ip = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_server_ip(), output);
  }

  // optional uint32 game_server_port = 5;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->game_server_port(), output);
  }

  // optional uint32 persona_state_flags = 6;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->persona_state_flags(), output);
  }

  // optional uint32 online_session_instances = 7;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->online_session_instances(), output);
  }

  // optional uint32 published_instance_id = 8;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->published_instance_id(), output);
  }

  // optional bool persona_set_by_user = 10;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->persona_set_by_user(), output);
  }

  // optional string player_name = 15;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->player_name(), output);
  }

  // optional uint32 query_port = 20;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->query_port(), output);
  }

  // optional fixed64 steamid_source = 25;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(25, this->steamid_source(), output);
  }

  // optional bytes avatar_hash = 31;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->avatar_hash(), output);
  }

  // optional uint32 last_logoff = 45;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->last_logoff(), output);
  }

  // optional uint32 last_logon = 46;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->last_logon(), output);
  }

  // optional uint32 last_seen_online = 47;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->last_seen_online(), output);
  }

  // optional uint32 clan_rank = 50;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->clan_rank(), output);
  }

  // optional string game_name = 55;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_name().data(), static_cast<int>(this->game_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.game_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      55, this->game_name(), output);
  }

  // optional fixed64 gameid = 56;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(56, this->gameid(), output);
  }

  // optional bytes game_data_blob = 60;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->game_data_blob(), output);
  }

  // optional .CMsgClientPersonaState.Friend.ClanData clan_data = 64;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, this->_internal_clan_data(), output);
  }

  // optional string clan_tag = 65;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clan_tag().data(), static_cast<int>(this->clan_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.clan_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      65, this->clan_tag(), output);
  }

  // repeated .CMsgClientPersonaState.Friend.KV rich_presence = 71;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71,
      this->rich_presence(static_cast<int>(i)),
      output);
  }

  // optional fixed64 broadcast_id = 72;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(72, this->broadcast_id(), output);
  }

  // optional fixed64 game_lobby_id = 73;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(73, this->game_lobby_id(), output);
  }

  // optional uint32 watching_broadcast_accountid = 74;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(74, this->watching_broadcast_accountid(), output);
  }

  // optional uint32 watching_broadcast_appid = 75;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(75, this->watching_broadcast_appid(), output);
  }

  // optional uint32 watching_broadcast_viewers = 76;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(76, this->watching_broadcast_viewers(), output);
  }

  // optional string watching_broadcast_title = 77;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watching_broadcast_title().data(), static_cast<int>(this->watching_broadcast_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.watching_broadcast_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      77, this->watching_broadcast_title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPersonaState.Friend)
}

::google::protobuf::uint8* CMsgClientPersonaState_Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPersonaState.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friendid = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friendid(), target);
  }

  // optional uint32 persona_state = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->persona_state(), target);
  }

  // optional uint32 game_played_app_id = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_played_app_id(), target);
  }

  // optional uint32 game_server_ip = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_server_ip(), target);
  }

  // optional uint32 game_server_port = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->game_server_port(), target);
  }

  // optional uint32 persona_state_flags = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->persona_state_flags(), target);
  }

  // optional uint32 online_session_instances = 7;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->online_session_instances(), target);
  }

  // optional uint32 published_instance_id = 8;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->published_instance_id(), target);
  }

  // optional bool persona_set_by_user = 10;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->persona_set_by_user(), target);
  }

  // optional string player_name = 15;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->player_name(), target);
  }

  // optional uint32 query_port = 20;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->query_port(), target);
  }

  // optional fixed64 steamid_source = 25;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(25, this->steamid_source(), target);
  }

  // optional bytes avatar_hash = 31;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->avatar_hash(), target);
  }

  // optional uint32 last_logoff = 45;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->last_logoff(), target);
  }

  // optional uint32 last_logon = 46;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->last_logon(), target);
  }

  // optional uint32 last_seen_online = 47;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->last_seen_online(), target);
  }

  // optional uint32 clan_rank = 50;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->clan_rank(), target);
  }

  // optional string game_name = 55;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_name().data(), static_cast<int>(this->game_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.game_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        55, this->game_name(), target);
  }

  // optional fixed64 gameid = 56;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(56, this->gameid(), target);
  }

  // optional bytes game_data_blob = 60;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->game_data_blob(), target);
  }

  // optional .CMsgClientPersonaState.Friend.ClanData clan_data = 64;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->_internal_clan_data(), deterministic, target);
  }

  // optional string clan_tag = 65;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clan_tag().data(), static_cast<int>(this->clan_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.clan_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        65, this->clan_tag(), target);
  }

  // repeated .CMsgClientPersonaState.Friend.KV rich_presence = 71;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71, this->rich_presence(static_cast<int>(i)), deterministic, target);
  }

  // optional fixed64 broadcast_id = 72;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(72, this->broadcast_id(), target);
  }

  // optional fixed64 game_lobby_id = 73;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(73, this->game_lobby_id(), target);
  }

  // optional uint32 watching_broadcast_accountid = 74;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(74, this->watching_broadcast_accountid(), target);
  }

  // optional uint32 watching_broadcast_appid = 75;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(75, this->watching_broadcast_appid(), target);
  }

  // optional uint32 watching_broadcast_viewers = 76;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(76, this->watching_broadcast_viewers(), target);
  }

  // optional string watching_broadcast_title = 77;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watching_broadcast_title().data(), static_cast<int>(this->watching_broadcast_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientPersonaState.Friend.watching_broadcast_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        77, this->watching_broadcast_title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPersonaState.Friend)
  return target;
}

size_t CMsgClientPersonaState_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPersonaState.Friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPersonaState.Friend.KV rich_presence = 71;
  {
    unsigned int count = static_cast<unsigned int>(this->rich_presence_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rich_presence(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string player_name = 15;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }

    // optional bytes avatar_hash = 31;
    if (has_avatar_hash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar_hash());
    }

    // optional string game_name = 55;
    if (has_game_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_name());
    }

    // optional bytes game_data_blob = 60;
    if (has_game_data_blob()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data_blob());
    }

    // optional string clan_tag = 65;
    if (has_clan_tag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clan_tag());
    }

    // optional string watching_broadcast_title = 77;
    if (has_watching_broadcast_title()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->watching_broadcast_title());
    }

    // optional .CMsgClientPersonaState.Friend.ClanData clan_data = 64;
    if (has_clan_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clan_data_);
    }

    // optional fixed64 friendid = 1;
    if (has_friendid()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 persona_state = 2;
    if (has_persona_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->persona_state());
    }

    // optional uint32 game_played_app_id = 3;
    if (has_game_played_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_played_app_id());
    }

    // optional uint32 game_server_ip = 4;
    if (has_game_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_ip());
    }

    // optional uint32 game_server_port = 5;
    if (has_game_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_port());
    }

    // optional uint32 persona_state_flags = 6;
    if (has_persona_state_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->persona_state_flags());
    }

    // optional uint32 online_session_instances = 7;
    if (has_online_session_instances()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->online_session_instances());
    }

    // optional uint32 published_instance_id = 8;
    if (has_published_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->published_instance_id());
    }

    // optional bool persona_set_by_user = 10;
    if (has_persona_set_by_user()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional fixed64 steamid_source = 25;
    if (has_steamid_source()) {
      total_size += 2 + 8;
    }

    // optional uint32 query_port = 20;
    if (has_query_port()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

    // optional uint32 last_logoff = 45;
    if (has_last_logoff()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_logoff());
    }

    // optional uint32 last_logon = 46;
    if (has_last_logon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_logon());
    }

    // optional uint32 last_seen_online = 47;
    if (has_last_seen_online()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_seen_online());
    }

    // optional fixed64 gameid = 56;
    if (has_gameid()) {
      total_size += 2 + 8;
    }

    // optional uint32 clan_rank = 50;
    if (has_clan_rank()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clan_rank());
    }

    // optional uint32 watching_broadcast_accountid = 74;
    if (has_watching_broadcast_accountid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->watching_broadcast_accountid());
    }

  }
  if (_has_bits_[24 / 32] & 251658240u) {
    // optional fixed64 broadcast_id = 72;
    if (has_broadcast_id()) {
      total_size += 2 + 8;
    }

    // optional fixed64 game_lobby_id = 73;
    if (has_game_lobby_id()) {
      total_size += 2 + 8;
    }

    // optional uint32 watching_broadcast_appid = 75;
    if (has_watching_broadcast_appid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->watching_broadcast_appid());
    }

    // optional uint32 watching_broadcast_viewers = 76;
    if (has_watching_broadcast_viewers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->watching_broadcast_viewers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPersonaState_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPersonaState.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPersonaState_Friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPersonaState_Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPersonaState.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPersonaState.Friend)
    MergeFrom(*source);
  }
}

void CMsgClientPersonaState_Friend::MergeFrom(const CMsgClientPersonaState_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPersonaState.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rich_presence_.MergeFrom(from.rich_presence_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_player_name();
      player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_avatar_hash();
      avatar_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_game_name();
      game_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_game_data_blob();
      game_data_blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_blob_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_clan_tag();
      clan_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clan_tag_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_watching_broadcast_title();
      watching_broadcast_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watching_broadcast_title_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_clan_data()->::CMsgClientPersonaState_Friend_ClanData::MergeFrom(from.clan_data());
    }
    if (cached_has_bits & 0x00000080u) {
      friendid_ = from.friendid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      persona_state_ = from.persona_state_;
    }
    if (cached_has_bits & 0x00000200u) {
      game_played_app_id_ = from.game_played_app_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      game_server_ip_ = from.game_server_ip_;
    }
    if (cached_has_bits & 0x00000800u) {
      game_server_port_ = from.game_server_port_;
    }
    if (cached_has_bits & 0x00001000u) {
      persona_state_flags_ = from.persona_state_flags_;
    }
    if (cached_has_bits & 0x00002000u) {
      online_session_instances_ = from.online_session_instances_;
    }
    if (cached_has_bits & 0x00004000u) {
      published_instance_id_ = from.published_instance_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      persona_set_by_user_ = from.persona_set_by_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      steamid_source_ = from.steamid_source_;
    }
    if (cached_has_bits & 0x00020000u) {
      query_port_ = from.query_port_;
    }
    if (cached_has_bits & 0x00040000u) {
      last_logoff_ = from.last_logoff_;
    }
    if (cached_has_bits & 0x00080000u) {
      last_logon_ = from.last_logon_;
    }
    if (cached_has_bits & 0x00100000u) {
      last_seen_online_ = from.last_seen_online_;
    }
    if (cached_has_bits & 0x00200000u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00400000u) {
      clan_rank_ = from.clan_rank_;
    }
    if (cached_has_bits & 0x00800000u) {
      watching_broadcast_accountid_ = from.watching_broadcast_accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      broadcast_id_ = from.broadcast_id_;
    }
    if (cached_has_bits & 0x02000000u) {
      game_lobby_id_ = from.game_lobby_id_;
    }
    if (cached_has_bits & 0x04000000u) {
      watching_broadcast_appid_ = from.watching_broadcast_appid_;
    }
    if (cached_has_bits & 0x08000000u) {
      watching_broadcast_viewers_ = from.watching_broadcast_viewers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPersonaState_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPersonaState.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPersonaState_Friend::CopyFrom(const CMsgClientPersonaState_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPersonaState.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPersonaState_Friend::IsInitialized() const {
  return true;
}

void CMsgClientPersonaState_Friend::Swap(CMsgClientPersonaState_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPersonaState_Friend::InternalSwap(CMsgClientPersonaState_Friend* other) {
  using std::swap;
  CastToBase(&rich_presence_)->InternalSwap(CastToBase(&other->rich_presence_));
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_hash_.Swap(&other->avatar_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_name_.Swap(&other->game_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_data_blob_.Swap(&other->game_data_blob_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clan_tag_.Swap(&other->clan_tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  watching_broadcast_title_.Swap(&other->watching_broadcast_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clan_data_, other->clan_data_);
  swap(friendid_, other->friendid_);
  swap(persona_state_, other->persona_state_);
  swap(game_played_app_id_, other->game_played_app_id_);
  swap(game_server_ip_, other->game_server_ip_);
  swap(game_server_port_, other->game_server_port_);
  swap(persona_state_flags_, other->persona_state_flags_);
  swap(online_session_instances_, other->online_session_instances_);
  swap(published_instance_id_, other->published_instance_id_);
  swap(persona_set_by_user_, other->persona_set_by_user_);
  swap(steamid_source_, other->steamid_source_);
  swap(query_port_, other->query_port_);
  swap(last_logoff_, other->last_logoff_);
  swap(last_logon_, other->last_logon_);
  swap(last_seen_online_, other->last_seen_online_);
  swap(gameid_, other->gameid_);
  swap(clan_rank_, other->clan_rank_);
  swap(watching_broadcast_accountid_, other->watching_broadcast_accountid_);
  swap(broadcast_id_, other->broadcast_id_);
  swap(game_lobby_id_, other->game_lobby_id_);
  swap(watching_broadcast_appid_, other->watching_broadcast_appid_);
  swap(watching_broadcast_viewers_, other->watching_broadcast_viewers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPersonaState_Friend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPersonaState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPersonaState::kStatusFlagsFieldNumber;
const int CMsgClientPersonaState::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPersonaState::CMsgClientPersonaState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientPersonaState)
}
CMsgClientPersonaState::CMsgClientPersonaState(const CMsgClientPersonaState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_flags_ = from.status_flags_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientPersonaState)
}

void CMsgClientPersonaState::SharedCtor() {
  status_flags_ = 0u;
}

CMsgClientPersonaState::~CMsgClientPersonaState() {
  // @@protoc_insertion_point(destructor:CMsgClientPersonaState)
  SharedDtor();
}

void CMsgClientPersonaState::SharedDtor() {
}

void CMsgClientPersonaState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientPersonaState::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPersonaState& CMsgClientPersonaState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientPersonaState.base);
  return *internal_default_instance();
}


void CMsgClientPersonaState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientPersonaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  status_flags_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPersonaState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientPersonaState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status_flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgClientPersonaState.Friend friends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientPersonaState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientPersonaState)
  return false;
#undef DO_
}

void CMsgClientPersonaState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientPersonaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_flags = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status_flags(), output);
  }

  // repeated .CMsgClientPersonaState.Friend friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->friends(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientPersonaState)
}

::google::protobuf::uint8* CMsgClientPersonaState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientPersonaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_flags = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status_flags(), target);
  }

  // repeated .CMsgClientPersonaState.Friend friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->friends(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientPersonaState)
  return target;
}

size_t CMsgClientPersonaState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientPersonaState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientPersonaState.Friend friends = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friends(static_cast<int>(i)));
    }
  }

  // optional uint32 status_flags = 1;
  if (has_status_flags()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status_flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPersonaState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientPersonaState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPersonaState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPersonaState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientPersonaState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientPersonaState)
    MergeFrom(*source);
  }
}

void CMsgClientPersonaState::MergeFrom(const CMsgClientPersonaState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientPersonaState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.has_status_flags()) {
    set_status_flags(from.status_flags());
  }
}

void CMsgClientPersonaState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientPersonaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPersonaState::CopyFrom(const CMsgClientPersonaState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientPersonaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPersonaState::IsInitialized() const {
  return true;
}

void CMsgClientPersonaState::Swap(CMsgClientPersonaState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPersonaState::InternalSwap(CMsgClientPersonaState* other) {
  using std::swap;
  CastToBase(&friends_)->InternalSwap(CastToBase(&other->friends_));
  swap(status_flags_, other->status_flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientPersonaState::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendProfileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendProfileInfo::kSteamidFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendProfileInfo::CMsgClientFriendProfileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendProfileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendProfileInfo)
}
CMsgClientFriendProfileInfo::CMsgClientFriendProfileInfo(const CMsgClientFriendProfileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_friend_ = from.steamid_friend_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendProfileInfo)
}

void CMsgClientFriendProfileInfo::SharedCtor() {
  steamid_friend_ = GOOGLE_ULONGLONG(0);
}

CMsgClientFriendProfileInfo::~CMsgClientFriendProfileInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendProfileInfo)
  SharedDtor();
}

void CMsgClientFriendProfileInfo::SharedDtor() {
}

void CMsgClientFriendProfileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendProfileInfo::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendProfileInfo& CMsgClientFriendProfileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendProfileInfo.base);
  return *internal_default_instance();
}


void CMsgClientFriendProfileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_friend_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendProfileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendProfileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_friend = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_friend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendProfileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendProfileInfo)
  return false;
#undef DO_
}

void CMsgClientFriendProfileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_friend = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_friend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendProfileInfo)
}

::google::protobuf::uint8* CMsgClientFriendProfileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendProfileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_friend = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_friend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendProfileInfo)
  return target;
}

size_t CMsgClientFriendProfileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendProfileInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid_friend = 1;
  if (has_steamid_friend()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendProfileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendProfileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendProfileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendProfileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendProfileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendProfileInfo)
    MergeFrom(*source);
  }
}

void CMsgClientFriendProfileInfo::MergeFrom(const CMsgClientFriendProfileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendProfileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid_friend()) {
    set_steamid_friend(from.steamid_friend());
  }
}

void CMsgClientFriendProfileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendProfileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendProfileInfo::CopyFrom(const CMsgClientFriendProfileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendProfileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendProfileInfo::IsInitialized() const {
  return true;
}

void CMsgClientFriendProfileInfo::Swap(CMsgClientFriendProfileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendProfileInfo::InternalSwap(CMsgClientFriendProfileInfo* other) {
  using std::swap;
  swap(steamid_friend_, other->steamid_friend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendProfileInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendProfileInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendProfileInfoResponse::kEresultFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kSteamidFriendFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kTimeCreatedFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kRealNameFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kCityNameFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kStateNameFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kCountryNameFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kHeadlineFieldNumber;
const int CMsgClientFriendProfileInfoResponse::kSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendProfileInfoResponse::CMsgClientFriendProfileInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendProfileInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientFriendProfileInfoResponse)
}
CMsgClientFriendProfileInfoResponse::CMsgClientFriendProfileInfoResponse(const CMsgClientFriendProfileInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_real_name()) {
    real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_name_);
  }
  city_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city_name()) {
    city_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_name_);
  }
  state_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state_name()) {
    state_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_name_);
  }
  country_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_name()) {
    country_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_name_);
  }
  headline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headline()) {
    headline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headline_);
  }
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_summary()) {
    summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  ::memcpy(&steamid_friend_, &from.steamid_friend_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steamid_friend_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientFriendProfileInfoResponse)
}

void CMsgClientFriendProfileInfoResponse::SharedCtor() {
  real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_friend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_created_) -
      reinterpret_cast<char*>(&steamid_friend_)) + sizeof(time_created_));
  eresult_ = 2;
}

CMsgClientFriendProfileInfoResponse::~CMsgClientFriendProfileInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientFriendProfileInfoResponse)
  SharedDtor();
}

void CMsgClientFriendProfileInfoResponse::SharedDtor() {
  real_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  summary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendProfileInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientFriendProfileInfoResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendProfileInfoResponse& CMsgClientFriendProfileInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientFriendProfileInfoResponse.base);
  return *internal_default_instance();
}


void CMsgClientFriendProfileInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientFriendProfileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      real_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      city_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      state_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      country_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      headline_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      summary_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&steamid_friend_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_created_) -
        reinterpret_cast<char*>(&steamid_friend_)) + sizeof(time_created_));
  }
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendProfileInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientFriendProfileInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_friend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamid_friend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_created = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string real_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_real_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->real_name().data(), static_cast<int>(this->real_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.real_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city_name().data(), static_cast<int>(this->city_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.city_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state_name().data(), static_cast<int>(this->state_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.state_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_name().data(), static_cast<int>(this->country_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.country_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headline = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headline().data(), static_cast<int>(this->headline().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.headline");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string summary = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->summary().data(), static_cast<int>(this->summary().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientFriendProfileInfoResponse.summary");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientFriendProfileInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientFriendProfileInfoResponse)
  return false;
#undef DO_
}

void CMsgClientFriendProfileInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientFriendProfileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 steamid_friend = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid_friend(), output);
  }

  // optional uint32 time_created = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_created(), output);
  }

  // optional string real_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_name().data(), static_cast<int>(this->real_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.real_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->real_name(), output);
  }

  // optional string city_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_name().data(), static_cast<int>(this->city_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.city_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->city_name(), output);
  }

  // optional string state_name = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_name().data(), static_cast<int>(this->state_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.state_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->state_name(), output);
  }

  // optional string country_name = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_name().data(), static_cast<int>(this->country_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.country_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->country_name(), output);
  }

  // optional string headline = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headline().data(), static_cast<int>(this->headline().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.headline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->headline(), output);
  }

  // optional string summary = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.summary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->summary(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientFriendProfileInfoResponse)
}

::google::protobuf::uint8* CMsgClientFriendProfileInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientFriendProfileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 steamid_friend = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid_friend(), target);
  }

  // optional uint32 time_created = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_created(), target);
  }

  // optional string real_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_name().data(), static_cast<int>(this->real_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.real_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->real_name(), target);
  }

  // optional string city_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city_name().data(), static_cast<int>(this->city_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.city_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->city_name(), target);
  }

  // optional string state_name = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_name().data(), static_cast<int>(this->state_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.state_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->state_name(), target);
  }

  // optional string country_name = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_name().data(), static_cast<int>(this->country_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.country_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->country_name(), target);
  }

  // optional string headline = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headline().data(), static_cast<int>(this->headline().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.headline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->headline(), target);
  }

  // optional string summary = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientFriendProfileInfoResponse.summary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->summary(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientFriendProfileInfoResponse)
  return target;
}

size_t CMsgClientFriendProfileInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientFriendProfileInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string real_name = 4;
    if (has_real_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->real_name());
    }

    // optional string city_name = 5;
    if (has_city_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city_name());
    }

    // optional string state_name = 6;
    if (has_state_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state_name());
    }

    // optional string country_name = 7;
    if (has_country_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_name());
    }

    // optional string headline = 8;
    if (has_headline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headline());
    }

    // optional string summary = 9;
    if (has_summary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->summary());
    }

    // optional fixed64 steamid_friend = 2;
    if (has_steamid_friend()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_created = 3;
    if (has_time_created()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendProfileInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientFriendProfileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendProfileInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendProfileInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientFriendProfileInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientFriendProfileInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientFriendProfileInfoResponse::MergeFrom(const CMsgClientFriendProfileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientFriendProfileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_real_name();
      real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_city_name();
      city_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_state_name();
      state_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_country_name();
      country_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_headline();
      headline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headline_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_summary();
      summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
    }
    if (cached_has_bits & 0x00000040u) {
      steamid_friend_ = from.steamid_friend_;
    }
    if (cached_has_bits & 0x00000080u) {
      time_created_ = from.time_created_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_eresult(from.eresult());
  }
}

void CMsgClientFriendProfileInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientFriendProfileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendProfileInfoResponse::CopyFrom(const CMsgClientFriendProfileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientFriendProfileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendProfileInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientFriendProfileInfoResponse::Swap(CMsgClientFriendProfileInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendProfileInfoResponse::InternalSwap(CMsgClientFriendProfileInfoResponse* other) {
  using std::swap;
  real_name_.Swap(&other->real_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_name_.Swap(&other->city_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_name_.Swap(&other->state_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  country_name_.Swap(&other->country_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headline_.Swap(&other->headline_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  summary_.Swap(&other->summary_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_friend_, other->steamid_friend_);
  swap(time_created_, other->time_created_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientFriendProfileInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCreateFriendsGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCreateFriendsGroup::kSteamidFieldNumber;
const int CMsgClientCreateFriendsGroup::kGroupnameFieldNumber;
const int CMsgClientCreateFriendsGroup::kSteamidFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCreateFriendsGroup::CMsgClientCreateFriendsGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientCreateFriendsGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCreateFriendsGroup)
}
CMsgClientCreateFriendsGroup::CMsgClientCreateFriendsGroup(const CMsgClientCreateFriendsGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamid_friends_(from.steamid_friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_groupname()) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientCreateFriendsGroup)
}

void CMsgClientCreateFriendsGroup::SharedCtor() {
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientCreateFriendsGroup::~CMsgClientCreateFriendsGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientCreateFriendsGroup)
  SharedDtor();
}

void CMsgClientCreateFriendsGroup::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCreateFriendsGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCreateFriendsGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCreateFriendsGroup& CMsgClientCreateFriendsGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientCreateFriendsGroup.base);
  return *internal_default_instance();
}


void CMsgClientCreateFriendsGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCreateFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_friends_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    groupname_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCreateFriendsGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCreateFriendsGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string groupname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), static_cast<int>(this->groupname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientCreateFriendsGroup.groupname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_friends = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steamid_friends())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_friends())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCreateFriendsGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCreateFriendsGroup)
  return false;
#undef DO_
}

void CMsgClientCreateFriendsGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCreateFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string groupname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCreateFriendsGroup.groupname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  // repeated fixed64 steamid_friends = 3;
  for (int i = 0, n = this->steamid_friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steamid_friends(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCreateFriendsGroup)
}

::google::protobuf::uint8* CMsgClientCreateFriendsGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCreateFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string groupname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientCreateFriendsGroup.groupname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }

  // repeated fixed64 steamid_friends = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steamid_friends_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCreateFriendsGroup)
  return target;
}

size_t CMsgClientCreateFriendsGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCreateFriendsGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamid_friends = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_friends_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_friends_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string groupname = 2;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCreateFriendsGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCreateFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCreateFriendsGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCreateFriendsGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCreateFriendsGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCreateFriendsGroup)
    MergeFrom(*source);
  }
}

void CMsgClientCreateFriendsGroup::MergeFrom(const CMsgClientCreateFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCreateFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_friends_.MergeFrom(from.steamid_friends_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCreateFriendsGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCreateFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCreateFriendsGroup::CopyFrom(const CMsgClientCreateFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCreateFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCreateFriendsGroup::IsInitialized() const {
  return true;
}

void CMsgClientCreateFriendsGroup::Swap(CMsgClientCreateFriendsGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCreateFriendsGroup::InternalSwap(CMsgClientCreateFriendsGroup* other) {
  using std::swap;
  steamid_friends_.InternalSwap(&other->steamid_friends_);
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCreateFriendsGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCreateFriendsGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCreateFriendsGroupResponse::kEresultFieldNumber;
const int CMsgClientCreateFriendsGroupResponse::kGroupidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCreateFriendsGroupResponse::CMsgClientCreateFriendsGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientCreateFriendsGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientCreateFriendsGroupResponse)
}
CMsgClientCreateFriendsGroupResponse::CMsgClientCreateFriendsGroupResponse(const CMsgClientCreateFriendsGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientCreateFriendsGroupResponse)
}

void CMsgClientCreateFriendsGroupResponse::SharedCtor() {
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(groupid_));
}

CMsgClientCreateFriendsGroupResponse::~CMsgClientCreateFriendsGroupResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientCreateFriendsGroupResponse)
  SharedDtor();
}

void CMsgClientCreateFriendsGroupResponse::SharedDtor() {
}

void CMsgClientCreateFriendsGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientCreateFriendsGroupResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCreateFriendsGroupResponse& CMsgClientCreateFriendsGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientCreateFriendsGroupResponse.base);
  return *internal_default_instance();
}


void CMsgClientCreateFriendsGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientCreateFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&groupid_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(groupid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCreateFriendsGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientCreateFriendsGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientCreateFriendsGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientCreateFriendsGroupResponse)
  return false;
#undef DO_
}

void CMsgClientCreateFriendsGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientCreateFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional int32 groupid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->groupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientCreateFriendsGroupResponse)
}

::google::protobuf::uint8* CMsgClientCreateFriendsGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientCreateFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 groupid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->groupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientCreateFriendsGroupResponse)
  return target;
}

size_t CMsgClientCreateFriendsGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientCreateFriendsGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 eresult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional int32 groupid = 2;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCreateFriendsGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientCreateFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCreateFriendsGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCreateFriendsGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientCreateFriendsGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientCreateFriendsGroupResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCreateFriendsGroupResponse::MergeFrom(const CMsgClientCreateFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientCreateFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCreateFriendsGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientCreateFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCreateFriendsGroupResponse::CopyFrom(const CMsgClientCreateFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientCreateFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCreateFriendsGroupResponse::IsInitialized() const {
  return true;
}

void CMsgClientCreateFriendsGroupResponse::Swap(CMsgClientCreateFriendsGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCreateFriendsGroupResponse::InternalSwap(CMsgClientCreateFriendsGroupResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientCreateFriendsGroupResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeleteFriendsGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeleteFriendsGroup::kSteamidFieldNumber;
const int CMsgClientDeleteFriendsGroup::kGroupidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeleteFriendsGroup::CMsgClientDeleteFriendsGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientDeleteFriendsGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDeleteFriendsGroup)
}
CMsgClientDeleteFriendsGroup::CMsgClientDeleteFriendsGroup(const CMsgClientDeleteFriendsGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientDeleteFriendsGroup)
}

void CMsgClientDeleteFriendsGroup::SharedCtor() {
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(groupid_));
}

CMsgClientDeleteFriendsGroup::~CMsgClientDeleteFriendsGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientDeleteFriendsGroup)
  SharedDtor();
}

void CMsgClientDeleteFriendsGroup::SharedDtor() {
}

void CMsgClientDeleteFriendsGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDeleteFriendsGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeleteFriendsGroup& CMsgClientDeleteFriendsGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientDeleteFriendsGroup.base);
  return *internal_default_instance();
}


void CMsgClientDeleteFriendsGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDeleteFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&groupid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(groupid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeleteFriendsGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDeleteFriendsGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDeleteFriendsGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDeleteFriendsGroup)
  return false;
#undef DO_
}

void CMsgClientDeleteFriendsGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDeleteFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional int32 groupid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->groupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDeleteFriendsGroup)
}

::google::protobuf::uint8* CMsgClientDeleteFriendsGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDeleteFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional int32 groupid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->groupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDeleteFriendsGroup)
  return target;
}

size_t CMsgClientDeleteFriendsGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDeleteFriendsGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 groupid = 2;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeleteFriendsGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDeleteFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeleteFriendsGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeleteFriendsGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDeleteFriendsGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDeleteFriendsGroup)
    MergeFrom(*source);
  }
}

void CMsgClientDeleteFriendsGroup::MergeFrom(const CMsgClientDeleteFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDeleteFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeleteFriendsGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDeleteFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeleteFriendsGroup::CopyFrom(const CMsgClientDeleteFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDeleteFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeleteFriendsGroup::IsInitialized() const {
  return true;
}

void CMsgClientDeleteFriendsGroup::Swap(CMsgClientDeleteFriendsGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeleteFriendsGroup::InternalSwap(CMsgClientDeleteFriendsGroup* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDeleteFriendsGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeleteFriendsGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeleteFriendsGroupResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeleteFriendsGroupResponse::CMsgClientDeleteFriendsGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientDeleteFriendsGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientDeleteFriendsGroupResponse)
}
CMsgClientDeleteFriendsGroupResponse::CMsgClientDeleteFriendsGroupResponse(const CMsgClientDeleteFriendsGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientDeleteFriendsGroupResponse)
}

void CMsgClientDeleteFriendsGroupResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientDeleteFriendsGroupResponse::~CMsgClientDeleteFriendsGroupResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientDeleteFriendsGroupResponse)
  SharedDtor();
}

void CMsgClientDeleteFriendsGroupResponse::SharedDtor() {
}

void CMsgClientDeleteFriendsGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientDeleteFriendsGroupResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeleteFriendsGroupResponse& CMsgClientDeleteFriendsGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientDeleteFriendsGroupResponse.base);
  return *internal_default_instance();
}


void CMsgClientDeleteFriendsGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientDeleteFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeleteFriendsGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientDeleteFriendsGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientDeleteFriendsGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientDeleteFriendsGroupResponse)
  return false;
#undef DO_
}

void CMsgClientDeleteFriendsGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientDeleteFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientDeleteFriendsGroupResponse)
}

::google::protobuf::uint8* CMsgClientDeleteFriendsGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientDeleteFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientDeleteFriendsGroupResponse)
  return target;
}

size_t CMsgClientDeleteFriendsGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientDeleteFriendsGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeleteFriendsGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientDeleteFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeleteFriendsGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeleteFriendsGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientDeleteFriendsGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientDeleteFriendsGroupResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDeleteFriendsGroupResponse::MergeFrom(const CMsgClientDeleteFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientDeleteFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientDeleteFriendsGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientDeleteFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeleteFriendsGroupResponse::CopyFrom(const CMsgClientDeleteFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientDeleteFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeleteFriendsGroupResponse::IsInitialized() const {
  return true;
}

void CMsgClientDeleteFriendsGroupResponse::Swap(CMsgClientDeleteFriendsGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeleteFriendsGroupResponse::InternalSwap(CMsgClientDeleteFriendsGroupResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientDeleteFriendsGroupResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientManageFriendsGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientManageFriendsGroup::kGroupidFieldNumber;
const int CMsgClientManageFriendsGroup::kGroupnameFieldNumber;
const int CMsgClientManageFriendsGroup::kSteamidFriendsAddedFieldNumber;
const int CMsgClientManageFriendsGroup::kSteamidFriendsRemovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientManageFriendsGroup::CMsgClientManageFriendsGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientManageFriendsGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientManageFriendsGroup)
}
CMsgClientManageFriendsGroup::CMsgClientManageFriendsGroup(const CMsgClientManageFriendsGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      steamid_friends_added_(from.steamid_friends_added_),
      steamid_friends_removed_(from.steamid_friends_removed_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_groupname()) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  groupid_ = from.groupid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientManageFriendsGroup)
}

void CMsgClientManageFriendsGroup::SharedCtor() {
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_ = 0;
}

CMsgClientManageFriendsGroup::~CMsgClientManageFriendsGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientManageFriendsGroup)
  SharedDtor();
}

void CMsgClientManageFriendsGroup::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientManageFriendsGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientManageFriendsGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientManageFriendsGroup& CMsgClientManageFriendsGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientManageFriendsGroup.base);
  return *internal_default_instance();
}


void CMsgClientManageFriendsGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientManageFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_friends_added_.Clear();
  steamid_friends_removed_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    groupname_.ClearNonDefaultToEmptyNoArena();
  }
  groupid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientManageFriendsGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientManageFriendsGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string groupname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), static_cast<int>(this->groupname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientManageFriendsGroup.groupname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_friends_added = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steamid_friends_added())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_friends_added())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_friends_removed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 33u, input, this->mutable_steamid_friends_removed())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_friends_removed())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientManageFriendsGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientManageFriendsGroup)
  return false;
#undef DO_
}

void CMsgClientManageFriendsGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientManageFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  // optional string groupname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientManageFriendsGroup.groupname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  // repeated fixed64 steamid_friends_added = 3;
  for (int i = 0, n = this->steamid_friends_added_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steamid_friends_added(i), output);
  }

  // repeated fixed64 steamid_friends_removed = 4;
  for (int i = 0, n = this->steamid_friends_removed_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      4, this->steamid_friends_removed(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientManageFriendsGroup)
}

::google::protobuf::uint8* CMsgClientManageFriendsGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientManageFriendsGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  // optional string groupname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientManageFriendsGroup.groupname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }

  // repeated fixed64 steamid_friends_added = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steamid_friends_added_, target);

  // repeated fixed64 steamid_friends_removed = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(4, this->steamid_friends_removed_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientManageFriendsGroup)
  return target;
}

size_t CMsgClientManageFriendsGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientManageFriendsGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamid_friends_added = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_friends_added_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_friends_added_size());
    total_size += data_size;
  }

  // repeated fixed64 steamid_friends_removed = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_friends_removed_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_friends_removed_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string groupname = 2;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

    // optional int32 groupid = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientManageFriendsGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientManageFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientManageFriendsGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientManageFriendsGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientManageFriendsGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientManageFriendsGroup)
    MergeFrom(*source);
  }
}

void CMsgClientManageFriendsGroup::MergeFrom(const CMsgClientManageFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientManageFriendsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_friends_added_.MergeFrom(from.steamid_friends_added_);
  steamid_friends_removed_.MergeFrom(from.steamid_friends_removed_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientManageFriendsGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientManageFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientManageFriendsGroup::CopyFrom(const CMsgClientManageFriendsGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientManageFriendsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientManageFriendsGroup::IsInitialized() const {
  return true;
}

void CMsgClientManageFriendsGroup::Swap(CMsgClientManageFriendsGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientManageFriendsGroup::InternalSwap(CMsgClientManageFriendsGroup* other) {
  using std::swap;
  steamid_friends_added_.InternalSwap(&other->steamid_friends_added_);
  steamid_friends_removed_.InternalSwap(&other->steamid_friends_removed_);
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientManageFriendsGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientManageFriendsGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientManageFriendsGroupResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientManageFriendsGroupResponse::CMsgClientManageFriendsGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientManageFriendsGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientManageFriendsGroupResponse)
}
CMsgClientManageFriendsGroupResponse::CMsgClientManageFriendsGroupResponse(const CMsgClientManageFriendsGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientManageFriendsGroupResponse)
}

void CMsgClientManageFriendsGroupResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientManageFriendsGroupResponse::~CMsgClientManageFriendsGroupResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientManageFriendsGroupResponse)
  SharedDtor();
}

void CMsgClientManageFriendsGroupResponse::SharedDtor() {
}

void CMsgClientManageFriendsGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientManageFriendsGroupResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientManageFriendsGroupResponse& CMsgClientManageFriendsGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientManageFriendsGroupResponse.base);
  return *internal_default_instance();
}


void CMsgClientManageFriendsGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientManageFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientManageFriendsGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientManageFriendsGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientManageFriendsGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientManageFriendsGroupResponse)
  return false;
#undef DO_
}

void CMsgClientManageFriendsGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientManageFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientManageFriendsGroupResponse)
}

::google::protobuf::uint8* CMsgClientManageFriendsGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientManageFriendsGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientManageFriendsGroupResponse)
  return target;
}

size_t CMsgClientManageFriendsGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientManageFriendsGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientManageFriendsGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientManageFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientManageFriendsGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientManageFriendsGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientManageFriendsGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientManageFriendsGroupResponse)
    MergeFrom(*source);
  }
}

void CMsgClientManageFriendsGroupResponse::MergeFrom(const CMsgClientManageFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientManageFriendsGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientManageFriendsGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientManageFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientManageFriendsGroupResponse::CopyFrom(const CMsgClientManageFriendsGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientManageFriendsGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientManageFriendsGroupResponse::IsInitialized() const {
  return true;
}

void CMsgClientManageFriendsGroupResponse::Swap(CMsgClientManageFriendsGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientManageFriendsGroupResponse::InternalSwap(CMsgClientManageFriendsGroupResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientManageFriendsGroupResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAddFriendToGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAddFriendToGroup::kGroupidFieldNumber;
const int CMsgClientAddFriendToGroup::kSteamiduserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAddFriendToGroup::CMsgClientAddFriendToGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendToGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAddFriendToGroup)
}
CMsgClientAddFriendToGroup::CMsgClientAddFriendToGroup(const CMsgClientAddFriendToGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamiduser_, &from.steamiduser_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientAddFriendToGroup)
}

void CMsgClientAddFriendToGroup::SharedCtor() {
  ::memset(&steamiduser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
}

CMsgClientAddFriendToGroup::~CMsgClientAddFriendToGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientAddFriendToGroup)
  SharedDtor();
}

void CMsgClientAddFriendToGroup::SharedDtor() {
}

void CMsgClientAddFriendToGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAddFriendToGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAddFriendToGroup& CMsgClientAddFriendToGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendToGroup.base);
  return *internal_default_instance();
}


void CMsgClientAddFriendToGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAddFriendToGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamiduser_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&groupid_) -
        reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAddFriendToGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAddFriendToGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamiduser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamiduser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamiduser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAddFriendToGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAddFriendToGroup)
  return false;
#undef DO_
}

void CMsgClientAddFriendToGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAddFriendToGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  // optional fixed64 steamiduser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamiduser(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAddFriendToGroup)
}

::google::protobuf::uint8* CMsgClientAddFriendToGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAddFriendToGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  // optional fixed64 steamiduser = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamiduser(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAddFriendToGroup)
  return target;
}

size_t CMsgClientAddFriendToGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAddFriendToGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamiduser = 2;
    if (has_steamiduser()) {
      total_size += 1 + 8;
    }

    // optional int32 groupid = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAddFriendToGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAddFriendToGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAddFriendToGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAddFriendToGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAddFriendToGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAddFriendToGroup)
    MergeFrom(*source);
  }
}

void CMsgClientAddFriendToGroup::MergeFrom(const CMsgClientAddFriendToGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAddFriendToGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamiduser_ = from.steamiduser_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAddFriendToGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAddFriendToGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAddFriendToGroup::CopyFrom(const CMsgClientAddFriendToGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAddFriendToGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAddFriendToGroup::IsInitialized() const {
  return true;
}

void CMsgClientAddFriendToGroup::Swap(CMsgClientAddFriendToGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAddFriendToGroup::InternalSwap(CMsgClientAddFriendToGroup* other) {
  using std::swap;
  swap(steamiduser_, other->steamiduser_);
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAddFriendToGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAddFriendToGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAddFriendToGroupResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAddFriendToGroupResponse::CMsgClientAddFriendToGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendToGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientAddFriendToGroupResponse)
}
CMsgClientAddFriendToGroupResponse::CMsgClientAddFriendToGroupResponse(const CMsgClientAddFriendToGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientAddFriendToGroupResponse)
}

void CMsgClientAddFriendToGroupResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientAddFriendToGroupResponse::~CMsgClientAddFriendToGroupResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientAddFriendToGroupResponse)
  SharedDtor();
}

void CMsgClientAddFriendToGroupResponse::SharedDtor() {
}

void CMsgClientAddFriendToGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientAddFriendToGroupResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAddFriendToGroupResponse& CMsgClientAddFriendToGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientAddFriendToGroupResponse.base);
  return *internal_default_instance();
}


void CMsgClientAddFriendToGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientAddFriendToGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAddFriendToGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientAddFriendToGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientAddFriendToGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientAddFriendToGroupResponse)
  return false;
#undef DO_
}

void CMsgClientAddFriendToGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientAddFriendToGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientAddFriendToGroupResponse)
}

::google::protobuf::uint8* CMsgClientAddFriendToGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientAddFriendToGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientAddFriendToGroupResponse)
  return target;
}

size_t CMsgClientAddFriendToGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientAddFriendToGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAddFriendToGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientAddFriendToGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAddFriendToGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAddFriendToGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientAddFriendToGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientAddFriendToGroupResponse)
    MergeFrom(*source);
  }
}

void CMsgClientAddFriendToGroupResponse::MergeFrom(const CMsgClientAddFriendToGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientAddFriendToGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientAddFriendToGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientAddFriendToGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAddFriendToGroupResponse::CopyFrom(const CMsgClientAddFriendToGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientAddFriendToGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAddFriendToGroupResponse::IsInitialized() const {
  return true;
}

void CMsgClientAddFriendToGroupResponse::Swap(CMsgClientAddFriendToGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAddFriendToGroupResponse::InternalSwap(CMsgClientAddFriendToGroupResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientAddFriendToGroupResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRemoveFriendFromGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRemoveFriendFromGroup::kGroupidFieldNumber;
const int CMsgClientRemoveFriendFromGroup::kSteamiduserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRemoveFriendFromGroup::CMsgClientRemoveFriendFromGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriendFromGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRemoveFriendFromGroup)
}
CMsgClientRemoveFriendFromGroup::CMsgClientRemoveFriendFromGroup(const CMsgClientRemoveFriendFromGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamiduser_, &from.steamiduser_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientRemoveFriendFromGroup)
}

void CMsgClientRemoveFriendFromGroup::SharedCtor() {
  ::memset(&steamiduser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&groupid_) -
      reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
}

CMsgClientRemoveFriendFromGroup::~CMsgClientRemoveFriendFromGroup() {
  // @@protoc_insertion_point(destructor:CMsgClientRemoveFriendFromGroup)
  SharedDtor();
}

void CMsgClientRemoveFriendFromGroup::SharedDtor() {
}

void CMsgClientRemoveFriendFromGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRemoveFriendFromGroup::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRemoveFriendFromGroup& CMsgClientRemoveFriendFromGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriendFromGroup.base);
  return *internal_default_instance();
}


void CMsgClientRemoveFriendFromGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRemoveFriendFromGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamiduser_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&groupid_) -
        reinterpret_cast<char*>(&steamiduser_)) + sizeof(groupid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRemoveFriendFromGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRemoveFriendFromGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamiduser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamiduser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamiduser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRemoveFriendFromGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRemoveFriendFromGroup)
  return false;
#undef DO_
}

void CMsgClientRemoveFriendFromGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRemoveFriendFromGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  // optional fixed64 steamiduser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamiduser(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRemoveFriendFromGroup)
}

::google::protobuf::uint8* CMsgClientRemoveFriendFromGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRemoveFriendFromGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  // optional fixed64 steamiduser = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamiduser(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRemoveFriendFromGroup)
  return target;
}

size_t CMsgClientRemoveFriendFromGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRemoveFriendFromGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamiduser = 2;
    if (has_steamiduser()) {
      total_size += 1 + 8;
    }

    // optional int32 groupid = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRemoveFriendFromGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRemoveFriendFromGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRemoveFriendFromGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRemoveFriendFromGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRemoveFriendFromGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRemoveFriendFromGroup)
    MergeFrom(*source);
  }
}

void CMsgClientRemoveFriendFromGroup::MergeFrom(const CMsgClientRemoveFriendFromGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRemoveFriendFromGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamiduser_ = from.steamiduser_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRemoveFriendFromGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRemoveFriendFromGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRemoveFriendFromGroup::CopyFrom(const CMsgClientRemoveFriendFromGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRemoveFriendFromGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRemoveFriendFromGroup::IsInitialized() const {
  return true;
}

void CMsgClientRemoveFriendFromGroup::Swap(CMsgClientRemoveFriendFromGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRemoveFriendFromGroup::InternalSwap(CMsgClientRemoveFriendFromGroup* other) {
  using std::swap;
  swap(steamiduser_, other->steamiduser_);
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRemoveFriendFromGroup::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRemoveFriendFromGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRemoveFriendFromGroupResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRemoveFriendFromGroupResponse::CMsgClientRemoveFriendFromGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriendFromGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientRemoveFriendFromGroupResponse)
}
CMsgClientRemoveFriendFromGroupResponse::CMsgClientRemoveFriendFromGroupResponse(const CMsgClientRemoveFriendFromGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientRemoveFriendFromGroupResponse)
}

void CMsgClientRemoveFriendFromGroupResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientRemoveFriendFromGroupResponse::~CMsgClientRemoveFriendFromGroupResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientRemoveFriendFromGroupResponse)
  SharedDtor();
}

void CMsgClientRemoveFriendFromGroupResponse::SharedDtor() {
}

void CMsgClientRemoveFriendFromGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientRemoveFriendFromGroupResponse::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRemoveFriendFromGroupResponse& CMsgClientRemoveFriendFromGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientRemoveFriendFromGroupResponse.base);
  return *internal_default_instance();
}


void CMsgClientRemoveFriendFromGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientRemoveFriendFromGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRemoveFriendFromGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientRemoveFriendFromGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientRemoveFriendFromGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientRemoveFriendFromGroupResponse)
  return false;
#undef DO_
}

void CMsgClientRemoveFriendFromGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientRemoveFriendFromGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientRemoveFriendFromGroupResponse)
}

::google::protobuf::uint8* CMsgClientRemoveFriendFromGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientRemoveFriendFromGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientRemoveFriendFromGroupResponse)
  return target;
}

size_t CMsgClientRemoveFriendFromGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientRemoveFriendFromGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRemoveFriendFromGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientRemoveFriendFromGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRemoveFriendFromGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRemoveFriendFromGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientRemoveFriendFromGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientRemoveFriendFromGroupResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRemoveFriendFromGroupResponse::MergeFrom(const CMsgClientRemoveFriendFromGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientRemoveFriendFromGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRemoveFriendFromGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientRemoveFriendFromGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRemoveFriendFromGroupResponse::CopyFrom(const CMsgClientRemoveFriendFromGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientRemoveFriendFromGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRemoveFriendFromGroupResponse::IsInitialized() const {
  return true;
}

void CMsgClientRemoveFriendFromGroupResponse::Swap(CMsgClientRemoveFriendFromGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRemoveFriendFromGroupResponse::InternalSwap(CMsgClientRemoveFriendFromGroupResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientRemoveFriendFromGroupResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetEmoticonList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetEmoticonList::CMsgClientGetEmoticonList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientGetEmoticonList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientGetEmoticonList)
}
CMsgClientGetEmoticonList::CMsgClientGetEmoticonList(const CMsgClientGetEmoticonList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientGetEmoticonList)
}

void CMsgClientGetEmoticonList::SharedCtor() {
}

CMsgClientGetEmoticonList::~CMsgClientGetEmoticonList() {
  // @@protoc_insertion_point(destructor:CMsgClientGetEmoticonList)
  SharedDtor();
}

void CMsgClientGetEmoticonList::SharedDtor() {
}

void CMsgClientGetEmoticonList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientGetEmoticonList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetEmoticonList& CMsgClientGetEmoticonList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientGetEmoticonList.base);
  return *internal_default_instance();
}


void CMsgClientGetEmoticonList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientGetEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetEmoticonList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientGetEmoticonList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientGetEmoticonList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientGetEmoticonList)
  return false;
#undef DO_
}

void CMsgClientGetEmoticonList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientGetEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientGetEmoticonList)
}

::google::protobuf::uint8* CMsgClientGetEmoticonList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientGetEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientGetEmoticonList)
  return target;
}

size_t CMsgClientGetEmoticonList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientGetEmoticonList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetEmoticonList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientGetEmoticonList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetEmoticonList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetEmoticonList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientGetEmoticonList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientGetEmoticonList)
    MergeFrom(*source);
  }
}

void CMsgClientGetEmoticonList::MergeFrom(const CMsgClientGetEmoticonList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientGetEmoticonList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientGetEmoticonList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientGetEmoticonList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetEmoticonList::CopyFrom(const CMsgClientGetEmoticonList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientGetEmoticonList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetEmoticonList::IsInitialized() const {
  return true;
}

void CMsgClientGetEmoticonList::Swap(CMsgClientGetEmoticonList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetEmoticonList::InternalSwap(CMsgClientGetEmoticonList* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientGetEmoticonList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmoticonList_Emoticon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmoticonList_Emoticon::kNameFieldNumber;
const int CMsgClientEmoticonList_Emoticon::kCountFieldNumber;
const int CMsgClientEmoticonList_Emoticon::kTimeLastUsedFieldNumber;
const int CMsgClientEmoticonList_Emoticon::kUseCountFieldNumber;
const int CMsgClientEmoticonList_Emoticon::kTimeReceivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmoticonList_Emoticon::CMsgClientEmoticonList_Emoticon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientEmoticonList_Emoticon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientEmoticonList.Emoticon)
}
CMsgClientEmoticonList_Emoticon::CMsgClientEmoticonList_Emoticon(const CMsgClientEmoticonList_Emoticon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_received_) -
    reinterpret_cast<char*>(&count_)) + sizeof(time_received_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientEmoticonList.Emoticon)
}

void CMsgClientEmoticonList_Emoticon::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_received_) -
      reinterpret_cast<char*>(&count_)) + sizeof(time_received_));
}

CMsgClientEmoticonList_Emoticon::~CMsgClientEmoticonList_Emoticon() {
  // @@protoc_insertion_point(destructor:CMsgClientEmoticonList.Emoticon)
  SharedDtor();
}

void CMsgClientEmoticonList_Emoticon::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmoticonList_Emoticon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientEmoticonList_Emoticon::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmoticonList_Emoticon& CMsgClientEmoticonList_Emoticon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientEmoticonList_Emoticon.base);
  return *internal_default_instance();
}


void CMsgClientEmoticonList_Emoticon::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientEmoticonList.Emoticon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_received_) -
        reinterpret_cast<char*>(&count_)) + sizeof(time_received_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmoticonList_Emoticon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientEmoticonList.Emoticon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientEmoticonList.Emoticon.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_last_used = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_last_used();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_last_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 use_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_use_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &use_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_received = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time_received();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientEmoticonList.Emoticon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientEmoticonList.Emoticon)
  return false;
#undef DO_
}

void CMsgClientEmoticonList_Emoticon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientEmoticonList.Emoticon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmoticonList.Emoticon.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional uint32 time_last_used = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_last_used(), output);
  }

  // optional uint32 use_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->use_count(), output);
  }

  // optional uint32 time_received = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_received(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientEmoticonList.Emoticon)
}

::google::protobuf::uint8* CMsgClientEmoticonList_Emoticon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientEmoticonList.Emoticon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientEmoticonList.Emoticon.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional uint32 time_last_used = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_last_used(), target);
  }

  // optional uint32 use_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->use_count(), target);
  }

  // optional uint32 time_received = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_received(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientEmoticonList.Emoticon)
  return target;
}

size_t CMsgClientEmoticonList_Emoticon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientEmoticonList.Emoticon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional uint32 time_last_used = 3;
    if (has_time_last_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_last_used());
    }

    // optional uint32 use_count = 4;
    if (has_use_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->use_count());
    }

    // optional uint32 time_received = 5;
    if (has_time_received()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_received());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmoticonList_Emoticon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientEmoticonList.Emoticon)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmoticonList_Emoticon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmoticonList_Emoticon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientEmoticonList.Emoticon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientEmoticonList.Emoticon)
    MergeFrom(*source);
  }
}

void CMsgClientEmoticonList_Emoticon::MergeFrom(const CMsgClientEmoticonList_Emoticon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientEmoticonList.Emoticon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_last_used_ = from.time_last_used_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_count_ = from.use_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_received_ = from.time_received_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmoticonList_Emoticon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientEmoticonList.Emoticon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmoticonList_Emoticon::CopyFrom(const CMsgClientEmoticonList_Emoticon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientEmoticonList.Emoticon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmoticonList_Emoticon::IsInitialized() const {
  return true;
}

void CMsgClientEmoticonList_Emoticon::Swap(CMsgClientEmoticonList_Emoticon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmoticonList_Emoticon::InternalSwap(CMsgClientEmoticonList_Emoticon* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(time_last_used_, other->time_last_used_);
  swap(use_count_, other->use_count_);
  swap(time_received_, other->time_received_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientEmoticonList_Emoticon::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmoticonList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmoticonList::kEmoticonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmoticonList::CMsgClientEmoticonList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientEmoticonList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientEmoticonList)
}
CMsgClientEmoticonList::CMsgClientEmoticonList(const CMsgClientEmoticonList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      emoticons_(from.emoticons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientEmoticonList)
}

void CMsgClientEmoticonList::SharedCtor() {
}

CMsgClientEmoticonList::~CMsgClientEmoticonList() {
  // @@protoc_insertion_point(destructor:CMsgClientEmoticonList)
  SharedDtor();
}

void CMsgClientEmoticonList::SharedDtor() {
}

void CMsgClientEmoticonList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClientEmoticonList::descriptor() {
  ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmoticonList& CMsgClientEmoticonList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5fclientserver_5ffriends_2eproto::scc_info_CMsgClientEmoticonList.base);
  return *internal_default_instance();
}


void CMsgClientEmoticonList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  emoticons_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmoticonList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientEmoticonList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgClientEmoticonList.Emoticon emoticons = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_emoticons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientEmoticonList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientEmoticonList)
  return false;
#undef DO_
}

void CMsgClientEmoticonList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientEmoticonList.Emoticon emoticons = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->emoticons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->emoticons(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientEmoticonList)
}

::google::protobuf::uint8* CMsgClientEmoticonList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientEmoticonList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgClientEmoticonList.Emoticon emoticons = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->emoticons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->emoticons(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientEmoticonList)
  return target;
}

size_t CMsgClientEmoticonList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientEmoticonList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgClientEmoticonList.Emoticon emoticons = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->emoticons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->emoticons(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmoticonList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientEmoticonList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmoticonList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmoticonList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientEmoticonList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientEmoticonList)
    MergeFrom(*source);
  }
}

void CMsgClientEmoticonList::MergeFrom(const CMsgClientEmoticonList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientEmoticonList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  emoticons_.MergeFrom(from.emoticons_);
}

void CMsgClientEmoticonList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientEmoticonList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmoticonList::CopyFrom(const CMsgClientEmoticonList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientEmoticonList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmoticonList::IsInitialized() const {
  return true;
}

void CMsgClientEmoticonList::Swap(CMsgClientEmoticonList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmoticonList::InternalSwap(CMsgClientEmoticonList* other) {
  using std::swap;
  CastToBase(&emoticons_)->InternalSwap(CastToBase(&other->emoticons_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClientEmoticonList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5fclientserver_5ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendMsg* Arena::CreateMaybeMessage< ::CMsgClientFriendMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendMsgIncoming* Arena::CreateMaybeMessage< ::CMsgClientFriendMsgIncoming >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendMsgIncoming >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAddFriend* Arena::CreateMaybeMessage< ::CMsgClientAddFriend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAddFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAddFriendResponse* Arena::CreateMaybeMessage< ::CMsgClientAddFriendResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAddFriendResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRemoveFriend* Arena::CreateMaybeMessage< ::CMsgClientRemoveFriend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRemoveFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientHideFriend* Arena::CreateMaybeMessage< ::CMsgClientHideFriend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientHideFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendsList_Friend* Arena::CreateMaybeMessage< ::CMsgClientFriendsList_Friend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendsList_Friend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendsList* Arena::CreateMaybeMessage< ::CMsgClientFriendsList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendsList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendsGroupsList_FriendGroup* Arena::CreateMaybeMessage< ::CMsgClientFriendsGroupsList_FriendGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendsGroupsList_FriendGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendsGroupsList_FriendGroupsMembership* Arena::CreateMaybeMessage< ::CMsgClientFriendsGroupsList_FriendGroupsMembership >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendsGroupsList_FriendGroupsMembership >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendsGroupsList* Arena::CreateMaybeMessage< ::CMsgClientFriendsGroupsList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendsGroupsList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPlayerNicknameList_PlayerNickname* Arena::CreateMaybeMessage< ::CMsgClientPlayerNicknameList_PlayerNickname >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPlayerNicknameList_PlayerNickname >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPlayerNicknameList* Arena::CreateMaybeMessage< ::CMsgClientPlayerNicknameList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPlayerNicknameList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSetPlayerNickname* Arena::CreateMaybeMessage< ::CMsgClientSetPlayerNickname >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSetPlayerNickname >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientSetPlayerNicknameResponse* Arena::CreateMaybeMessage< ::CMsgClientSetPlayerNicknameResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientSetPlayerNicknameResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRequestFriendData* Arena::CreateMaybeMessage< ::CMsgClientRequestFriendData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRequestFriendData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientChangeStatus* Arena::CreateMaybeMessage< ::CMsgClientChangeStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientChangeStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPersonaChangeResponse* Arena::CreateMaybeMessage< ::CMsgPersonaChangeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPersonaChangeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPersonaState_Friend_ClanData* Arena::CreateMaybeMessage< ::CMsgClientPersonaState_Friend_ClanData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPersonaState_Friend_ClanData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPersonaState_Friend_KV* Arena::CreateMaybeMessage< ::CMsgClientPersonaState_Friend_KV >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPersonaState_Friend_KV >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPersonaState_Friend* Arena::CreateMaybeMessage< ::CMsgClientPersonaState_Friend >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPersonaState_Friend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientPersonaState* Arena::CreateMaybeMessage< ::CMsgClientPersonaState >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientPersonaState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendProfileInfo* Arena::CreateMaybeMessage< ::CMsgClientFriendProfileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendProfileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientFriendProfileInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientFriendProfileInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientFriendProfileInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCreateFriendsGroup* Arena::CreateMaybeMessage< ::CMsgClientCreateFriendsGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCreateFriendsGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientCreateFriendsGroupResponse* Arena::CreateMaybeMessage< ::CMsgClientCreateFriendsGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientCreateFriendsGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDeleteFriendsGroup* Arena::CreateMaybeMessage< ::CMsgClientDeleteFriendsGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDeleteFriendsGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientDeleteFriendsGroupResponse* Arena::CreateMaybeMessage< ::CMsgClientDeleteFriendsGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientDeleteFriendsGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientManageFriendsGroup* Arena::CreateMaybeMessage< ::CMsgClientManageFriendsGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientManageFriendsGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientManageFriendsGroupResponse* Arena::CreateMaybeMessage< ::CMsgClientManageFriendsGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientManageFriendsGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAddFriendToGroup* Arena::CreateMaybeMessage< ::CMsgClientAddFriendToGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAddFriendToGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientAddFriendToGroupResponse* Arena::CreateMaybeMessage< ::CMsgClientAddFriendToGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientAddFriendToGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRemoveFriendFromGroup* Arena::CreateMaybeMessage< ::CMsgClientRemoveFriendFromGroup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRemoveFriendFromGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientRemoveFriendFromGroupResponse* Arena::CreateMaybeMessage< ::CMsgClientRemoveFriendFromGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientRemoveFriendFromGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientGetEmoticonList* Arena::CreateMaybeMessage< ::CMsgClientGetEmoticonList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientGetEmoticonList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientEmoticonList_Emoticon* Arena::CreateMaybeMessage< ::CMsgClientEmoticonList_Emoticon >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientEmoticonList_Emoticon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClientEmoticonList* Arena::CreateMaybeMessage< ::CMsgClientEmoticonList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClientEmoticonList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
