// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: htmlmessages.proto

#include "htmlmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_htmlmessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CCookie;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CHTMLHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CHTMLPageSecurityInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMSgJumpListMRUApp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDraggableRegionsChanged_DraggableRects;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJumpListLink;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_htmlmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute;
}  // namespace protobuf_htmlmessages_2eproto
class CMsgKeyUpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgKeyUp>
      _instance;
} _CMsgKeyUp_default_instance_;
class CMsgKeyDownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgKeyDown>
      _instance;
} _CMsgKeyDown_default_instance_;
class CMsgKeyCharDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgKeyChar>
      _instance;
} _CMsgKeyChar_default_instance_;
class CMsgMouseDownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseDown>
      _instance;
} _CMsgMouseDown_default_instance_;
class CMsgMouseUpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseUp>
      _instance;
} _CMsgMouseUp_default_instance_;
class CMsgMouseDblClickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseDblClick>
      _instance;
} _CMsgMouseDblClick_default_instance_;
class CMsgMouseWheelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseWheel>
      _instance;
} _CMsgMouseWheel_default_instance_;
class CMsgMouseMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseMove>
      _instance;
} _CMsgMouseMove_default_instance_;
class CMsgMouseLeaveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMouseLeave>
      _instance;
} _CMsgMouseLeave_default_instance_;
class CMsgBrowserCreateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserCreate>
      _instance;
} _CMsgBrowserCreate_default_instance_;
class CMsgBrowserCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserCreateResponse>
      _instance;
} _CMsgBrowserCreateResponse_default_instance_;
class CMsgBrowserRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserRemove>
      _instance;
} _CMsgBrowserRemove_default_instance_;
class CMsgSetLocalFileRequestMapping_AdditionalRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetLocalFileRequestMapping_AdditionalRoute>
      _instance;
} _CMsgSetLocalFileRequestMapping_AdditionalRoute_default_instance_;
class CMsgSetLocalFileRequestMappingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetLocalFileRequestMapping>
      _instance;
} _CMsgSetLocalFileRequestMapping_default_instance_;
class CMsgBrowserErrorStringsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserErrorStrings>
      _instance;
} _CMsgBrowserErrorStrings_default_instance_;
class CMsgBrowserSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserSize>
      _instance;
} _CMsgBrowserSize_default_instance_;
class CMsgBrowserSetMinSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserSetMinSize>
      _instance;
} _CMsgBrowserSetMinSize_default_instance_;
class CMsgBrowserPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserPosition>
      _instance;
} _CMsgBrowserPosition_default_instance_;
class CMsgBrowserResizedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserResized>
      _instance;
} _CMsgBrowserResized_default_instance_;
class CMsgPostURLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPostURL>
      _instance;
} _CMsgPostURL_default_instance_;
class CMsgAddHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAddHeader>
      _instance;
} _CMsgAddHeader_default_instance_;
class CMsgStopLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStopLoad>
      _instance;
} _CMsgStopLoad_default_instance_;
class CMsgReloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgReload>
      _instance;
} _CMsgReload_default_instance_;
class CMsgGoForwardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGoForward>
      _instance;
} _CMsgGoForward_default_instance_;
class CMsgGoBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGoBack>
      _instance;
} _CMsgGoBack_default_instance_;
class CMsgWasHiddenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgWasHidden>
      _instance;
} _CMsgWasHidden_default_instance_;
class CMsgClearHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearHistory>
      _instance;
} _CMsgClearHistory_default_instance_;
class CMsgClearAllBrowsingDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearAllBrowsingData>
      _instance;
} _CMsgClearAllBrowsingData_default_instance_;
class CMsgCopyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCopy>
      _instance;
} _CMsgCopy_default_instance_;
class CMsgPasteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPaste>
      _instance;
} _CMsgPaste_default_instance_;
class CMsgExecuteJavaScriptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgExecuteJavaScript>
      _instance;
} _CMsgExecuteJavaScript_default_instance_;
class CMsgSetFocusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetFocus>
      _instance;
} _CMsgSetFocus_default_instance_;
class CMsgHorizontalScrollBarSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHorizontalScrollBarSize>
      _instance;
} _CMsgHorizontalScrollBarSize_default_instance_;
class CMsgHorizontalScrollBarSizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHorizontalScrollBarSizeResponse>
      _instance;
} _CMsgHorizontalScrollBarSizeResponse_default_instance_;
class CMsgVerticalScrollBarSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVerticalScrollBarSize>
      _instance;
} _CMsgVerticalScrollBarSize_default_instance_;
class CMsgVerticalScrollBarSizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVerticalScrollBarSizeResponse>
      _instance;
} _CMsgVerticalScrollBarSizeResponse_default_instance_;
class CMsgFindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFind>
      _instance;
} _CMsgFind_default_instance_;
class CMsgStopFindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStopFind>
      _instance;
} _CMsgStopFind_default_instance_;
class CMsgSetHorizontalScrollDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetHorizontalScroll>
      _instance;
} _CMsgSetHorizontalScroll_default_instance_;
class CMsgSetVerticalScrollDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetVerticalScroll>
      _instance;
} _CMsgSetVerticalScroll_default_instance_;
class CMsgSetZoomLevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetZoomLevel>
      _instance;
} _CMsgSetZoomLevel_default_instance_;
class CMsgViewSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgViewSource>
      _instance;
} _CMsgViewSource_default_instance_;
class CMsgBrowserReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBrowserReady>
      _instance;
} _CMsgBrowserReady_default_instance_;
class CMsgURLChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgURLChanged>
      _instance;
} _CMsgURLChanged_default_instance_;
class CHTMLHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CHTMLHeader>
      _instance;
} _CHTMLHeader_default_instance_;
class CHTMLPageSecurityInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CHTMLPageSecurityInfo>
      _instance;
} _CHTMLPageSecurityInfo_default_instance_;
class CMsgFinishedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFinishedRequest>
      _instance;
} _CMsgFinishedRequest_default_instance_;
class CMsgLoadedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLoadedRequest>
      _instance;
} _CMsgLoadedRequest_default_instance_;
class CMsgPageSecurityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPageSecurity>
      _instance;
} _CMsgPageSecurity_default_instance_;
class CMsgStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStartRequest>
      _instance;
} _CMsgStartRequest_default_instance_;
class CMsgStartRequestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStartRequestResponse>
      _instance;
} _CMsgStartRequestResponse_default_instance_;
class CMsgShowPopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgShowPopup>
      _instance;
} _CMsgShowPopup_default_instance_;
class CMsgHidePopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHidePopup>
      _instance;
} _CMsgHidePopup_default_instance_;
class CMsgSizePopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSizePopup>
      _instance;
} _CMsgSizePopup_default_instance_;
class CMsgOpenNewTabDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgOpenNewTab>
      _instance;
} _CMsgOpenNewTab_default_instance_;
class CMsgPopupHTMLWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPopupHTMLWindow>
      _instance;
} _CMsgPopupHTMLWindow_default_instance_;
class CMsgPopupHTMLWindowResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPopupHTMLWindowResponse>
      _instance;
} _CMsgPopupHTMLWindowResponse_default_instance_;
class CMsgSetHTMLTitleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetHTMLTitle>
      _instance;
} _CMsgSetHTMLTitle_default_instance_;
class CMsgLoadingResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLoadingResource>
      _instance;
} _CMsgLoadingResource_default_instance_;
class CMsgStatusTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStatusText>
      _instance;
} _CMsgStatusText_default_instance_;
class CMsgSetCursorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetCursor>
      _instance;
} _CMsgSetCursor_default_instance_;
class CMsgFileLoadDialogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFileLoadDialog>
      _instance;
} _CMsgFileLoadDialog_default_instance_;
class CMsgFileLoadDialogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFileLoadDialogResponse>
      _instance;
} _CMsgFileLoadDialogResponse_default_instance_;
class CMsgShowToolTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgShowToolTip>
      _instance;
} _CMsgShowToolTip_default_instance_;
class CMsgUpdateToolTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUpdateToolTip>
      _instance;
} _CMsgUpdateToolTip_default_instance_;
class CMsgHideToolTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHideToolTip>
      _instance;
} _CMsgHideToolTip_default_instance_;
class CMsgSearchResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSearchResults>
      _instance;
} _CMsgSearchResults_default_instance_;
class CMsgCloseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClose>
      _instance;
} _CMsgClose_default_instance_;
class CMsgSetSharedPaintBuffersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetSharedPaintBuffers>
      _instance;
} _CMsgSetSharedPaintBuffers_default_instance_;
class CMsgAckSharedPaintBuffersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAckSharedPaintBuffers>
      _instance;
} _CMsgAckSharedPaintBuffers_default_instance_;
class CMsgNeedsPaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNeedsPaint>
      _instance;
} _CMsgNeedsPaint_default_instance_;
class CMsgComboNeedsPaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgComboNeedsPaint>
      _instance;
} _CMsgComboNeedsPaint_default_instance_;
class CMsgNeedsSharedTexturePaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNeedsSharedTexturePaint>
      _instance;
} _CMsgNeedsSharedTexturePaint_default_instance_;
class CMsgGameOverlayTexturePaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameOverlayTexturePaint>
      _instance;
} _CMsgGameOverlayTexturePaint_default_instance_;
class CMsgGetZoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGetZoom>
      _instance;
} _CMsgGetZoom_default_instance_;
class CMsgGetZoomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGetZoomResponse>
      _instance;
} _CMsgGetZoomResponse_default_instance_;
class CMsgLinkAtPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLinkAtPosition>
      _instance;
} _CMsgLinkAtPosition_default_instance_;
class CMsgLinkAtPositionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLinkAtPositionResponse>
      _instance;
} _CMsgLinkAtPositionResponse_default_instance_;
class CMsgZoomToElementAtPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgZoomToElementAtPosition>
      _instance;
} _CMsgZoomToElementAtPosition_default_instance_;
class CMsgZoomToElementAtPositionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgZoomToElementAtPositionResponse>
      _instance;
} _CMsgZoomToElementAtPositionResponse_default_instance_;
class CMsgScalePageToValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgScalePageToValue>
      _instance;
} _CMsgScalePageToValue_default_instance_;
class CMsgScalePageToValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgScalePageToValueResponse>
      _instance;
} _CMsgScalePageToValueResponse_default_instance_;
class CMsgSavePageToJPEGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSavePageToJPEG>
      _instance;
} _CMsgSavePageToJPEG_default_instance_;
class CMsgSavePageToJPEGResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSavePageToJPEGResponse>
      _instance;
} _CMsgSavePageToJPEGResponse_default_instance_;
class CMsgJSAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSAlert>
      _instance;
} _CMsgJSAlert_default_instance_;
class CMsgJSConfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSConfirm>
      _instance;
} _CMsgJSConfirm_default_instance_;
class CMsgJSDialogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSDialogResponse>
      _instance;
} _CMsgJSDialogResponse_default_instance_;
class CMsgCanGoBackAndForwardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCanGoBackAndForward>
      _instance;
} _CMsgCanGoBackAndForward_default_instance_;
class CMsgOpenSteamURLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgOpenSteamURL>
      _instance;
} _CMsgOpenSteamURL_default_instance_;
class CMsgSetCookieDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetCookie>
      _instance;
} _CMsgSetCookie_default_instance_;
class CMsgSetTargetFrameRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetTargetFrameRate>
      _instance;
} _CMsgSetTargetFrameRate_default_instance_;
class CMsgPauseRepaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPauseRepaint>
      _instance;
} _CMsgPauseRepaint_default_instance_;
class CMsgFullRepaintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFullRepaint>
      _instance;
} _CMsgFullRepaint_default_instance_;
class CMsgRequestFullScreenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestFullScreen>
      _instance;
} _CMsgRequestFullScreen_default_instance_;
class CMsgExitFullScreenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgExitFullScreen>
      _instance;
} _CMsgExitFullScreen_default_instance_;
class CMsgToggleFindInPageDialogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgToggleFindInPageDialog>
      _instance;
} _CMsgToggleFindInPageDialog_default_instance_;
class CMsgSetPIDShuttingDownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetPIDShuttingDown>
      _instance;
} _CMsgSetPIDShuttingDown_default_instance_;
class CMsgDisableBackgroundThrottlingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDisableBackgroundThrottling>
      _instance;
} _CMsgDisableBackgroundThrottling_default_instance_;
class CMsgAckPIDShuttingDownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAckPIDShuttingDown>
      _instance;
} _CMsgAckPIDShuttingDown_default_instance_;
class CMsgGetCookiesForURLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGetCookiesForURL>
      _instance;
} _CMsgGetCookiesForURL_default_instance_;
class CCookieDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCookie>
      _instance;
} _CCookie_default_instance_;
class CMsgGetCookiesForURLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGetCookiesForURLResponse>
      _instance;
} _CMsgGetCookiesForURLResponse_default_instance_;
class CMsgNodeHasFocusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNodeHasFocus>
      _instance;
} _CMsgNodeHasFocus_default_instance_;
class CMsgZoomToFocusedElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgZoomToFocusedElement>
      _instance;
} _CMsgZoomToFocusedElement_default_instance_;
class CMsgCloseFullScreenFlashIfOpenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCloseFullScreenFlashIfOpen>
      _instance;
} _CMsgCloseFullScreenFlashIfOpen_default_instance_;
class CMsgPauseFullScreenFlashMovieIfOpenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPauseFullScreenFlashMovieIfOpen>
      _instance;
} _CMsgPauseFullScreenFlashMovieIfOpen_default_instance_;
class CMsgFocusedNodeTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFocusedNodeText>
      _instance;
} _CMsgFocusedNodeText_default_instance_;
class CMsgFocusedNodeTextResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFocusedNodeTextResponse>
      _instance;
} _CMsgFocusedNodeTextResponse_default_instance_;
class CMsgBuildIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBuildID>
      _instance;
} _CMsgBuildID_default_instance_;
class CMsgOpenDevToolsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgOpenDevTools>
      _instance;
} _CMsgOpenDevTools_default_instance_;
class CMsgCloseDevToolsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCloseDevTools>
      _instance;
} _CMsgCloseDevTools_default_instance_;
class CMsgUnlockH264DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUnlockH264>
      _instance;
} _CMsgUnlockH264_default_instance_;
class CMsgScreenInformationChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgScreenInformationChanged>
      _instance;
} _CMsgScreenInformationChanged_default_instance_;
class CMsgClearAllCookiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearAllCookies>
      _instance;
} _CMsgClearAllCookies_default_instance_;
class CMsgScreenDPIDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgScreenDPI>
      _instance;
} _CMsgScreenDPI_default_instance_;
class CMsgAuthedSteamDomainsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAuthedSteamDomains>
      _instance;
} _CMsgAuthedSteamDomains_default_instance_;
class CMsgSteamAuthNeededDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSteamAuthNeeded>
      _instance;
} _CMsgSteamAuthNeeded_default_instance_;
class CMsgSteamAuthCookiesSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSteamAuthCookiesSet>
      _instance;
} _CMsgSteamAuthCookiesSet_default_instance_;
class CMsgJSRegisterMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSRegisterMethod>
      _instance;
} _CMsgJSRegisterMethod_default_instance_;
class CJSMethodArgumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CJSMethodArgument>
      _instance;
} _CJSMethodArgument_default_instance_;
class CMsgJSValue_JSObjectPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSValue_JSObjectProperty>
      _instance;
} _CMsgJSValue_JSObjectProperty_default_instance_;
class CMsgJSValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSValue>
      _instance;
} _CMsgJSValue_default_instance_;
class CMsgJSMethodCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSMethodCall>
      _instance;
} _CMsgJSMethodCall_default_instance_;
class CMsgJSExecuteCallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSExecuteCallback>
      _instance;
} _CMsgJSExecuteCallback_default_instance_;
class CMsgJSReleaseCallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSReleaseCallback>
      _instance;
} _CMsgJSReleaseCallback_default_instance_;
class CMsgJSRaiseExceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJSRaiseException>
      _instance;
} _CMsgJSRaiseException_default_instance_;
class CMsgLoadLocalizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLoadLocalization>
      _instance;
} _CMsgLoadLocalization_default_instance_;
class CMsgJumpListLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgJumpListLink>
      _instance;
} _CMsgJumpListLink_default_instance_;
class CMSgJumpListMRUAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMSgJumpListMRUApp>
      _instance;
} _CMSgJumpListMRUApp_default_instance_;
class CMsgSetJumpListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetJumpList>
      _instance;
} _CMsgSetJumpList_default_instance_;
class CMsgSetGameOverlayTargetPIDsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetGameOverlayTargetPIDs>
      _instance;
} _CMsgSetGameOverlayTargetPIDs_default_instance_;
class CMsgGameOverlayTargetTextureIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameOverlayTargetTextureID>
      _instance;
} _CMsgGameOverlayTargetTextureID_default_instance_;
class CMsgDraggableRegionsChanged_DraggableRectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDraggableRegionsChanged_DraggableRects>
      _instance;
} _CMsgDraggableRegionsChanged_DraggableRects_default_instance_;
class CMsgDraggableRegionsChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDraggableRegionsChanged>
      _instance;
} _CMsgDraggableRegionsChanged_default_instance_;
class CMsgResizeGripChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgResizeGripChanged>
      _instance;
} _CMsgResizeGripChanged_default_instance_;
class CMsgSetWindowPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetWindowPosition>
      _instance;
} _CMsgSetWindowPosition_default_instance_;
class CMsgShowWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgShowWindow>
      _instance;
} _CMsgShowWindow_default_instance_;
class CMsgHideWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHideWindow>
      _instance;
} _CMsgHideWindow_default_instance_;
class CMsgBringWindowToFrontDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBringWindowToFront>
      _instance;
} _CMsgBringWindowToFront_default_instance_;
class CMsgMaximizeRestoreWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMaximizeRestoreWindow>
      _instance;
} _CMsgMaximizeRestoreWindow_default_instance_;
class CMsgMinimizeWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgMinimizeWindow>
      _instance;
} _CMsgMinimizeWindow_default_instance_;
class CMsgShowBrowserContextMenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgShowBrowserContextMenu>
      _instance;
} _CMsgShowBrowserContextMenu_default_instance_;
class CMsgImeSetCompositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgImeSetComposition>
      _instance;
} _CMsgImeSetComposition_default_instance_;
class CMsgImeCommitTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgImeCommitText>
      _instance;
} _CMsgImeCommitText_default_instance_;
class CMsgImeCancelCompositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgImeCancelComposition>
      _instance;
} _CMsgImeCancelComposition_default_instance_;
class CMsgImeCompositionRangeChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgImeCompositionRangeChanged>
      _instance;
} _CMsgImeCompositionRangeChanged_default_instance_;
namespace protobuf_htmlmessages_2eproto {
static void InitDefaultsCMsgKeyUp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgKeyUp_default_instance_;
    new (ptr) ::CMsgKeyUp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgKeyUp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgKeyUp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgKeyUp}, {}};

static void InitDefaultsCMsgKeyDown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgKeyDown_default_instance_;
    new (ptr) ::CMsgKeyDown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgKeyDown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgKeyDown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgKeyDown}, {}};

static void InitDefaultsCMsgKeyChar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgKeyChar_default_instance_;
    new (ptr) ::CMsgKeyChar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgKeyChar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgKeyChar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgKeyChar}, {}};

static void InitDefaultsCMsgMouseDown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseDown_default_instance_;
    new (ptr) ::CMsgMouseDown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseDown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseDown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseDown}, {}};

static void InitDefaultsCMsgMouseUp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseUp_default_instance_;
    new (ptr) ::CMsgMouseUp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseUp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseUp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseUp}, {}};

static void InitDefaultsCMsgMouseDblClick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseDblClick_default_instance_;
    new (ptr) ::CMsgMouseDblClick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseDblClick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseDblClick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseDblClick}, {}};

static void InitDefaultsCMsgMouseWheel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseWheel_default_instance_;
    new (ptr) ::CMsgMouseWheel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseWheel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseWheel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseWheel}, {}};

static void InitDefaultsCMsgMouseMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseMove_default_instance_;
    new (ptr) ::CMsgMouseMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseMove}, {}};

static void InitDefaultsCMsgMouseLeave() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMouseLeave_default_instance_;
    new (ptr) ::CMsgMouseLeave();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMouseLeave::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMouseLeave =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMouseLeave}, {}};

static void InitDefaultsCMsgBrowserCreate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserCreate_default_instance_;
    new (ptr) ::CMsgBrowserCreate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserCreate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserCreate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserCreate}, {}};

static void InitDefaultsCMsgBrowserCreateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserCreateResponse_default_instance_;
    new (ptr) ::CMsgBrowserCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserCreateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserCreateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserCreateResponse}, {}};

static void InitDefaultsCMsgBrowserRemove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserRemove_default_instance_;
    new (ptr) ::CMsgBrowserRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserRemove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserRemove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserRemove}, {}};

static void InitDefaultsCMsgSetLocalFileRequestMapping_AdditionalRoute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetLocalFileRequestMapping_AdditionalRoute_default_instance_;
    new (ptr) ::CMsgSetLocalFileRequestMapping_AdditionalRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetLocalFileRequestMapping_AdditionalRoute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetLocalFileRequestMapping_AdditionalRoute}, {}};

static void InitDefaultsCMsgSetLocalFileRequestMapping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetLocalFileRequestMapping_default_instance_;
    new (ptr) ::CMsgSetLocalFileRequestMapping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetLocalFileRequestMapping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgSetLocalFileRequestMapping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgSetLocalFileRequestMapping}, {
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute.base,}};

static void InitDefaultsCMsgBrowserErrorStrings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserErrorStrings_default_instance_;
    new (ptr) ::CMsgBrowserErrorStrings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserErrorStrings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserErrorStrings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserErrorStrings}, {}};

static void InitDefaultsCMsgBrowserSize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserSize_default_instance_;
    new (ptr) ::CMsgBrowserSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserSize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserSize}, {}};

static void InitDefaultsCMsgBrowserSetMinSize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserSetMinSize_default_instance_;
    new (ptr) ::CMsgBrowserSetMinSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserSetMinSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserSetMinSize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserSetMinSize}, {}};

static void InitDefaultsCMsgBrowserPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserPosition_default_instance_;
    new (ptr) ::CMsgBrowserPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserPosition}, {}};

static void InitDefaultsCMsgBrowserResized() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserResized_default_instance_;
    new (ptr) ::CMsgBrowserResized();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserResized::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserResized =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserResized}, {}};

static void InitDefaultsCMsgPostURL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPostURL_default_instance_;
    new (ptr) ::CMsgPostURL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPostURL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPostURL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPostURL}, {}};

static void InitDefaultsCMsgAddHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAddHeader_default_instance_;
    new (ptr) ::CMsgAddHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAddHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAddHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAddHeader}, {}};

static void InitDefaultsCMsgStopLoad() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgStopLoad_default_instance_;
    new (ptr) ::CMsgStopLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStopLoad::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgStopLoad =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgStopLoad}, {}};

static void InitDefaultsCMsgReload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgReload_default_instance_;
    new (ptr) ::CMsgReload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgReload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgReload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgReload}, {}};

static void InitDefaultsCMsgGoForward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGoForward_default_instance_;
    new (ptr) ::CMsgGoForward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGoForward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGoForward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGoForward}, {}};

static void InitDefaultsCMsgGoBack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGoBack_default_instance_;
    new (ptr) ::CMsgGoBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGoBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGoBack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGoBack}, {}};

static void InitDefaultsCMsgWasHidden() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgWasHidden_default_instance_;
    new (ptr) ::CMsgWasHidden();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgWasHidden::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgWasHidden =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgWasHidden}, {}};

static void InitDefaultsCMsgClearHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClearHistory_default_instance_;
    new (ptr) ::CMsgClearHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClearHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearHistory}, {}};

static void InitDefaultsCMsgClearAllBrowsingData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClearAllBrowsingData_default_instance_;
    new (ptr) ::CMsgClearAllBrowsingData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClearAllBrowsingData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearAllBrowsingData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearAllBrowsingData}, {}};

static void InitDefaultsCMsgCopy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCopy_default_instance_;
    new (ptr) ::CMsgCopy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCopy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCopy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCopy}, {}};

static void InitDefaultsCMsgPaste() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPaste_default_instance_;
    new (ptr) ::CMsgPaste();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPaste::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPaste =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPaste}, {}};

static void InitDefaultsCMsgExecuteJavaScript() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgExecuteJavaScript_default_instance_;
    new (ptr) ::CMsgExecuteJavaScript();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgExecuteJavaScript::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgExecuteJavaScript =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgExecuteJavaScript}, {}};

static void InitDefaultsCMsgSetFocus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetFocus_default_instance_;
    new (ptr) ::CMsgSetFocus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetFocus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetFocus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetFocus}, {}};

static void InitDefaultsCMsgHorizontalScrollBarSize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHorizontalScrollBarSize_default_instance_;
    new (ptr) ::CMsgHorizontalScrollBarSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHorizontalScrollBarSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHorizontalScrollBarSize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHorizontalScrollBarSize}, {}};

static void InitDefaultsCMsgHorizontalScrollBarSizeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHorizontalScrollBarSizeResponse_default_instance_;
    new (ptr) ::CMsgHorizontalScrollBarSizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHorizontalScrollBarSizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHorizontalScrollBarSizeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHorizontalScrollBarSizeResponse}, {}};

static void InitDefaultsCMsgVerticalScrollBarSize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgVerticalScrollBarSize_default_instance_;
    new (ptr) ::CMsgVerticalScrollBarSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgVerticalScrollBarSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVerticalScrollBarSize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVerticalScrollBarSize}, {}};

static void InitDefaultsCMsgVerticalScrollBarSizeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgVerticalScrollBarSizeResponse_default_instance_;
    new (ptr) ::CMsgVerticalScrollBarSizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgVerticalScrollBarSizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVerticalScrollBarSizeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVerticalScrollBarSizeResponse}, {}};

static void InitDefaultsCMsgFind() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFind_default_instance_;
    new (ptr) ::CMsgFind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFind =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFind}, {}};

static void InitDefaultsCMsgStopFind() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgStopFind_default_instance_;
    new (ptr) ::CMsgStopFind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStopFind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgStopFind =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgStopFind}, {}};

static void InitDefaultsCMsgSetHorizontalScroll() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetHorizontalScroll_default_instance_;
    new (ptr) ::CMsgSetHorizontalScroll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetHorizontalScroll::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetHorizontalScroll =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetHorizontalScroll}, {}};

static void InitDefaultsCMsgSetVerticalScroll() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetVerticalScroll_default_instance_;
    new (ptr) ::CMsgSetVerticalScroll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetVerticalScroll::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetVerticalScroll =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetVerticalScroll}, {}};

static void InitDefaultsCMsgSetZoomLevel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetZoomLevel_default_instance_;
    new (ptr) ::CMsgSetZoomLevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetZoomLevel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetZoomLevel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetZoomLevel}, {}};

static void InitDefaultsCMsgViewSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgViewSource_default_instance_;
    new (ptr) ::CMsgViewSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgViewSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgViewSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgViewSource}, {}};

static void InitDefaultsCMsgBrowserReady() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBrowserReady_default_instance_;
    new (ptr) ::CMsgBrowserReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBrowserReady::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBrowserReady =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBrowserReady}, {}};

static void InitDefaultsCMsgURLChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgURLChanged_default_instance_;
    new (ptr) ::CMsgURLChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgURLChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgURLChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgURLChanged}, {}};

static void InitDefaultsCHTMLHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CHTMLHeader_default_instance_;
    new (ptr) ::CHTMLHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CHTMLHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CHTMLHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCHTMLHeader}, {}};

static void InitDefaultsCHTMLPageSecurityInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CHTMLPageSecurityInfo_default_instance_;
    new (ptr) ::CHTMLPageSecurityInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CHTMLPageSecurityInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CHTMLPageSecurityInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCHTMLPageSecurityInfo}, {}};

static void InitDefaultsCMsgFinishedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFinishedRequest_default_instance_;
    new (ptr) ::CMsgFinishedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFinishedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFinishedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFinishedRequest}, {}};

static void InitDefaultsCMsgLoadedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgLoadedRequest_default_instance_;
    new (ptr) ::CMsgLoadedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLoadedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgLoadedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgLoadedRequest}, {
      &protobuf_htmlmessages_2eproto::scc_info_CHTMLHeader.base,}};

static void InitDefaultsCMsgPageSecurity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPageSecurity_default_instance_;
    new (ptr) ::CMsgPageSecurity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPageSecurity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgPageSecurity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgPageSecurity}, {
      &protobuf_htmlmessages_2eproto::scc_info_CHTMLPageSecurityInfo.base,}};

static void InitDefaultsCMsgStartRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgStartRequest_default_instance_;
    new (ptr) ::CMsgStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgStartRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgStartRequest}, {}};

static void InitDefaultsCMsgStartRequestResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgStartRequestResponse_default_instance_;
    new (ptr) ::CMsgStartRequestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStartRequestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgStartRequestResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgStartRequestResponse}, {}};

static void InitDefaultsCMsgShowPopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgShowPopup_default_instance_;
    new (ptr) ::CMsgShowPopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgShowPopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgShowPopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgShowPopup}, {}};

static void InitDefaultsCMsgHidePopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHidePopup_default_instance_;
    new (ptr) ::CMsgHidePopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHidePopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHidePopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHidePopup}, {}};

static void InitDefaultsCMsgSizePopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSizePopup_default_instance_;
    new (ptr) ::CMsgSizePopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSizePopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSizePopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSizePopup}, {}};

static void InitDefaultsCMsgOpenNewTab() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgOpenNewTab_default_instance_;
    new (ptr) ::CMsgOpenNewTab();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgOpenNewTab::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgOpenNewTab =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgOpenNewTab}, {}};

static void InitDefaultsCMsgPopupHTMLWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPopupHTMLWindow_default_instance_;
    new (ptr) ::CMsgPopupHTMLWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPopupHTMLWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPopupHTMLWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPopupHTMLWindow}, {}};

static void InitDefaultsCMsgPopupHTMLWindowResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPopupHTMLWindowResponse_default_instance_;
    new (ptr) ::CMsgPopupHTMLWindowResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPopupHTMLWindowResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPopupHTMLWindowResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPopupHTMLWindowResponse}, {}};

static void InitDefaultsCMsgSetHTMLTitle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetHTMLTitle_default_instance_;
    new (ptr) ::CMsgSetHTMLTitle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetHTMLTitle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetHTMLTitle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetHTMLTitle}, {}};

static void InitDefaultsCMsgLoadingResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgLoadingResource_default_instance_;
    new (ptr) ::CMsgLoadingResource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLoadingResource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLoadingResource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLoadingResource}, {}};

static void InitDefaultsCMsgStatusText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgStatusText_default_instance_;
    new (ptr) ::CMsgStatusText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStatusText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgStatusText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgStatusText}, {}};

static void InitDefaultsCMsgSetCursor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetCursor_default_instance_;
    new (ptr) ::CMsgSetCursor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetCursor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetCursor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetCursor}, {}};

static void InitDefaultsCMsgFileLoadDialog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFileLoadDialog_default_instance_;
    new (ptr) ::CMsgFileLoadDialog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFileLoadDialog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFileLoadDialog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFileLoadDialog}, {}};

static void InitDefaultsCMsgFileLoadDialogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFileLoadDialogResponse_default_instance_;
    new (ptr) ::CMsgFileLoadDialogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFileLoadDialogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFileLoadDialogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFileLoadDialogResponse}, {}};

static void InitDefaultsCMsgShowToolTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgShowToolTip_default_instance_;
    new (ptr) ::CMsgShowToolTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgShowToolTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgShowToolTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgShowToolTip}, {}};

static void InitDefaultsCMsgUpdateToolTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgUpdateToolTip_default_instance_;
    new (ptr) ::CMsgUpdateToolTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgUpdateToolTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgUpdateToolTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgUpdateToolTip}, {}};

static void InitDefaultsCMsgHideToolTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHideToolTip_default_instance_;
    new (ptr) ::CMsgHideToolTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHideToolTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHideToolTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHideToolTip}, {}};

static void InitDefaultsCMsgSearchResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSearchResults_default_instance_;
    new (ptr) ::CMsgSearchResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSearchResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSearchResults =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSearchResults}, {}};

static void InitDefaultsCMsgClose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClose_default_instance_;
    new (ptr) ::CMsgClose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClose}, {}};

static void InitDefaultsCMsgSetSharedPaintBuffers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetSharedPaintBuffers_default_instance_;
    new (ptr) ::CMsgSetSharedPaintBuffers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetSharedPaintBuffers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetSharedPaintBuffers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetSharedPaintBuffers}, {}};

static void InitDefaultsCMsgAckSharedPaintBuffers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAckSharedPaintBuffers_default_instance_;
    new (ptr) ::CMsgAckSharedPaintBuffers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAckSharedPaintBuffers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAckSharedPaintBuffers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAckSharedPaintBuffers}, {}};

static void InitDefaultsCMsgNeedsPaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgNeedsPaint_default_instance_;
    new (ptr) ::CMsgNeedsPaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNeedsPaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgNeedsPaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgNeedsPaint}, {}};

static void InitDefaultsCMsgComboNeedsPaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgComboNeedsPaint_default_instance_;
    new (ptr) ::CMsgComboNeedsPaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgComboNeedsPaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgComboNeedsPaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgComboNeedsPaint}, {}};

static void InitDefaultsCMsgNeedsSharedTexturePaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgNeedsSharedTexturePaint_default_instance_;
    new (ptr) ::CMsgNeedsSharedTexturePaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNeedsSharedTexturePaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgNeedsSharedTexturePaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgNeedsSharedTexturePaint}, {}};

static void InitDefaultsCMsgGameOverlayTexturePaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameOverlayTexturePaint_default_instance_;
    new (ptr) ::CMsgGameOverlayTexturePaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameOverlayTexturePaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameOverlayTexturePaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameOverlayTexturePaint}, {}};

static void InitDefaultsCMsgGetZoom() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGetZoom_default_instance_;
    new (ptr) ::CMsgGetZoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGetZoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGetZoom =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGetZoom}, {}};

static void InitDefaultsCMsgGetZoomResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGetZoomResponse_default_instance_;
    new (ptr) ::CMsgGetZoomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGetZoomResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGetZoomResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGetZoomResponse}, {}};

static void InitDefaultsCMsgLinkAtPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgLinkAtPosition_default_instance_;
    new (ptr) ::CMsgLinkAtPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLinkAtPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLinkAtPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLinkAtPosition}, {}};

static void InitDefaultsCMsgLinkAtPositionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgLinkAtPositionResponse_default_instance_;
    new (ptr) ::CMsgLinkAtPositionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLinkAtPositionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLinkAtPositionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLinkAtPositionResponse}, {}};

static void InitDefaultsCMsgZoomToElementAtPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgZoomToElementAtPosition_default_instance_;
    new (ptr) ::CMsgZoomToElementAtPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgZoomToElementAtPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgZoomToElementAtPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgZoomToElementAtPosition}, {}};

static void InitDefaultsCMsgZoomToElementAtPositionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgZoomToElementAtPositionResponse_default_instance_;
    new (ptr) ::CMsgZoomToElementAtPositionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgZoomToElementAtPositionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgZoomToElementAtPositionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgZoomToElementAtPositionResponse}, {}};

static void InitDefaultsCMsgScalePageToValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgScalePageToValue_default_instance_;
    new (ptr) ::CMsgScalePageToValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgScalePageToValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgScalePageToValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgScalePageToValue}, {}};

static void InitDefaultsCMsgScalePageToValueResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgScalePageToValueResponse_default_instance_;
    new (ptr) ::CMsgScalePageToValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgScalePageToValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgScalePageToValueResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgScalePageToValueResponse}, {}};

static void InitDefaultsCMsgSavePageToJPEG() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSavePageToJPEG_default_instance_;
    new (ptr) ::CMsgSavePageToJPEG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSavePageToJPEG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSavePageToJPEG =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSavePageToJPEG}, {}};

static void InitDefaultsCMsgSavePageToJPEGResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSavePageToJPEGResponse_default_instance_;
    new (ptr) ::CMsgSavePageToJPEGResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSavePageToJPEGResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSavePageToJPEGResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSavePageToJPEGResponse}, {}};

static void InitDefaultsCMsgJSAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSAlert_default_instance_;
    new (ptr) ::CMsgJSAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSAlert}, {}};

static void InitDefaultsCMsgJSConfirm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSConfirm_default_instance_;
    new (ptr) ::CMsgJSConfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSConfirm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSConfirm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSConfirm}, {}};

static void InitDefaultsCMsgJSDialogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSDialogResponse_default_instance_;
    new (ptr) ::CMsgJSDialogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSDialogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSDialogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSDialogResponse}, {}};

static void InitDefaultsCMsgCanGoBackAndForward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCanGoBackAndForward_default_instance_;
    new (ptr) ::CMsgCanGoBackAndForward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCanGoBackAndForward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCanGoBackAndForward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCanGoBackAndForward}, {}};

static void InitDefaultsCMsgOpenSteamURL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgOpenSteamURL_default_instance_;
    new (ptr) ::CMsgOpenSteamURL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgOpenSteamURL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgOpenSteamURL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgOpenSteamURL}, {}};

static void InitDefaultsCMsgSetCookie() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetCookie_default_instance_;
    new (ptr) ::CMsgSetCookie();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetCookie::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetCookie =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetCookie}, {}};

static void InitDefaultsCMsgSetTargetFrameRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetTargetFrameRate_default_instance_;
    new (ptr) ::CMsgSetTargetFrameRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetTargetFrameRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetTargetFrameRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetTargetFrameRate}, {}};

static void InitDefaultsCMsgPauseRepaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPauseRepaint_default_instance_;
    new (ptr) ::CMsgPauseRepaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPauseRepaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPauseRepaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPauseRepaint}, {}};

static void InitDefaultsCMsgFullRepaint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFullRepaint_default_instance_;
    new (ptr) ::CMsgFullRepaint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFullRepaint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFullRepaint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFullRepaint}, {}};

static void InitDefaultsCMsgRequestFullScreen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgRequestFullScreen_default_instance_;
    new (ptr) ::CMsgRequestFullScreen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRequestFullScreen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestFullScreen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestFullScreen}, {}};

static void InitDefaultsCMsgExitFullScreen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgExitFullScreen_default_instance_;
    new (ptr) ::CMsgExitFullScreen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgExitFullScreen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgExitFullScreen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgExitFullScreen}, {}};

static void InitDefaultsCMsgToggleFindInPageDialog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgToggleFindInPageDialog_default_instance_;
    new (ptr) ::CMsgToggleFindInPageDialog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgToggleFindInPageDialog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgToggleFindInPageDialog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgToggleFindInPageDialog}, {}};

static void InitDefaultsCMsgSetPIDShuttingDown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetPIDShuttingDown_default_instance_;
    new (ptr) ::CMsgSetPIDShuttingDown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetPIDShuttingDown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetPIDShuttingDown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetPIDShuttingDown}, {}};

static void InitDefaultsCMsgDisableBackgroundThrottling() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDisableBackgroundThrottling_default_instance_;
    new (ptr) ::CMsgDisableBackgroundThrottling();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDisableBackgroundThrottling::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDisableBackgroundThrottling =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDisableBackgroundThrottling}, {}};

static void InitDefaultsCMsgAckPIDShuttingDown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAckPIDShuttingDown_default_instance_;
    new (ptr) ::CMsgAckPIDShuttingDown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAckPIDShuttingDown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAckPIDShuttingDown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAckPIDShuttingDown}, {}};

static void InitDefaultsCMsgGetCookiesForURL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGetCookiesForURL_default_instance_;
    new (ptr) ::CMsgGetCookiesForURL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGetCookiesForURL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGetCookiesForURL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGetCookiesForURL}, {}};

static void InitDefaultsCCookie() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCookie_default_instance_;
    new (ptr) ::CCookie();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCookie::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCookie =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCookie}, {}};

static void InitDefaultsCMsgGetCookiesForURLResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGetCookiesForURLResponse_default_instance_;
    new (ptr) ::CMsgGetCookiesForURLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGetCookiesForURLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGetCookiesForURLResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGetCookiesForURLResponse}, {
      &protobuf_htmlmessages_2eproto::scc_info_CCookie.base,}};

static void InitDefaultsCMsgNodeHasFocus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgNodeHasFocus_default_instance_;
    new (ptr) ::CMsgNodeHasFocus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNodeHasFocus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgNodeHasFocus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgNodeHasFocus}, {}};

static void InitDefaultsCMsgZoomToFocusedElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgZoomToFocusedElement_default_instance_;
    new (ptr) ::CMsgZoomToFocusedElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgZoomToFocusedElement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgZoomToFocusedElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgZoomToFocusedElement}, {}};

static void InitDefaultsCMsgCloseFullScreenFlashIfOpen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCloseFullScreenFlashIfOpen_default_instance_;
    new (ptr) ::CMsgCloseFullScreenFlashIfOpen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCloseFullScreenFlashIfOpen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCloseFullScreenFlashIfOpen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCloseFullScreenFlashIfOpen}, {}};

static void InitDefaultsCMsgPauseFullScreenFlashMovieIfOpen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPauseFullScreenFlashMovieIfOpen_default_instance_;
    new (ptr) ::CMsgPauseFullScreenFlashMovieIfOpen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPauseFullScreenFlashMovieIfOpen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPauseFullScreenFlashMovieIfOpen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPauseFullScreenFlashMovieIfOpen}, {}};

static void InitDefaultsCMsgFocusedNodeText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFocusedNodeText_default_instance_;
    new (ptr) ::CMsgFocusedNodeText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFocusedNodeText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFocusedNodeText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFocusedNodeText}, {}};

static void InitDefaultsCMsgFocusedNodeTextResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgFocusedNodeTextResponse_default_instance_;
    new (ptr) ::CMsgFocusedNodeTextResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgFocusedNodeTextResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFocusedNodeTextResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFocusedNodeTextResponse}, {}};

static void InitDefaultsCMsgBuildID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBuildID_default_instance_;
    new (ptr) ::CMsgBuildID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBuildID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBuildID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBuildID}, {}};

static void InitDefaultsCMsgOpenDevTools() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgOpenDevTools_default_instance_;
    new (ptr) ::CMsgOpenDevTools();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgOpenDevTools::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgOpenDevTools =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgOpenDevTools}, {}};

static void InitDefaultsCMsgCloseDevTools() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCloseDevTools_default_instance_;
    new (ptr) ::CMsgCloseDevTools();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCloseDevTools::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCloseDevTools =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCloseDevTools}, {}};

static void InitDefaultsCMsgUnlockH264() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgUnlockH264_default_instance_;
    new (ptr) ::CMsgUnlockH264();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgUnlockH264::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgUnlockH264 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgUnlockH264}, {}};

static void InitDefaultsCMsgScreenInformationChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgScreenInformationChanged_default_instance_;
    new (ptr) ::CMsgScreenInformationChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgScreenInformationChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgScreenInformationChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgScreenInformationChanged}, {}};

static void InitDefaultsCMsgClearAllCookies() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgClearAllCookies_default_instance_;
    new (ptr) ::CMsgClearAllCookies();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClearAllCookies::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearAllCookies =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearAllCookies}, {}};

static void InitDefaultsCMsgScreenDPI() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgScreenDPI_default_instance_;
    new (ptr) ::CMsgScreenDPI();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgScreenDPI::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgScreenDPI =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgScreenDPI}, {}};

static void InitDefaultsCMsgAuthedSteamDomains() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgAuthedSteamDomains_default_instance_;
    new (ptr) ::CMsgAuthedSteamDomains();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAuthedSteamDomains::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAuthedSteamDomains =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAuthedSteamDomains}, {}};

static void InitDefaultsCMsgSteamAuthNeeded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSteamAuthNeeded_default_instance_;
    new (ptr) ::CMsgSteamAuthNeeded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSteamAuthNeeded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSteamAuthNeeded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSteamAuthNeeded}, {}};

static void InitDefaultsCMsgSteamAuthCookiesSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSteamAuthCookiesSet_default_instance_;
    new (ptr) ::CMsgSteamAuthCookiesSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSteamAuthCookiesSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSteamAuthCookiesSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSteamAuthCookiesSet}, {}};

static void InitDefaultsCMsgJSRegisterMethod() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSRegisterMethod_default_instance_;
    new (ptr) ::CMsgJSRegisterMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSRegisterMethod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSRegisterMethod =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSRegisterMethod}, {}};

static void InitDefaultsCJSMethodArgument() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CJSMethodArgument_default_instance_;
    new (ptr) ::CJSMethodArgument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CJSMethodArgument::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CJSMethodArgument =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCJSMethodArgument}, {}};

static void InitDefaultsCMsgJSValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSValue_JSObjectProperty_default_instance_;
    new (ptr) ::CMsgJSValue_JSObjectProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::_CMsgJSValue_default_instance_;
    new (ptr) ::CMsgJSValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSValue_JSObjectProperty::InitAsDefaultInstance();
  ::CMsgJSValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSValue}, {}};

static void InitDefaultsCMsgJSMethodCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSMethodCall_default_instance_;
    new (ptr) ::CMsgJSMethodCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSMethodCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgJSMethodCall =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgJSMethodCall}, {
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base,}};

static void InitDefaultsCMsgJSExecuteCallback() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSExecuteCallback_default_instance_;
    new (ptr) ::CMsgJSExecuteCallback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSExecuteCallback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgJSExecuteCallback =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgJSExecuteCallback}, {
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base,}};

static void InitDefaultsCMsgJSReleaseCallback() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSReleaseCallback_default_instance_;
    new (ptr) ::CMsgJSReleaseCallback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSReleaseCallback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSReleaseCallback =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSReleaseCallback}, {}};

static void InitDefaultsCMsgJSRaiseException() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJSRaiseException_default_instance_;
    new (ptr) ::CMsgJSRaiseException();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJSRaiseException::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJSRaiseException =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJSRaiseException}, {}};

static void InitDefaultsCMsgLoadLocalization() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgLoadLocalization_default_instance_;
    new (ptr) ::CMsgLoadLocalization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLoadLocalization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLoadLocalization =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLoadLocalization}, {}};

static void InitDefaultsCMsgJumpListLink() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgJumpListLink_default_instance_;
    new (ptr) ::CMsgJumpListLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgJumpListLink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgJumpListLink =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgJumpListLink}, {}};

static void InitDefaultsCMSgJumpListMRUApp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMSgJumpListMRUApp_default_instance_;
    new (ptr) ::CMSgJumpListMRUApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMSgJumpListMRUApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMSgJumpListMRUApp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMSgJumpListMRUApp}, {}};

static void InitDefaultsCMsgSetJumpList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetJumpList_default_instance_;
    new (ptr) ::CMsgSetJumpList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetJumpList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgSetJumpList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgSetJumpList}, {
      &protobuf_htmlmessages_2eproto::scc_info_CMSgJumpListMRUApp.base,
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJumpListLink.base,}};

static void InitDefaultsCMsgSetGameOverlayTargetPIDs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetGameOverlayTargetPIDs_default_instance_;
    new (ptr) ::CMsgSetGameOverlayTargetPIDs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetGameOverlayTargetPIDs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetGameOverlayTargetPIDs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetGameOverlayTargetPIDs}, {}};

static void InitDefaultsCMsgGameOverlayTargetTextureID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgGameOverlayTargetTextureID_default_instance_;
    new (ptr) ::CMsgGameOverlayTargetTextureID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameOverlayTargetTextureID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameOverlayTargetTextureID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameOverlayTargetTextureID}, {}};

static void InitDefaultsCMsgDraggableRegionsChanged_DraggableRects() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDraggableRegionsChanged_DraggableRects_default_instance_;
    new (ptr) ::CMsgDraggableRegionsChanged_DraggableRects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDraggableRegionsChanged_DraggableRects::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDraggableRegionsChanged_DraggableRects =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDraggableRegionsChanged_DraggableRects}, {}};

static void InitDefaultsCMsgDraggableRegionsChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgDraggableRegionsChanged_default_instance_;
    new (ptr) ::CMsgDraggableRegionsChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDraggableRegionsChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgDraggableRegionsChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgDraggableRegionsChanged}, {
      &protobuf_htmlmessages_2eproto::scc_info_CMsgDraggableRegionsChanged_DraggableRects.base,}};

static void InitDefaultsCMsgResizeGripChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgResizeGripChanged_default_instance_;
    new (ptr) ::CMsgResizeGripChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgResizeGripChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgResizeGripChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgResizeGripChanged}, {}};

static void InitDefaultsCMsgSetWindowPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgSetWindowPosition_default_instance_;
    new (ptr) ::CMsgSetWindowPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetWindowPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSetWindowPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSetWindowPosition}, {}};

static void InitDefaultsCMsgShowWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgShowWindow_default_instance_;
    new (ptr) ::CMsgShowWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgShowWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgShowWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgShowWindow}, {}};

static void InitDefaultsCMsgHideWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHideWindow_default_instance_;
    new (ptr) ::CMsgHideWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHideWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHideWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHideWindow}, {}};

static void InitDefaultsCMsgBringWindowToFront() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBringWindowToFront_default_instance_;
    new (ptr) ::CMsgBringWindowToFront();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBringWindowToFront::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBringWindowToFront =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBringWindowToFront}, {}};

static void InitDefaultsCMsgMaximizeRestoreWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMaximizeRestoreWindow_default_instance_;
    new (ptr) ::CMsgMaximizeRestoreWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMaximizeRestoreWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMaximizeRestoreWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMaximizeRestoreWindow}, {}};

static void InitDefaultsCMsgMinimizeWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgMinimizeWindow_default_instance_;
    new (ptr) ::CMsgMinimizeWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgMinimizeWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgMinimizeWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgMinimizeWindow}, {}};

static void InitDefaultsCMsgShowBrowserContextMenu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgShowBrowserContextMenu_default_instance_;
    new (ptr) ::CMsgShowBrowserContextMenu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgShowBrowserContextMenu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgShowBrowserContextMenu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgShowBrowserContextMenu}, {}};

static void InitDefaultsCMsgImeSetComposition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgImeSetComposition_default_instance_;
    new (ptr) ::CMsgImeSetComposition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgImeSetComposition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgImeSetComposition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgImeSetComposition}, {}};

static void InitDefaultsCMsgImeCommitText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgImeCommitText_default_instance_;
    new (ptr) ::CMsgImeCommitText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgImeCommitText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgImeCommitText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgImeCommitText}, {}};

static void InitDefaultsCMsgImeCancelComposition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgImeCancelComposition_default_instance_;
    new (ptr) ::CMsgImeCancelComposition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgImeCancelComposition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgImeCancelComposition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgImeCancelComposition}, {}};

static void InitDefaultsCMsgImeCompositionRangeChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgImeCompositionRangeChanged_default_instance_;
    new (ptr) ::CMsgImeCompositionRangeChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgImeCompositionRangeChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgImeCompositionRangeChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgImeCompositionRangeChanged}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgKeyUp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgKeyDown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgKeyChar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseDown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseUp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseDblClick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseWheel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMouseLeave.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserCreate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserCreateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserRemove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetLocalFileRequestMapping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserErrorStrings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserSize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserSetMinSize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserResized.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPostURL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAddHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgStopLoad.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgReload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGoForward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGoBack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgWasHidden.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearHistory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearAllBrowsingData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCopy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPaste.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgExecuteJavaScript.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetFocus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHorizontalScrollBarSize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHorizontalScrollBarSizeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVerticalScrollBarSize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVerticalScrollBarSizeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFind.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgStopFind.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetHorizontalScroll.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetVerticalScroll.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetZoomLevel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgViewSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBrowserReady.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgURLChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CHTMLHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CHTMLPageSecurityInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFinishedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLoadedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPageSecurity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgStartRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgStartRequestResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgShowPopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHidePopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSizePopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgOpenNewTab.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPopupHTMLWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPopupHTMLWindowResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetHTMLTitle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLoadingResource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgStatusText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetCursor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFileLoadDialog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFileLoadDialogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgShowToolTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgUpdateToolTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHideToolTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSearchResults.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetSharedPaintBuffers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAckSharedPaintBuffers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgNeedsPaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgComboNeedsPaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgNeedsSharedTexturePaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameOverlayTexturePaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGetZoom.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGetZoomResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLinkAtPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLinkAtPositionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgZoomToElementAtPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgZoomToElementAtPositionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgScalePageToValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgScalePageToValueResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSavePageToJPEG.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSavePageToJPEGResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSConfirm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSDialogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCanGoBackAndForward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgOpenSteamURL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetCookie.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetTargetFrameRate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPauseRepaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFullRepaint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestFullScreen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgExitFullScreen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgToggleFindInPageDialog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetPIDShuttingDown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDisableBackgroundThrottling.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAckPIDShuttingDown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGetCookiesForURL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCookie.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGetCookiesForURLResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgNodeHasFocus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgZoomToFocusedElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCloseFullScreenFlashIfOpen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPauseFullScreenFlashMovieIfOpen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFocusedNodeText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFocusedNodeTextResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBuildID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgOpenDevTools.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCloseDevTools.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgUnlockH264.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgScreenInformationChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearAllCookies.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgScreenDPI.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAuthedSteamDomains.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSteamAuthNeeded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSteamAuthCookiesSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSRegisterMethod.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CJSMethodArgument.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSMethodCall.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSExecuteCallback.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSReleaseCallback.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJSRaiseException.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLoadLocalization.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgJumpListLink.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMSgJumpListMRUApp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetJumpList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetGameOverlayTargetPIDs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameOverlayTargetTextureID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDraggableRegionsChanged_DraggableRects.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDraggableRegionsChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgResizeGripChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSetWindowPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgShowWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHideWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBringWindowToFront.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMaximizeRestoreWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgMinimizeWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgShowBrowserContextMenu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgImeSetComposition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgImeCommitText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgImeCancelComposition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgImeCompositionRangeChanged.base);
}

::google::protobuf::Metadata file_level_metadata[146];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyUp, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyUp, keycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyUp, modifiers_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, keycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, modifiers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyDown, is_system_key_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyChar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyChar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyChar, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyChar, unichar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKeyChar, modifiers_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDown, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDown, mouse_button_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDown, modifiers_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, mouse_button_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, modifiers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, is_off_panel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseUp, y_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDblClick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDblClick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDblClick, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDblClick, mouse_button_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseDblClick, modifiers_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, deltax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, deltay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseWheel, modifiers_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseMove, modifiers_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseLeave, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseLeave, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMouseLeave, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, useragent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, user_css_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, native_dropdowns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, dpi_scaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, offscreen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, initial_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, initial_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, window_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, borderless_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, vroverlay_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, browser_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, initial_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, initial_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, only_allow_trusted_popups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, initial_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreate, hwnd_parent_),
  5,
  0,
  1,
  9,
  6,
  15,
  7,
  8,
  2,
  10,
  3,
  12,
  16,
  14,
  11,
  4,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreateResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserCreateResponse, request_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserRemove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserRemove, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping_AdditionalRoute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping_AdditionalRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping_AdditionalRoute, relative_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping_AdditionalRoute, local_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping_AdditionalRoute, allowed_extensions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, request_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, default_local_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetLocalFileRequestMapping, routes_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, cache_miss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, bad_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, connection_problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, proxy_problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserErrorStrings, unknown_),
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSize, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSize, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSize, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSetMinSize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSetMinSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSetMinSize, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSetMinSize, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserSetMinSize, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, x_local_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserPosition, y_local_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserResized, height_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, post_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPostURL, pageserial_),
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAddHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAddHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAddHeader, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAddHeader, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAddHeader, value_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopLoad, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopLoad, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReload, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReload, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoForward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoForward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoForward, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoBack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGoBack, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWasHidden, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWasHidden, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWasHidden, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWasHidden, hidden_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearHistory, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllBrowsingData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllBrowsingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllBrowsingData, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCopy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCopy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCopy, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPaste, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPaste, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPaste, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExecuteJavaScript, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExecuteJavaScript, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExecuteJavaScript, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExecuteJavaScript, script_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetFocus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetFocus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetFocus, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetFocus, focus_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSize, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, scroll_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, scroll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, zoom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHorizontalScrollBarSizeResponse, page_size_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSize, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, scroll_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, scroll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, zoom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVerticalScrollBarSizeResponse, page_size_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, find_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, infind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFind, reverse_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopFind, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopFind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStopFind, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHorizontalScroll, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHorizontalScroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHorizontalScroll, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHorizontalScroll, scroll_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetVerticalScroll, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetVerticalScroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetVerticalScroll, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetVerticalScroll, scroll_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetZoomLevel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetZoomLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetZoomLevel, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetZoomLevel, zoom_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgViewSource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgViewSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgViewSource, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserReady, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserReady, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserReady, vr_overlay_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBrowserReady, hwnd_browser_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, postdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, bisredirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, pagetitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgURLChanged, bnewnavigation_),
  3,
  0,
  1,
  4,
  2,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLHeader, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLHeader, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, bissecure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, bhascerterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, issuername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, certname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, certexpiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, ncertbits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHTMLPageSecurityInfo, bisevcert_),
  2,
  3,
  0,
  1,
  5,
  6,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFinishedRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFinishedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFinishedRequest, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFinishedRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFinishedRequest, pagetitle_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, pagetitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadedRequest, headers_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPageSecurity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPageSecurity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPageSecurity, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPageSecurity, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPageSecurity, security_info_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, postdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequest, bisredirect_),
  3,
  0,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequestResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequestResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStartRequestResponse, ballow_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowPopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowPopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowPopup, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHidePopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHidePopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHidePopup, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSizePopup, tall_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenNewTab, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenNewTab, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenNewTab, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenNewTab, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenNewTab, bforeground_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, tall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, popup_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindow, trusted_creator_),
  1,
  0,
  6,
  7,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindowResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindowResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPopupHTMLWindowResponse, ballow_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHTMLTitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHTMLTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHTMLTitle, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetHTMLTitle, title_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadingResource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadingResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadingResource, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadingResource, url_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStatusText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStatusText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStatusText, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStatusText, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, custom_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, tall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, xhotspot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCursor, yhotspot_),
  1,
  2,
  0,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialog, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialog, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialog, initialfile_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialogResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFileLoadDialogResponse, files_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowToolTip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowToolTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowToolTip, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowToolTip, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateToolTip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateToolTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateToolTip, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateToolTip, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideToolTip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideToolTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideToolTip, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSearchResults, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSearchResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSearchResults, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSearchResults, activematch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSearchResults, results_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClose, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClose, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, tall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, source_pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, source_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetSharedPaintBuffers, handle_),
  0,
  1,
  5,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckSharedPaintBuffers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckSharedPaintBuffers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckSharedPaintBuffers, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, scrollx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, scrolly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, pagescale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsPaint, pageserial_),
  0,
  1,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, rgba_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, combobox_wide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, combobox_tall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, shared_memory_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgComboNeedsPaint, shared_memory_size_),
  1,
  0,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, share_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, scrollx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, scrolly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, pagescale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNeedsSharedTexturePaint, pageserial_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, scrollx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, scrolly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, pagescale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTexturePaint, pageserial_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoom, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoomResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetZoomResponse, zoom_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPosition, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPosition, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, blivelink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLinkAtPositionResponse, binput_),
  1,
  2,
  3,
  0,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPosition, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPosition, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPositionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPositionResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPositionResponse, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToElementAtPositionResponse, duration_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValue, y_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValueResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValueResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScalePageToValueResponse, zoom_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEG, height_),
  2,
  0,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEGResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEGResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEGResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEGResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSavePageToJPEGResponse, filename_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSAlert, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSAlert, message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSConfirm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSConfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSConfirm, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSConfirm, message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSDialogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSDialogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSDialogResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSDialogResponse, result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCanGoBackAndForward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCanGoBackAndForward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCanGoBackAndForward, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCanGoBackAndForward, bgoback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCanGoBackAndForward, bgoforward_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenSteamURL, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenSteamURL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenSteamURL, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenSteamURL, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenSteamURL, referrer_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, expires_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetCookie, httponly_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetTargetFrameRate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetTargetFrameRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetTargetFrameRate, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetTargetFrameRate, ntargetframerate_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseRepaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseRepaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseRepaint, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFullRepaint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFullRepaint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFullRepaint, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRequestFullScreen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRequestFullScreen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRequestFullScreen, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExitFullScreen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExitFullScreen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgExitFullScreen, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgToggleFindInPageDialog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgToggleFindInPageDialog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgToggleFindInPageDialog, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetPIDShuttingDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetPIDShuttingDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetPIDShuttingDown, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDisableBackgroundThrottling, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDisableBackgroundThrottling, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDisableBackgroundThrottling, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckPIDShuttingDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckPIDShuttingDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAckPIDShuttingDown, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURL, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURL, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURL, url_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCookie, path_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURLResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURLResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURLResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGetCookiesForURLResponse, cookies_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, binput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, elementtagname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, searchbuttontext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, bhasmultipleinputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNodeHasFocus, input_type_),
  4,
  5,
  0,
  1,
  2,
  6,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToFocusedElement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToFocusedElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgZoomToFocusedElement, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseFullScreenFlashIfOpen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseFullScreenFlashIfOpen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseFullScreenFlashIfOpen, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseFullScreenFlashMovieIfOpen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseFullScreenFlashMovieIfOpen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPauseFullScreenFlashMovieIfOpen, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeText, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeTextResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeTextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeTextResponse, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgFocusedNodeTextResponse, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBuildID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBuildID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBuildID, build_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenDevTools, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenDevTools, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgOpenDevTools, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseDevTools, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseDevTools, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCloseDevTools, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUnlockH264, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUnlockH264, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUnlockH264, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUnlockH264, unlock_code_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, override_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, override_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, monitor_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, monitor_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, monitor_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, monitor_bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, usable_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, usable_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, usable_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenInformationChanged, usable_bottom_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllCookies, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllCookies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClearAllCookies, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenDPI, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenDPI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenDPI, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgScreenDPI, dpi_scaling_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAuthedSteamDomains, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAuthedSteamDomains, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAuthedSteamDomains, domains_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthNeeded, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthNeeded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthNeeded, filler_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthCookiesSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthCookiesSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSteamAuthCookiesSet, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRegisterMethod, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRegisterMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRegisterMethod, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRegisterMethod, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRegisterMethod, method_type_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CJSMethodArgument, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CJSMethodArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CJSMethodArgument, json_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CJSMethodArgument, function_handle_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue_JSObjectProperty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue_JSObjectProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue_JSObjectProperty, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue_JSObjectProperty, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, int_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, uint_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, function_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, is_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, array_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, is_object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSValue, object_properties_),
  5,
  1,
  2,
  3,
  0,
  4,
  6,
  ~0u,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSMethodCall, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSMethodCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSMethodCall, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSMethodCall, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSMethodCall, arguments_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSExecuteCallback, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSExecuteCallback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSExecuteCallback, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSExecuteCallback, function_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSExecuteCallback, arguments_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSReleaseCallback, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSReleaseCallback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSReleaseCallback, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSReleaseCallback, function_handle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRaiseException, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRaiseException, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRaiseException, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJSRaiseException, exception_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadLocalization, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadLocalization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadLocalization, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadLocalization, localization_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLoadLocalization, language_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJumpListLink, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJumpListLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJumpListLink, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJumpListLink, url_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgJumpListLink, icon_path_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, url_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSgJumpListMRUApp, icon_path_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, steam_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, mru_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetJumpList, links_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetGameOverlayTargetPIDs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetGameOverlayTargetPIDs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetGameOverlayTargetPIDs, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetGameOverlayTargetPIDs, target_pid_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTargetTextureID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTargetTextureID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTargetTextureID, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTargetTextureID, target_pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameOverlayTargetTextureID, texture_handle_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged_DraggableRects, draggable_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDraggableRegionsChanged, rects_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgResizeGripChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgResizeGripChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgResizeGripChanged, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgResizeGripChanged, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgResizeGripChanged, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetWindowPosition, height_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowWindow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowWindow, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideWindow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHideWindow, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBringWindowToFront, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBringWindowToFront, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBringWindowToFront, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMaximizeRestoreWindow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMaximizeRestoreWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMaximizeRestoreWindow, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMinimizeWindow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMinimizeWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgMinimizeWindow, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowBrowserContextMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowBrowserContextMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgShowBrowserContextMenu, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeSetComposition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeSetComposition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeSetComposition, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeSetComposition, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCommitText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCommitText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCommitText, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCommitText, text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCancelComposition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCancelComposition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCancelComposition, browser_handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCompositionRangeChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCompositionRangeChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCompositionRangeChanged, browser_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCompositionRangeChanged, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgImeCompositionRangeChanged, y_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::CMsgKeyUp)},
  { 11, 20, sizeof(::CMsgKeyDown)},
  { 24, 32, sizeof(::CMsgKeyChar)},
  { 35, 43, sizeof(::CMsgMouseDown)},
  { 46, 57, sizeof(::CMsgMouseUp)},
  { 63, 71, sizeof(::CMsgMouseDblClick)},
  { 74, 83, sizeof(::CMsgMouseWheel)},
  { 87, 96, sizeof(::CMsgMouseMove)},
  { 100, 106, sizeof(::CMsgMouseLeave)},
  { 107, 129, sizeof(::CMsgBrowserCreate)},
  { 146, 153, sizeof(::CMsgBrowserCreateResponse)},
  { 155, 161, sizeof(::CMsgBrowserRemove)},
  { 162, 170, sizeof(::CMsgSetLocalFileRequestMapping_AdditionalRoute)},
  { 173, 182, sizeof(::CMsgSetLocalFileRequestMapping)},
  { 186, 199, sizeof(::CMsgBrowserErrorStrings)},
  { 207, 215, sizeof(::CMsgBrowserSize)},
  { 218, 226, sizeof(::CMsgBrowserSetMinSize)},
  { 229, 239, sizeof(::CMsgBrowserPosition)},
  { 244, 254, sizeof(::CMsgBrowserResized)},
  { 259, 268, sizeof(::CMsgPostURL)},
  { 272, 280, sizeof(::CMsgAddHeader)},
  { 283, 289, sizeof(::CMsgStopLoad)},
  { 290, 296, sizeof(::CMsgReload)},
  { 297, 303, sizeof(::CMsgGoForward)},
  { 304, 310, sizeof(::CMsgGoBack)},
  { 311, 318, sizeof(::CMsgWasHidden)},
  { 320, 326, sizeof(::CMsgClearHistory)},
  { 327, 333, sizeof(::CMsgClearAllBrowsingData)},
  { 334, 340, sizeof(::CMsgCopy)},
  { 341, 347, sizeof(::CMsgPaste)},
  { 348, 355, sizeof(::CMsgExecuteJavaScript)},
  { 357, 364, sizeof(::CMsgSetFocus)},
  { 366, 372, sizeof(::CMsgHorizontalScrollBarSize)},
  { 373, 384, sizeof(::CMsgHorizontalScrollBarSizeResponse)},
  { 390, 396, sizeof(::CMsgVerticalScrollBarSize)},
  { 397, 408, sizeof(::CMsgVerticalScrollBarSizeResponse)},
  { 414, 423, sizeof(::CMsgFind)},
  { 427, 433, sizeof(::CMsgStopFind)},
  { 434, 441, sizeof(::CMsgSetHorizontalScroll)},
  { 443, 450, sizeof(::CMsgSetVerticalScroll)},
  { 452, 459, sizeof(::CMsgSetZoomLevel)},
  { 461, 467, sizeof(::CMsgViewSource)},
  { 468, 476, sizeof(::CMsgBrowserReady)},
  { 479, 490, sizeof(::CMsgURLChanged)},
  { 496, 503, sizeof(::CHTMLHeader)},
  { 505, 517, sizeof(::CHTMLPageSecurityInfo)},
  { 524, 532, sizeof(::CMsgFinishedRequest)},
  { 535, 544, sizeof(::CMsgLoadedRequest)},
  { 548, 556, sizeof(::CMsgPageSecurity)},
  { 559, 569, sizeof(::CMsgStartRequest)},
  { 574, 581, sizeof(::CMsgStartRequestResponse)},
  { 583, 589, sizeof(::CMsgShowPopup)},
  { 590, 596, sizeof(::CMsgHidePopup)},
  { 597, 607, sizeof(::CMsgSizePopup)},
  { 612, 620, sizeof(::CMsgOpenNewTab)},
  { 623, 636, sizeof(::CMsgPopupHTMLWindow)},
  { 644, 651, sizeof(::CMsgPopupHTMLWindowResponse)},
  { 653, 660, sizeof(::CMsgSetHTMLTitle)},
  { 662, 669, sizeof(::CMsgLoadingResource)},
  { 671, 678, sizeof(::CMsgStatusText)},
  { 680, 692, sizeof(::CMsgSetCursor)},
  { 699, 707, sizeof(::CMsgFileLoadDialog)},
  { 710, 717, sizeof(::CMsgFileLoadDialogResponse)},
  { 719, 726, sizeof(::CMsgShowToolTip)},
  { 728, 735, sizeof(::CMsgUpdateToolTip)},
  { 737, 743, sizeof(::CMsgHideToolTip)},
  { 744, 752, sizeof(::CMsgSearchResults)},
  { 755, 761, sizeof(::CMsgClose)},
  { 762, 773, sizeof(::CMsgSetSharedPaintBuffers)},
  { 779, 785, sizeof(::CMsgAckSharedPaintBuffers)},
  { 786, 796, sizeof(::CMsgNeedsPaint)},
  { 801, 812, sizeof(::CMsgComboNeedsPaint)},
  { 818, 831, sizeof(::CMsgNeedsSharedTexturePaint)},
  { 839, 851, sizeof(::CMsgGameOverlayTexturePaint)},
  { 858, 864, sizeof(::CMsgGetZoom)},
  { 865, 872, sizeof(::CMsgGetZoomResponse)},
  { 874, 882, sizeof(::CMsgLinkAtPosition)},
  { 885, 896, sizeof(::CMsgLinkAtPositionResponse)},
  { 902, 910, sizeof(::CMsgZoomToElementAtPosition)},
  { 913, 921, sizeof(::CMsgZoomToElementAtPositionResponse)},
  { 924, 933, sizeof(::CMsgScalePageToValue)},
  { 937, 944, sizeof(::CMsgScalePageToValueResponse)},
  { 946, 956, sizeof(::CMsgSavePageToJPEG)},
  { 961, 969, sizeof(::CMsgSavePageToJPEGResponse)},
  { 972, 979, sizeof(::CMsgJSAlert)},
  { 981, 988, sizeof(::CMsgJSConfirm)},
  { 990, 997, sizeof(::CMsgJSDialogResponse)},
  { 999, 1007, sizeof(::CMsgCanGoBackAndForward)},
  { 1010, 1018, sizeof(::CMsgOpenSteamURL)},
  { 1021, 1033, sizeof(::CMsgSetCookie)},
  { 1040, 1047, sizeof(::CMsgSetTargetFrameRate)},
  { 1049, 1055, sizeof(::CMsgPauseRepaint)},
  { 1056, 1062, sizeof(::CMsgFullRepaint)},
  { 1063, 1069, sizeof(::CMsgRequestFullScreen)},
  { 1070, 1076, sizeof(::CMsgExitFullScreen)},
  { 1077, 1083, sizeof(::CMsgToggleFindInPageDialog)},
  { 1084, 1090, sizeof(::CMsgSetPIDShuttingDown)},
  { 1091, 1097, sizeof(::CMsgDisableBackgroundThrottling)},
  { 1098, 1104, sizeof(::CMsgAckPIDShuttingDown)},
  { 1105, 1112, sizeof(::CMsgGetCookiesForURL)},
  { 1114, 1123, sizeof(::CCookie)},
  { 1127, 1135, sizeof(::CMsgGetCookiesForURLResponse)},
  { 1138, 1150, sizeof(::CMsgNodeHasFocus)},
  { 1157, 1163, sizeof(::CMsgZoomToFocusedElement)},
  { 1164, 1170, sizeof(::CMsgCloseFullScreenFlashIfOpen)},
  { 1171, 1177, sizeof(::CMsgPauseFullScreenFlashMovieIfOpen)},
  { 1178, 1184, sizeof(::CMsgFocusedNodeText)},
  { 1185, 1192, sizeof(::CMsgFocusedNodeTextResponse)},
  { 1194, 1200, sizeof(::CMsgBuildID)},
  { 1201, 1207, sizeof(::CMsgOpenDevTools)},
  { 1208, 1214, sizeof(::CMsgCloseDevTools)},
  { 1215, 1222, sizeof(::CMsgUnlockH264)},
  { 1224, 1240, sizeof(::CMsgScreenInformationChanged)},
  { 1251, 1257, sizeof(::CMsgClearAllCookies)},
  { 1258, 1265, sizeof(::CMsgScreenDPI)},
  { 1267, 1273, sizeof(::CMsgAuthedSteamDomains)},
  { 1274, 1280, sizeof(::CMsgSteamAuthNeeded)},
  { 1281, 1287, sizeof(::CMsgSteamAuthCookiesSet)},
  { 1288, 1296, sizeof(::CMsgJSRegisterMethod)},
  { 1299, 1306, sizeof(::CJSMethodArgument)},
  { 1308, 1315, sizeof(::CMsgJSValue_JSObjectProperty)},
  { 1317, 1332, sizeof(::CMsgJSValue)},
  { 1342, 1350, sizeof(::CMsgJSMethodCall)},
  { 1353, 1361, sizeof(::CMsgJSExecuteCallback)},
  { 1364, 1371, sizeof(::CMsgJSReleaseCallback)},
  { 1373, 1380, sizeof(::CMsgJSRaiseException)},
  { 1382, 1390, sizeof(::CMsgLoadLocalization)},
  { 1393, 1401, sizeof(::CMsgJumpListLink)},
  { 1404, 1413, sizeof(::CMSgJumpListMRUApp)},
  { 1417, 1426, sizeof(::CMsgSetJumpList)},
  { 1430, 1437, sizeof(::CMsgSetGameOverlayTargetPIDs)},
  { 1439, 1447, sizeof(::CMsgGameOverlayTargetTextureID)},
  { 1450, 1460, sizeof(::CMsgDraggableRegionsChanged_DraggableRects)},
  { 1465, 1472, sizeof(::CMsgDraggableRegionsChanged)},
  { 1474, 1482, sizeof(::CMsgResizeGripChanged)},
  { 1485, 1495, sizeof(::CMsgSetWindowPosition)},
  { 1500, 1506, sizeof(::CMsgShowWindow)},
  { 1507, 1513, sizeof(::CMsgHideWindow)},
  { 1514, 1520, sizeof(::CMsgBringWindowToFront)},
  { 1521, 1527, sizeof(::CMsgMaximizeRestoreWindow)},
  { 1528, 1534, sizeof(::CMsgMinimizeWindow)},
  { 1535, 1541, sizeof(::CMsgShowBrowserContextMenu)},
  { 1542, 1549, sizeof(::CMsgImeSetComposition)},
  { 1551, 1558, sizeof(::CMsgImeCommitText)},
  { 1560, 1566, sizeof(::CMsgImeCancelComposition)},
  { 1567, 1575, sizeof(::CMsgImeCompositionRangeChanged)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgKeyUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgKeyDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgKeyChar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseDblClick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseWheel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMouseLeave_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserCreate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetLocalFileRequestMapping_AdditionalRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetLocalFileRequestMapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserErrorStrings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserSetMinSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserResized_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPostURL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAddHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStopLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgReload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGoForward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGoBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgWasHidden_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClearHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClearAllBrowsingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCopy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPaste_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgExecuteJavaScript_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetFocus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHorizontalScrollBarSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHorizontalScrollBarSizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgVerticalScrollBarSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgVerticalScrollBarSizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStopFind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetHorizontalScroll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetVerticalScroll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetZoomLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgViewSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBrowserReady_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgURLChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CHTMLHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CHTMLPageSecurityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFinishedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLoadedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPageSecurity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStartRequestResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgShowPopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHidePopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSizePopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgOpenNewTab_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPopupHTMLWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPopupHTMLWindowResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetHTMLTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLoadingResource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStatusText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetCursor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFileLoadDialog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFileLoadDialogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgShowToolTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgUpdateToolTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHideToolTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSearchResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetSharedPaintBuffers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAckSharedPaintBuffers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNeedsPaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgComboNeedsPaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNeedsSharedTexturePaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameOverlayTexturePaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGetZoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGetZoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLinkAtPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLinkAtPositionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgZoomToElementAtPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgZoomToElementAtPositionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgScalePageToValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgScalePageToValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSavePageToJPEG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSavePageToJPEGResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSConfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSDialogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCanGoBackAndForward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgOpenSteamURL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetCookie_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetTargetFrameRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPauseRepaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFullRepaint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRequestFullScreen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgExitFullScreen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgToggleFindInPageDialog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetPIDShuttingDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDisableBackgroundThrottling_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAckPIDShuttingDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGetCookiesForURL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCookie_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGetCookiesForURLResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNodeHasFocus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgZoomToFocusedElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCloseFullScreenFlashIfOpen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPauseFullScreenFlashMovieIfOpen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFocusedNodeText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgFocusedNodeTextResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBuildID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgOpenDevTools_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCloseDevTools_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgUnlockH264_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgScreenInformationChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClearAllCookies_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgScreenDPI_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAuthedSteamDomains_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSteamAuthNeeded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSteamAuthCookiesSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSRegisterMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CJSMethodArgument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSValue_JSObjectProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSMethodCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSExecuteCallback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSReleaseCallback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJSRaiseException_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLoadLocalization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgJumpListLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMSgJumpListMRUApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetJumpList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetGameOverlayTargetPIDs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameOverlayTargetTextureID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDraggableRegionsChanged_DraggableRects_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDraggableRegionsChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgResizeGripChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetWindowPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgShowWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHideWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBringWindowToFront_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMaximizeRestoreWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgMinimizeWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgShowBrowserContextMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgImeSetComposition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgImeCommitText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgImeCancelComposition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgImeCompositionRangeChanged_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "htmlmessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 146);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022htmlmessages.proto\"G\n\tCMsgKeyUp\022\026\n\016bro"
      "wser_handle\030\001 \001(\r\022\017\n\007keyCode\030\002 \001(\r\022\021\n\tmo"
      "difiers\030\003 \001(\r\"`\n\013CMsgKeyDown\022\026\n\016browser_"
      "handle\030\001 \001(\r\022\017\n\007keyCode\030\002 \001(\r\022\021\n\tmodifie"
      "rs\030\003 \001(\r\022\025\n\ris_system_key\030\004 \001(\010\"I\n\013CMsgK"
      "eyChar\022\026\n\016browser_handle\030\001 \001(\r\022\017\n\007unicha"
      "r\030\002 \001(\r\022\021\n\tmodifiers\030\003 \001(\r\"P\n\rCMsgMouseD"
      "own\022\026\n\016browser_handle\030\001 \001(\r\022\024\n\014mouse_but"
      "ton\030\002 \001(\r\022\021\n\tmodifiers\030\003 \001(\r\"z\n\013CMsgMous"
      "eUp\022\026\n\016browser_handle\030\001 \001(\r\022\024\n\014mouse_but"
      "ton\030\002 \001(\r\022\021\n\tmodifiers\030\003 \001(\r\022\024\n\014is_off_p"
      "anel\030\004 \001(\010\022\t\n\001x\030\005 \001(\005\022\t\n\001y\030\006 \001(\005\"T\n\021CMsg"
      "MouseDblClick\022\026\n\016browser_handle\030\001 \001(\r\022\024\n"
      "\014mouse_button\030\002 \001(\r\022\021\n\tmodifiers\030\003 \001(\r\"["
      "\n\016CMsgMouseWheel\022\026\n\016browser_handle\030\001 \001(\r"
      "\022\016\n\006deltax\030\002 \001(\005\022\016\n\006deltay\030\003 \001(\005\022\021\n\tmodi"
      "fiers\030\004 \001(\r\"P\n\rCMsgMouseMove\022\026\n\016browser_"
      "handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\021\n\tmo"
      "difiers\030\004 \001(\r\"(\n\016CMsgMouseLeave\022\026\n\016brows"
      "er_handle\030\001 \001(\r\"\302\003\n\021CMsgBrowserCreate\022\022\n"
      "\nrequest_id\030\001 \001(\r\022\021\n\tuseragent\030\003 \001(\t\022\020\n\010"
      "user_css\030\005 \001(\t\022\030\n\020native_dropdowns\030\006 \001(\010"
      "\022\023\n\013dpi_scaling\030\007 \001(\002\022\027\n\toffscreen\030\010 \001(\010"
      ":\004true\022\030\n\rinitial_width\030\t \001(\r:\0010\022\031\n\016init"
      "ial_height\030\n \001(\r:\0010\022\023\n\013window_icon\030\013 \001(\t"
      "\022\031\n\nborderless\030\014 \001(\010:\005false\022\025\n\rvroverlay"
      "_key\030\r \001(\t\022\027\n\014browser_type\030\016 \001(\r:\0010\022 \n\013i"
      "nitial_top\030\017 \001(\005:\013-2147483648\022!\n\014initial"
      "_left\030\020 \001(\005:\013-2147483648\022(\n\031only_allow_t"
      "rusted_popups\030\021 \001(\010:\005false\022\023\n\013initial_ur"
      "l\030\022 \001(\t\022\023\n\013hwnd_parent\030\023 \001(\006\"G\n\031CMsgBrow"
      "serCreateResponse\022\026\n\016browser_handle\030\001 \001("
      "\r\022\022\n\nrequest_id\030\002 \001(\r\"+\n\021CMsgBrowserRemo"
      "ve\022\026\n\016browser_handle\030\001 \001(\r\"\203\002\n\036CMsgSetLo"
      "calFileRequestMapping\022\026\n\016browser_handle\030"
      "\001 \001(\r\022\023\n\013request_url\030\002 \001(\t\022\032\n\022default_lo"
      "cal_path\030\003 \001(\t\022\?\n\006routes\030\004 \003(\0132/.CMsgSet"
      "LocalFileRequestMapping.AdditionalRoute\032"
      "W\n\017AdditionalRoute\022\024\n\014relative_url\030\001 \001(\t"
      "\022\022\n\nlocal_path\030\002 \001(\t\022\032\n\022allowed_extensio"
      "ns\030\003 \001(\t\"\271\001\n\027CMsgBrowserErrorStrings\022\026\n\016"
      "browser_handle\030\001 \001(\r\022\r\n\005title\030\002 \001(\t\022\016\n\006h"
      "eader\030\003 \001(\t\022\022\n\ncache_miss\030\004 \001(\t\022\017\n\007bad_u"
      "rl\030\005 \001(\t\022\032\n\022connection_problem\030\006 \001(\t\022\025\n\r"
      "proxy_problem\030\007 \001(\t\022\017\n\007unknown\030\010 \001(\t\"H\n\017"
      "CMsgBrowserSize\022\026\n\016browser_handle\030\001 \001(\r\022"
      "\r\n\005width\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\"N\n\025CMsgBr"
      "owserSetMinSize\022\026\n\016browser_handle\030\001 \001(\r\022"
      "\r\n\005width\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\"e\n\023CMsgBr"
      "owserPosition\022\026\n\016browser_handle\030\001 \001(\r\022\t\n"
      "\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\017\n\007x_local\030\004 \001(\005\022\017\n\007"
      "y_local\030\005 \001(\005\"a\n\022CMsgBrowserResized\022\026\n\016b"
      "rowser_handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001("
      "\005\022\r\n\005width\030\004 \001(\r\022\016\n\006height\030\005 \001(\r\"T\n\013CMsg"
      "PostURL\022\026\n\016browser_handle\030\001 \001(\r\022\013\n\003url\030\002"
      " \001(\t\022\014\n\004post\030\003 \001(\t\022\022\n\npageserial\030\004 \001(\r\"C"
      "\n\rCMsgAddHeader\022\026\n\016browser_handle\030\001 \001(\r\022"
      "\013\n\003key\030\002 \001(\t\022\r\n\005value\030\003 \001(\t\"&\n\014CMsgStopL"
      "oad\022\026\n\016browser_handle\030\001 \001(\r\"$\n\nCMsgReloa"
      "d\022\026\n\016browser_handle\030\001 \001(\r\"\'\n\rCMsgGoForwa"
      "rd\022\026\n\016browser_handle\030\001 \001(\r\"$\n\nCMsgGoBack"
      "\022\026\n\016browser_handle\030\001 \001(\r\"7\n\rCMsgWasHidde"
      "n\022\026\n\016browser_handle\030\001 \001(\r\022\016\n\006hidden\030\002 \001("
      "\010\"*\n\020CMsgClearHistory\022\026\n\016browser_handle\030"
      "\001 \001(\r\"2\n\030CMsgClearAllBrowsingData\022\026\n\016bro"
      "wser_handle\030\001 \001(\r\"\"\n\010CMsgCopy\022\026\n\016browser"
      "_handle\030\001 \001(\r\"#\n\tCMsgPaste\022\026\n\016browser_ha"
      "ndle\030\001 \001(\r\"\?\n\025CMsgExecuteJavaScript\022\026\n\016b"
      "rowser_handle\030\001 \001(\r\022\016\n\006script\030\002 \001(\t\"5\n\014C"
      "MsgSetFocus\022\026\n\016browser_handle\030\001 \001(\r\022\r\n\005f"
      "ocus\030\002 \001(\010\"5\n\033CMsgHorizontalScrollBarSiz"
      "e\022\026\n\016browser_handle\030\001 \001(\r\"\223\001\n#CMsgHorizo"
      "ntalScrollBarSizeResponse\022\026\n\016browser_han"
      "dle\030\001 \001(\r\022\022\n\nscroll_max\030\006 \001(\r\022\016\n\006scroll\030"
      "\007 \001(\r\022\014\n\004zoom\030\010 \001(\002\022\017\n\007visible\030\t \001(\010\022\021\n\t"
      "page_size\030\n \001(\r\"3\n\031CMsgVerticalScrollBar"
      "Size\022\026\n\016browser_handle\030\001 \001(\r\"\221\001\n!CMsgVer"
      "ticalScrollBarSizeResponse\022\026\n\016browser_ha"
      "ndle\030\001 \001(\r\022\022\n\nscroll_max\030\006 \001(\r\022\016\n\006scroll"
      "\030\007 \001(\r\022\014\n\004zoom\030\010 \001(\002\022\017\n\007visible\030\t \001(\010\022\021\n"
      "\tpage_size\030\n \001(\r\"X\n\010CMsgFind\022\026\n\016browser_"
      "handle\030\001 \001(\r\022\014\n\004find\030\002 \001(\t\022\016\n\006infind\030\003 \001"
      "(\010\022\026\n\007reverse\030\004 \001(\010:\005false\"&\n\014CMsgStopFi"
      "nd\022\026\n\016browser_handle\030\001 \001(\r\"A\n\027CMsgSetHor"
      "izontalScroll\022\026\n\016browser_handle\030\001 \001(\r\022\016\n"
      "\006scroll\030\002 \001(\r\"\?\n\025CMsgSetVerticalScroll\022\026"
      "\n\016browser_handle\030\001 \001(\r\022\016\n\006scroll\030\002 \001(\r\"8"
      "\n\020CMsgSetZoomLevel\022\026\n\016browser_handle\030\001 \001"
      "(\r\022\014\n\004zoom\030\002 \001(\001\"(\n\016CMsgViewSource\022\026\n\016br"
      "owser_handle\030\001 \001(\r\"X\n\020CMsgBrowserReady\022\026"
      "\n\016browser_handle\030\001 \001(\r\022\026\n\016vr_overlay_key"
      "\030\002 \001(\t\022\024\n\014hwnd_browser\030\003 \001(\006\"\207\001\n\016CMsgURL"
      "Changed\022\026\n\016browser_handle\030\001 \001(\r\022\013\n\003url\030\002"
      " \001(\t\022\020\n\010postData\030\003 \001(\t\022\023\n\013bIsRedirect\030\004 "
      "\001(\010\022\021\n\tpagetitle\030\005 \001(\t\022\026\n\016bNewNavigation"
      "\030\006 \001(\010\")\n\013CHTMLHeader\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t\"\274\001\n\025CHTMLPageSecurityInfo\022\030\n\tb"
      "IsSecure\030\001 \001(\010:\005false\022\034\n\rbHasCertError\030\002"
      " \001(\010:\005false\022\022\n\nissuerName\030\003 \001(\t\022\020\n\010certN"
      "ame\030\004 \001(\t\022\025\n\ncertExpiry\030\005 \001(\005:\0010\022\024\n\tnCer"
      "tBits\030\006 \001(\005:\0010\022\030\n\tbIsEVCert\030\007 \001(\010:\005false"
      "\"M\n\023CMsgFinishedRequest\022\026\n\016browser_handl"
      "e\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\021\n\tpageTitle\030\003 \001(\t\""
      "j\n\021CMsgLoadedRequest\022\026\n\016browser_handle\030\001"
      " \001(\r\022\013\n\003url\030\002 \001(\t\022\021\n\tpageTitle\030\003 \001(\t\022\035\n\007"
      "headers\030\005 \003(\0132\014.CHTMLHeader\"f\n\020CMsgPageS"
      "ecurity\022\026\n\016browser_handle\030\001 \001(\r\022\013\n\003url\030\002"
      " \001(\t\022-\n\rsecurity_info\030\003 \001(\0132\026.CHTMLPageS"
      "ecurityInfo\"n\n\020CMsgStartRequest\022\026\n\016brows"
      "er_handle\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\016\n\006target\030\003"
      " \001(\t\022\020\n\010postData\030\004 \001(\t\022\023\n\013bIsRedirect\030\005 "
      "\001(\010\"B\n\030CMsgStartRequestResponse\022\026\n\016brows"
      "er_handle\030\001 \001(\r\022\016\n\006bAllow\030\002 \001(\010\"\'\n\rCMsgS"
      "howPopup\022\026\n\016browser_handle\030\001 \001(\r\"\'\n\rCMsg"
      "HidePopup\022\026\n\016browser_handle\030\001 \001(\r\"Y\n\rCMs"
      "gSizePopup\022\026\n\016browser_handle\030\001 \001(\r\022\t\n\001x\030"
      "\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\014\n\004wide\030\004 \001(\r\022\014\n\004tall\030\005"
      " \001(\r\"J\n\016CMsgOpenNewTab\022\026\n\016browser_handle"
      "\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\023\n\013bForeground\030\003 \001(\010"
      "\"\264\001\n\023CMsgPopupHTMLWindow\022\026\n\016browser_hand"
      "le\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\026\n\001x\030\003 \001(\005:\013-21474"
      "83648\022\026\n\001y\030\004 \001(\005:\013-2147483648\022\014\n\004wide\030\005 "
      "\001(\r\022\014\n\004tall\030\006 \001(\r\022\023\n\013popup_index\030\007 \001(\r\022\027"
      "\n\017trusted_creator\030\010 \001(\010\"E\n\033CMsgPopupHTML"
      "WindowResponse\022\026\n\016browser_handle\030\001 \001(\r\022\016"
      "\n\006bAllow\030\002 \001(\010\"9\n\020CMsgSetHTMLTitle\022\026\n\016br"
      "owser_handle\030\001 \001(\r\022\r\n\005title\030\002 \001(\t\":\n\023CMs"
      "gLoadingResource\022\026\n\016browser_handle\030\001 \001(\r"
      "\022\013\n\003url\030\002 \001(\t\"6\n\016CMsgStatusText\022\026\n\016brows"
      "er_handle\030\001 \001(\r\022\014\n\004text\030\002 \001(\t\"\214\001\n\rCMsgSe"
      "tCursor\022\026\n\016browser_handle\030\001 \001(\r\022\016\n\006curso"
      "r\030\002 \001(\r\022\023\n\013custom_data\030\003 \001(\014\022\014\n\004wide\030\004 \001"
      "(\r\022\014\n\004tall\030\005 \001(\r\022\020\n\010xhotspot\030\006 \001(\r\022\020\n\010yh"
      "otspot\030\007 \001(\r\"P\n\022CMsgFileLoadDialog\022\026\n\016br"
      "owser_handle\030\001 \001(\r\022\r\n\005title\030\002 \001(\t\022\023\n\013ini"
      "tialFile\030\003 \001(\t\"C\n\032CMsgFileLoadDialogResp"
      "onse\022\026\n\016browser_handle\030\001 \001(\r\022\r\n\005files\030\002 "
      "\003(\t\"7\n\017CMsgShowToolTip\022\026\n\016browser_handle"
      "\030\001 \001(\r\022\014\n\004text\030\002 \001(\t\"9\n\021CMsgUpdateToolTi"
      "p\022\026\n\016browser_handle\030\001 \001(\r\022\014\n\004text\030\002 \001(\t\""
      ")\n\017CMsgHideToolTip\022\026\n\016browser_handle\030\001 \001"
      "(\r\"Q\n\021CMsgSearchResults\022\026\n\016browser_handl"
      "e\030\001 \001(\r\022\023\n\013activeMatch\030\002 \001(\005\022\017\n\007results\030"
      "\003 \001(\005\"#\n\tCMsgClose\022\026\n\016browser_handle\030\001 \001"
      "(\r\"\212\001\n\031CMsgSetSharedPaintBuffers\022\026\n\016brow"
      "ser_handle\030\001 \001(\r\022\014\n\004wide\030\002 \001(\r\022\014\n\004tall\030\003"
      " \001(\r\022\022\n\nsource_pid\030\004 \001(\004\022\025\n\rsource_handl"
      "e\030\005 \001(\004\022\016\n\006handle\030\006 \001(\004\"3\n\031CMsgAckShared"
      "PaintBuffers\022\026\n\016browser_handle\030\001 \001(\r\"q\n\016"
      "CMsgNeedsPaint\022\026\n\016browser_handle\030\001 \001(\r\022\017"
      "\n\007scrollx\030\n \001(\r\022\017\n\007scrolly\030\013 \001(\r\022\021\n\tpage"
      "scale\030\014 \001(\002\022\022\n\npageserial\030\017 \001(\r\"\257\001\n\023CMsg"
      "ComboNeedsPaint\022\026\n\016browser_handle\030\001 \001(\r\022"
      "\014\n\004rgba\030\002 \001(\004\022\030\n\rcombobox_wide\030\003 \001(\r:\0010\022"
      "\030\n\rcombobox_tall\030\004 \001(\r:\0010\022\037\n\024shared_memo"
      "ry_handle\030\005 \001(\004:\0010\022\035\n\022shared_memory_size"
      "\030\007 \001(\004:\0010\"\263\001\n\033CMsgNeedsSharedTexturePain"
      "t\022\026\n\016browser_handle\030\001 \001(\r\022\024\n\014share_handl"
      "e\030\002 \001(\r\022\r\n\005width\030\003 \001(\r\022\016\n\006height\030\004 \001(\r\022\017"
      "\n\007scrollx\030\005 \001(\r\022\017\n\007scrolly\030\006 \001(\r\022\021\n\tpage"
      "scale\030\007 \001(\002\022\022\n\npageserial\030\010 \001(\r\"\235\001\n\033CMsg"
      "GameOverlayTexturePaint\022\026\n\016browser_handl"
      "e\030\001 \001(\r\022\r\n\005width\030\003 \001(\r\022\016\n\006height\030\004 \001(\r\022\017"
      "\n\007scrollx\030\005 \001(\r\022\017\n\007scrolly\030\006 \001(\r\022\021\n\tpage"
      "scale\030\007 \001(\002\022\022\n\npageserial\030\010 \001(\r\"%\n\013CMsgG"
      "etZoom\022\026\n\016browser_handle\030\001 \001(\r\";\n\023CMsgGe"
      "tZoomResponse\022\026\n\016browser_handle\030\001 \001(\r\022\014\n"
      "\004zoom\030\002 \001(\002\"B\n\022CMsgLinkAtPosition\022\026\n\016bro"
      "wser_handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\""
      "z\n\032CMsgLinkAtPositionResponse\022\026\n\016browser"
      "_handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\022\013\n\003u"
      "rl\030\004 \001(\t\022\021\n\tblivelink\030\005 \001(\010\022\016\n\006binput\030\006 "
      "\001(\010\"K\n\033CMsgZoomToElementAtPosition\022\026\n\016br"
      "owser_handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r"
      "\"^\n#CMsgZoomToElementAtPositionResponse\022"
      "\026\n\016browser_handle\030\001 \001(\r\022\r\n\005scale\030\002 \001(\002\022\020"
      "\n\010duration\030\003 \001(\002\"S\n\024CMsgScalePageToValue"
      "\022\026\n\016browser_handle\030\001 \001(\r\022\r\n\005scale\030\002 \001(\002\022"
      "\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001(\002\"D\n\034CMsgScalePageTo"
      "ValueResponse\022\026\n\016browser_handle\030\001 \001(\r\022\014\n"
      "\004zoom\030\002 \001(\002\"j\n\022CMsgSavePageToJPEG\022\026\n\016bro"
      "wser_handle\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\020\n\010filena"
      "me\030\003 \001(\t\022\r\n\005width\030\004 \001(\r\022\016\n\006height\030\005 \001(\r\""
      "S\n\032CMsgSavePageToJPEGResponse\022\026\n\016browser"
      "_handle\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\020\n\010filename\030\003"
      " \001(\t\"6\n\013CMsgJSAlert\022\026\n\016browser_handle\030\001 "
      "\001(\r\022\017\n\007message\030\002 \001(\t\"8\n\rCMsgJSConfirm\022\026\n"
      "\016browser_handle\030\001 \001(\r\022\017\n\007message\030\002 \001(\t\">"
      "\n\024CMsgJSDialogResponse\022\026\n\016browser_handle"
      "\030\001 \001(\r\022\016\n\006result\030\002 \001(\010\"V\n\027CMsgCanGoBackA"
      "ndForward\022\026\n\016browser_handle\030\001 \001(\r\022\017\n\007bgo"
      "back\030\002 \001(\010\022\022\n\nbgoforward\030\003 \001(\010\"I\n\020CMsgOp"
      "enSteamURL\022\026\n\016browser_handle\030\001 \001(\r\022\013\n\003ur"
      "l\030\002 \001(\t\022\020\n\010referrer\030\003 \001(\t\"z\n\rCMsgSetCook"
      "ie\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\014\n\004path\030\003"
      " \001(\t\022\014\n\004host\030\004 \001(\t\022\017\n\007expires\030\005 \001(\r\022\016\n\006s"
      "ecure\030\006 \001(\010\022\020\n\010httponly\030\007 \001(\010\"J\n\026CMsgSet"
      "TargetFrameRate\022\026\n\016browser_handle\030\001 \001(\r\022"
      "\030\n\020nTargetFrameRate\030\002 \001(\r\"*\n\020CMsgPauseRe"
      "paint\022\026\n\016browser_handle\030\001 \001(\r\")\n\017CMsgFul"
      "lRepaint\022\026\n\016browser_handle\030\001 \001(\r\"/\n\025CMsg"
      "RequestFullScreen\022\026\n\016browser_handle\030\001 \001("
      "\r\",\n\022CMsgExitFullScreen\022\026\n\016browser_handl"
      "e\030\001 \001(\r\"4\n\032CMsgToggleFindInPageDialog\022\026\n"
      "\016browser_handle\030\001 \001(\r\"0\n\026CMsgSetPIDShutt"
      "ingDown\022\026\n\016browser_handle\030\001 \001(\r\"9\n\037CMsgD"
      "isableBackgroundThrottling\022\026\n\016browser_ha"
      "ndle\030\001 \001(\r\"0\n\026CMsgAckPIDShuttingDown\022\026\n\016"
      "browser_handle\030\001 \001(\r\";\n\024CMsgGetCookiesFo"
      "rURL\022\026\n\016browser_handle\030\001 \001(\r\022\013\n\003url\030\002 \001("
      "\t\"D\n\007CCookie\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001("
      "\t\022\016\n\006domain\030\003 \001(\t\022\014\n\004path\030\004 \001(\t\"^\n\034CMsgG"
      "etCookiesForURLResponse\022\026\n\016browser_handl"
      "e\030\001 \001(\r\022\013\n\003url\030\002 \001(\t\022\031\n\007cookies\030\003 \003(\0132\010."
      "CCookie\"\252\001\n\020CMsgNodeHasFocus\022\026\n\016browser_"
      "handle\030\001 \001(\r\022\016\n\006bInput\030\002 \001(\010\022\014\n\004name\030\003 \001"
      "(\t\022\026\n\016elementtagname\030\004 \001(\t\022\030\n\020searchbutt"
      "ontext\030\005 \001(\t\022\032\n\022bHasMultipleInputs\030\006 \001(\010"
      "\022\022\n\ninput_type\030\007 \001(\t\"2\n\030CMsgZoomToFocuse"
      "dElement\022\026\n\016browser_handle\030\001 \001(\r\"8\n\036CMsg"
      "CloseFullScreenFlashIfOpen\022\026\n\016browser_ha"
      "ndle\030\001 \001(\r\"=\n#CMsgPauseFullScreenFlashMo"
      "vieIfOpen\022\026\n\016browser_handle\030\001 \001(\r\"-\n\023CMs"
      "gFocusedNodeText\022\026\n\016browser_handle\030\001 \001(\r"
      "\"D\n\033CMsgFocusedNodeTextResponse\022\026\n\016brows"
      "er_handle\030\001 \001(\r\022\r\n\005value\030\002 \001(\t\"\037\n\013CMsgBu"
      "ildID\022\020\n\010build_id\030\001 \001(\004\"*\n\020CMsgOpenDevTo"
      "ols\022\026\n\016browser_handle\030\001 \001(\r\"+\n\021CMsgClose"
      "DevTools\022\026\n\016browser_handle\030\001 \001(\r\"=\n\016CMsg"
      "UnlockH264\022\026\n\016browser_handle\030\001 \001(\r\022\023\n\013un"
      "lock_code\030\002 \001(\t\"\227\002\n\034CMsgScreenInformatio"
      "nChanged\022\026\n\016browser_handle\030\001 \001(\r\022\026\n\016over"
      "ride_width\030\002 \001(\r\022\027\n\017override_height\030\003 \001("
      "\r\022\024\n\014monitor_left\030\004 \001(\r\022\023\n\013monitor_top\030\005"
      " \001(\r\022\025\n\rmonitor_right\030\006 \001(\r\022\026\n\016monitor_b"
      "ottom\030\007 \001(\r\022\023\n\013usable_left\030\010 \001(\r\022\022\n\nusab"
      "le_top\030\t \001(\r\022\024\n\014usable_right\030\n \001(\r\022\025\n\rus"
      "able_bottom\030\013 \001(\r\"-\n\023CMsgClearAllCookies"
      "\022\026\n\016browser_handle\030\001 \001(\r\"<\n\rCMsgScreenDP"
      "I\022\026\n\016browser_handle\030\001 \001(\r\022\023\n\013dpi_scaling"
      "\030\002 \001(\002\")\n\026CMsgAuthedSteamDomains\022\017\n\007doma"
      "ins\030\001 \003(\t\"%\n\023CMsgSteamAuthNeeded\022\016\n\006fill"
      "er\030\001 \001(\010\"*\n\027CMsgSteamAuthCookiesSet\022\017\n\007s"
      "uccess\030\001 \001(\010\"\212\001\n\024CMsgJSRegisterMethod\022\026\n"
      "\016browser_handle\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022L\n\013m"
      "ethod_type\030\003 \001(\0162\026.EJSRegisterMethodType"
      ":\037k_EJSRegisterMethodType_Invalid\"\?\n\021CJS"
      "MethodArgument\022\021\n\tjson_data\030\001 \001(\t\022\027\n\017fun"
      "ction_handle\030\002 \001(\004\"\317\002\n\013CMsgJSValue\022\022\n\nbo"
      "ol_value\030\001 \001(\010\022\021\n\tint_value\030\002 \001(\005\022\022\n\nuin"
      "t_value\030\003 \001(\r\022\024\n\014double_value\030\004 \001(\001\022\024\n\014s"
      "tring_value\030\005 \001(\t\022\027\n\017function_handle\030\006 \001"
      "(\004\022\020\n\010is_array\030\010 \001(\010\022\"\n\014array_values\030\t \003"
      "(\0132\014.CMsgJSValue\022\021\n\tis_object\030\n \001(\010\0228\n\021o"
      "bject_properties\030\013 \003(\0132\035.CMsgJSValue.JSO"
      "bjectProperty\032=\n\020JSObjectProperty\022\014\n\004nam"
      "e\030\001 \001(\t\022\033\n\005value\030\002 \001(\0132\014.CMsgJSValue\"Y\n\020"
      "CMsgJSMethodCall\022\026\n\016browser_handle\030\001 \001(\r"
      "\022\014\n\004name\030\002 \001(\t\022\037\n\targuments\030\003 \003(\0132\014.CMsg"
      "JSValue\"i\n\025CMsgJSExecuteCallback\022\026\n\016brow"
      "ser_handle\030\001 \001(\r\022\027\n\017function_handle\030\002 \001("
      "\004\022\037\n\targuments\030\003 \003(\0132\014.CMsgJSValue\"H\n\025CM"
      "sgJSReleaseCallback\022\026\n\016browser_handle\030\001 "
      "\001(\r\022\027\n\017function_handle\030\002 \001(\004\"A\n\024CMsgJSRa"
      "iseException\022\026\n\016browser_handle\030\001 \001(\r\022\021\n\t"
      "exception\030\002 \001(\t\"[\n\024CMsgLoadLocalization\022"
      "\026\n\016browser_handle\030\001 \001(\r\022\031\n\021localization_"
      "path\030\002 \001(\t\022\020\n\010language\030\003 \001(\t\"M\n\020CMsgJump"
      "ListLink\022\024\n\014display_name\030\001 \001(\t\022\020\n\010url_li"
      "nk\030\002 \001(\t\022\021\n\ticon_path\030\003 \001(\t\"^\n\022CMSgJumpL"
      "istMRUApp\022\r\n\005appid\030\001 \001(\r\022\024\n\014display_name"
      "\030\002 \001(\t\022\020\n\010url_link\030\003 \001(\t\022\021\n\ticon_path\030\004 "
      "\001(\t\"}\n\017CMsgSetJumpList\022\022\n\nsteam_path\030\001 \001"
      "(\t\022\021\n\tmru_title\030\002 \001(\t\022!\n\004apps\030\003 \003(\0132\023.CM"
      "SgJumpListMRUApp\022 \n\005links\030\004 \003(\0132\021.CMsgJu"
      "mpListLink\"J\n\034CMsgSetGameOverlayTargetPI"
      "Ds\022\026\n\016browser_handle\030\001 \001(\r\022\022\n\ntarget_pid"
      "\030\002 \003(\r\"d\n\036CMsgGameOverlayTargetTextureID"
      "\022\026\n\016browser_handle\030\001 \001(\r\022\022\n\ntarget_pid\030\002"
      " \001(\r\022\026\n\016texture_handle\030\003 \001(\r\"\313\001\n\033CMsgDra"
      "ggableRegionsChanged\022\026\n\016browser_handle\030\001"
      " \001(\r\022:\n\005rects\030\002 \003(\0132+.CMsgDraggableRegio"
      "nsChanged.DraggableRects\032X\n\016DraggableRec"
      "ts\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005width\030\003 \001(\005\022"
      "\016\n\006height\030\004 \001(\005\022\021\n\tdraggable\030\005 \001(\010\"N\n\025CM"
      "sgResizeGripChanged\022\026\n\016browser_handle\030\001 "
      "\001(\r\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\"d\n\025CM"
      "sgSetWindowPosition\022\026\n\016browser_handle\030\001 "
      "\001(\r\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\r\n\005width\030\004 \001(\005"
      "\022\016\n\006height\030\005 \001(\005\"(\n\016CMsgShowWindow\022\026\n\016br"
      "owser_handle\030\001 \001(\r\"(\n\016CMsgHideWindow\022\026\n\016"
      "browser_handle\030\001 \001(\r\"0\n\026CMsgBringWindowT"
      "oFront\022\026\n\016browser_handle\030\001 \001(\r\"3\n\031CMsgMa"
      "ximizeRestoreWindow\022\026\n\016browser_handle\030\001 "
      "\001(\r\",\n\022CMsgMinimizeWindow\022\026\n\016browser_han"
      "dle\030\001 \001(\r\"4\n\032CMsgShowBrowserContextMenu\022"
      "\026\n\016browser_handle\030\001 \001(\r\"=\n\025CMsgImeSetCom"
      "position\022\026\n\016browser_handle\030\001 \001(\r\022\014\n\004text"
      "\030\002 \001(\t\"9\n\021CMsgImeCommitText\022\026\n\016browser_h"
      "andle\030\001 \001(\r\022\014\n\004text\030\002 \001(\t\"2\n\030CMsgImeCanc"
      "elComposition\022\026\n\016browser_handle\030\001 \001(\r\"N\n"
      "\036CMsgImeCompositionRangeChanged\022\026\n\016brows"
      "er_handle\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r*\255\001"
      "\n\025EJSRegisterMethodType\022#\n\037k_EJSRegister"
      "MethodType_Invalid\020\000\022$\n k_EJSRegisterMet"
      "hodType_Function\020\001\022$\n k_EJSRegisterMetho"
      "dType_Callback\020\002\022#\n\037k_EJSRegisterMethodT"
      "ype_Promise\020\003B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 12300);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "htmlmessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_htmlmessages_2eproto
const ::google::protobuf::EnumDescriptor* EJSRegisterMethodType_descriptor() {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_htmlmessages_2eproto::file_level_enum_descriptors[0];
}
bool EJSRegisterMethodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgKeyUp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgKeyUp::kBrowserHandleFieldNumber;
const int CMsgKeyUp::kKeyCodeFieldNumber;
const int CMsgKeyUp::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgKeyUp::CMsgKeyUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgKeyUp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgKeyUp)
}
CMsgKeyUp::CMsgKeyUp(const CMsgKeyUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgKeyUp)
}

void CMsgKeyUp::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgKeyUp::~CMsgKeyUp() {
  // @@protoc_insertion_point(destructor:CMsgKeyUp)
  SharedDtor();
}

void CMsgKeyUp::SharedDtor() {
}

void CMsgKeyUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgKeyUp::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgKeyUp& CMsgKeyUp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgKeyUp.base);
  return *internal_default_instance();
}


void CMsgKeyUp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgKeyUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgKeyUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgKeyUp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 keyCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_keycode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgKeyUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgKeyUp)
  return false;
#undef DO_
}

void CMsgKeyUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgKeyUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 keyCode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->keycode(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgKeyUp)
}

::google::protobuf::uint8* CMsgKeyUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgKeyUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 keyCode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->keycode(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgKeyUp)
  return target;
}

size_t CMsgKeyUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgKeyUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 keyCode = 2;
    if (has_keycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->keycode());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgKeyUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgKeyUp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgKeyUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgKeyUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgKeyUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgKeyUp)
    MergeFrom(*source);
  }
}

void CMsgKeyUp::MergeFrom(const CMsgKeyUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgKeyUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      keycode_ = from.keycode_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgKeyUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgKeyUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgKeyUp::CopyFrom(const CMsgKeyUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgKeyUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgKeyUp::IsInitialized() const {
  return true;
}

void CMsgKeyUp::Swap(CMsgKeyUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgKeyUp::InternalSwap(CMsgKeyUp* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(keycode_, other->keycode_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgKeyUp::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgKeyDown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgKeyDown::kBrowserHandleFieldNumber;
const int CMsgKeyDown::kKeyCodeFieldNumber;
const int CMsgKeyDown::kModifiersFieldNumber;
const int CMsgKeyDown::kIsSystemKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgKeyDown::CMsgKeyDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgKeyDown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgKeyDown)
}
CMsgKeyDown::CMsgKeyDown(const CMsgKeyDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_system_key_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(is_system_key_));
  // @@protoc_insertion_point(copy_constructor:CMsgKeyDown)
}

void CMsgKeyDown::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_system_key_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(is_system_key_));
}

CMsgKeyDown::~CMsgKeyDown() {
  // @@protoc_insertion_point(destructor:CMsgKeyDown)
  SharedDtor();
}

void CMsgKeyDown::SharedDtor() {
}

void CMsgKeyDown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgKeyDown::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgKeyDown& CMsgKeyDown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgKeyDown.base);
  return *internal_default_instance();
}


void CMsgKeyDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgKeyDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_system_key_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(is_system_key_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgKeyDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgKeyDown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 keyCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_keycode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_system_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_system_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_system_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgKeyDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgKeyDown)
  return false;
#undef DO_
}

void CMsgKeyDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgKeyDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 keyCode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->keycode(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  // optional bool is_system_key = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_system_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgKeyDown)
}

::google::protobuf::uint8* CMsgKeyDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgKeyDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 keyCode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->keycode(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  // optional bool is_system_key = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_system_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgKeyDown)
  return target;
}

size_t CMsgKeyDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgKeyDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 keyCode = 2;
    if (has_keycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->keycode());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

    // optional bool is_system_key = 4;
    if (has_is_system_key()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgKeyDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgKeyDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgKeyDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgKeyDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgKeyDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgKeyDown)
    MergeFrom(*source);
  }
}

void CMsgKeyDown::MergeFrom(const CMsgKeyDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgKeyDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      keycode_ = from.keycode_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_system_key_ = from.is_system_key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgKeyDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgKeyDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgKeyDown::CopyFrom(const CMsgKeyDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgKeyDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgKeyDown::IsInitialized() const {
  return true;
}

void CMsgKeyDown::Swap(CMsgKeyDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgKeyDown::InternalSwap(CMsgKeyDown* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(keycode_, other->keycode_);
  swap(modifiers_, other->modifiers_);
  swap(is_system_key_, other->is_system_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgKeyDown::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgKeyChar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgKeyChar::kBrowserHandleFieldNumber;
const int CMsgKeyChar::kUnicharFieldNumber;
const int CMsgKeyChar::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgKeyChar::CMsgKeyChar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgKeyChar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgKeyChar)
}
CMsgKeyChar::CMsgKeyChar(const CMsgKeyChar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgKeyChar)
}

void CMsgKeyChar::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgKeyChar::~CMsgKeyChar() {
  // @@protoc_insertion_point(destructor:CMsgKeyChar)
  SharedDtor();
}

void CMsgKeyChar::SharedDtor() {
}

void CMsgKeyChar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgKeyChar::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgKeyChar& CMsgKeyChar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgKeyChar.base);
  return *internal_default_instance();
}


void CMsgKeyChar::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgKeyChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgKeyChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgKeyChar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 unichar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_unichar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unichar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgKeyChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgKeyChar)
  return false;
#undef DO_
}

void CMsgKeyChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgKeyChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 unichar = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unichar(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgKeyChar)
}

::google::protobuf::uint8* CMsgKeyChar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgKeyChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 unichar = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unichar(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgKeyChar)
  return target;
}

size_t CMsgKeyChar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgKeyChar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 unichar = 2;
    if (has_unichar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unichar());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgKeyChar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgKeyChar)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgKeyChar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgKeyChar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgKeyChar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgKeyChar)
    MergeFrom(*source);
  }
}

void CMsgKeyChar::MergeFrom(const CMsgKeyChar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgKeyChar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      unichar_ = from.unichar_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgKeyChar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgKeyChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgKeyChar::CopyFrom(const CMsgKeyChar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgKeyChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgKeyChar::IsInitialized() const {
  return true;
}

void CMsgKeyChar::Swap(CMsgKeyChar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgKeyChar::InternalSwap(CMsgKeyChar* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(unichar_, other->unichar_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgKeyChar::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseDown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseDown::kBrowserHandleFieldNumber;
const int CMsgMouseDown::kMouseButtonFieldNumber;
const int CMsgMouseDown::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseDown::CMsgMouseDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseDown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseDown)
}
CMsgMouseDown::CMsgMouseDown(const CMsgMouseDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgMouseDown)
}

void CMsgMouseDown::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgMouseDown::~CMsgMouseDown() {
  // @@protoc_insertion_point(destructor:CMsgMouseDown)
  SharedDtor();
}

void CMsgMouseDown::SharedDtor() {
}

void CMsgMouseDown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseDown::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseDown& CMsgMouseDown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseDown.base);
  return *internal_default_instance();
}


void CMsgMouseDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseDown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mouse_button = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mouse_button();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mouse_button_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseDown)
  return false;
#undef DO_
}

void CMsgMouseDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mouse_button(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseDown)
}

::google::protobuf::uint8* CMsgMouseDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mouse_button(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseDown)
  return target;
}

size_t CMsgMouseDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 mouse_button = 2;
    if (has_mouse_button()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mouse_button());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseDown)
    MergeFrom(*source);
  }
}

void CMsgMouseDown::MergeFrom(const CMsgMouseDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      mouse_button_ = from.mouse_button_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgMouseDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseDown::CopyFrom(const CMsgMouseDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseDown::IsInitialized() const {
  return true;
}

void CMsgMouseDown::Swap(CMsgMouseDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseDown::InternalSwap(CMsgMouseDown* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(mouse_button_, other->mouse_button_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseDown::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseUp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseUp::kBrowserHandleFieldNumber;
const int CMsgMouseUp::kMouseButtonFieldNumber;
const int CMsgMouseUp::kModifiersFieldNumber;
const int CMsgMouseUp::kIsOffPanelFieldNumber;
const int CMsgMouseUp::kXFieldNumber;
const int CMsgMouseUp::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseUp::CMsgMouseUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseUp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseUp)
}
CMsgMouseUp::CMsgMouseUp(const CMsgMouseUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgMouseUp)
}

void CMsgMouseUp::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
}

CMsgMouseUp::~CMsgMouseUp() {
  // @@protoc_insertion_point(destructor:CMsgMouseUp)
  SharedDtor();
}

void CMsgMouseUp::SharedDtor() {
}

void CMsgMouseUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseUp::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseUp& CMsgMouseUp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseUp.base);
  return *internal_default_instance();
}


void CMsgMouseUp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseUp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mouse_button = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mouse_button();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mouse_button_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_off_panel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_off_panel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_off_panel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseUp)
  return false;
#undef DO_
}

void CMsgMouseUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mouse_button(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  // optional bool is_off_panel = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_off_panel(), output);
  }

  // optional int32 x = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->x(), output);
  }

  // optional int32 y = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseUp)
}

::google::protobuf::uint8* CMsgMouseUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mouse_button(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  // optional bool is_off_panel = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_off_panel(), target);
  }

  // optional int32 x = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->x(), target);
  }

  // optional int32 y = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseUp)
  return target;
}

size_t CMsgMouseUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 mouse_button = 2;
    if (has_mouse_button()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mouse_button());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

    // optional bool is_off_panel = 4;
    if (has_is_off_panel()) {
      total_size += 1 + 1;
    }

    // optional int32 x = 5;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 6;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseUp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseUp)
    MergeFrom(*source);
  }
}

void CMsgMouseUp::MergeFrom(const CMsgMouseUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      mouse_button_ = from.mouse_button_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_off_panel_ = from.is_off_panel_;
    }
    if (cached_has_bits & 0x00000010u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000020u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgMouseUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseUp::CopyFrom(const CMsgMouseUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseUp::IsInitialized() const {
  return true;
}

void CMsgMouseUp::Swap(CMsgMouseUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseUp::InternalSwap(CMsgMouseUp* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(mouse_button_, other->mouse_button_);
  swap(modifiers_, other->modifiers_);
  swap(is_off_panel_, other->is_off_panel_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseUp::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseDblClick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseDblClick::kBrowserHandleFieldNumber;
const int CMsgMouseDblClick::kMouseButtonFieldNumber;
const int CMsgMouseDblClick::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseDblClick::CMsgMouseDblClick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseDblClick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseDblClick)
}
CMsgMouseDblClick::CMsgMouseDblClick(const CMsgMouseDblClick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgMouseDblClick)
}

void CMsgMouseDblClick::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgMouseDblClick::~CMsgMouseDblClick() {
  // @@protoc_insertion_point(destructor:CMsgMouseDblClick)
  SharedDtor();
}

void CMsgMouseDblClick::SharedDtor() {
}

void CMsgMouseDblClick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseDblClick::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseDblClick& CMsgMouseDblClick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseDblClick.base);
  return *internal_default_instance();
}


void CMsgMouseDblClick::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseDblClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseDblClick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseDblClick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mouse_button = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mouse_button();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mouse_button_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseDblClick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseDblClick)
  return false;
#undef DO_
}

void CMsgMouseDblClick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseDblClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mouse_button(), output);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseDblClick)
}

::google::protobuf::uint8* CMsgMouseDblClick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseDblClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 mouse_button = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mouse_button(), target);
  }

  // optional uint32 modifiers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseDblClick)
  return target;
}

size_t CMsgMouseDblClick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseDblClick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 mouse_button = 2;
    if (has_mouse_button()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mouse_button());
    }

    // optional uint32 modifiers = 3;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseDblClick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseDblClick)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseDblClick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseDblClick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseDblClick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseDblClick)
    MergeFrom(*source);
  }
}

void CMsgMouseDblClick::MergeFrom(const CMsgMouseDblClick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseDblClick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      mouse_button_ = from.mouse_button_;
    }
    if (cached_has_bits & 0x00000004u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgMouseDblClick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseDblClick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseDblClick::CopyFrom(const CMsgMouseDblClick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseDblClick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseDblClick::IsInitialized() const {
  return true;
}

void CMsgMouseDblClick::Swap(CMsgMouseDblClick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseDblClick::InternalSwap(CMsgMouseDblClick* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(mouse_button_, other->mouse_button_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseDblClick::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseWheel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseWheel::kBrowserHandleFieldNumber;
const int CMsgMouseWheel::kDeltaxFieldNumber;
const int CMsgMouseWheel::kDeltayFieldNumber;
const int CMsgMouseWheel::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseWheel::CMsgMouseWheel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseWheel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseWheel)
}
CMsgMouseWheel::CMsgMouseWheel(const CMsgMouseWheel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgMouseWheel)
}

void CMsgMouseWheel::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgMouseWheel::~CMsgMouseWheel() {
  // @@protoc_insertion_point(destructor:CMsgMouseWheel)
  SharedDtor();
}

void CMsgMouseWheel::SharedDtor() {
}

void CMsgMouseWheel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseWheel::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseWheel& CMsgMouseWheel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseWheel.base);
  return *internal_default_instance();
}


void CMsgMouseWheel::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseWheel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseWheel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 deltax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_deltax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 deltay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_deltay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseWheel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseWheel)
  return false;
#undef DO_
}

void CMsgMouseWheel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 deltax = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->deltax(), output);
  }

  // optional int32 deltay = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->deltay(), output);
  }

  // optional uint32 modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseWheel)
}

::google::protobuf::uint8* CMsgMouseWheel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 deltax = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->deltax(), target);
  }

  // optional int32 deltay = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->deltay(), target);
  }

  // optional uint32 modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseWheel)
  return target;
}

size_t CMsgMouseWheel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseWheel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 deltax = 2;
    if (has_deltax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deltax());
    }

    // optional int32 deltay = 3;
    if (has_deltay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deltay());
    }

    // optional uint32 modifiers = 4;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseWheel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseWheel)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseWheel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseWheel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseWheel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseWheel)
    MergeFrom(*source);
  }
}

void CMsgMouseWheel::MergeFrom(const CMsgMouseWheel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseWheel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      deltax_ = from.deltax_;
    }
    if (cached_has_bits & 0x00000004u) {
      deltay_ = from.deltay_;
    }
    if (cached_has_bits & 0x00000008u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgMouseWheel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseWheel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseWheel::CopyFrom(const CMsgMouseWheel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseWheel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseWheel::IsInitialized() const {
  return true;
}

void CMsgMouseWheel::Swap(CMsgMouseWheel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseWheel::InternalSwap(CMsgMouseWheel* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(deltax_, other->deltax_);
  swap(deltay_, other->deltay_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseWheel::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseMove::kBrowserHandleFieldNumber;
const int CMsgMouseMove::kXFieldNumber;
const int CMsgMouseMove::kYFieldNumber;
const int CMsgMouseMove::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseMove::CMsgMouseMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseMove)
}
CMsgMouseMove::CMsgMouseMove(const CMsgMouseMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifiers_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  // @@protoc_insertion_point(copy_constructor:CMsgMouseMove)
}

void CMsgMouseMove::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifiers_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
}

CMsgMouseMove::~CMsgMouseMove() {
  // @@protoc_insertion_point(destructor:CMsgMouseMove)
  SharedDtor();
}

void CMsgMouseMove::SharedDtor() {
}

void CMsgMouseMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseMove::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseMove& CMsgMouseMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseMove.base);
  return *internal_default_instance();
}


void CMsgMouseMove::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modifiers_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 modifiers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseMove)
  return false;
#undef DO_
}

void CMsgMouseMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional uint32 modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseMove)
}

::google::protobuf::uint8* CMsgMouseMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional uint32 modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseMove)
  return target;
}

size_t CMsgMouseMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional uint32 modifiers = 4;
    if (has_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseMove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseMove)
    MergeFrom(*source);
  }
}

void CMsgMouseMove::MergeFrom(const CMsgMouseMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      modifiers_ = from.modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgMouseMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseMove::CopyFrom(const CMsgMouseMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseMove::IsInitialized() const {
  return true;
}

void CMsgMouseMove::Swap(CMsgMouseMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseMove::InternalSwap(CMsgMouseMove* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(modifiers_, other->modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseMove::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMouseLeave::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMouseLeave::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMouseLeave::CMsgMouseLeave()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMouseLeave.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMouseLeave)
}
CMsgMouseLeave::CMsgMouseLeave(const CMsgMouseLeave& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgMouseLeave)
}

void CMsgMouseLeave::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgMouseLeave::~CMsgMouseLeave() {
  // @@protoc_insertion_point(destructor:CMsgMouseLeave)
  SharedDtor();
}

void CMsgMouseLeave::SharedDtor() {
}

void CMsgMouseLeave::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMouseLeave::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMouseLeave& CMsgMouseLeave::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMouseLeave.base);
  return *internal_default_instance();
}


void CMsgMouseLeave::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMouseLeave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMouseLeave::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMouseLeave)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMouseLeave)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMouseLeave)
  return false;
#undef DO_
}

void CMsgMouseLeave::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMouseLeave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMouseLeave)
}

::google::protobuf::uint8* CMsgMouseLeave::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMouseLeave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMouseLeave)
  return target;
}

size_t CMsgMouseLeave::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMouseLeave)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMouseLeave::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMouseLeave)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMouseLeave* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMouseLeave>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMouseLeave)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMouseLeave)
    MergeFrom(*source);
  }
}

void CMsgMouseLeave::MergeFrom(const CMsgMouseLeave& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMouseLeave)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgMouseLeave::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMouseLeave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMouseLeave::CopyFrom(const CMsgMouseLeave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMouseLeave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMouseLeave::IsInitialized() const {
  return true;
}

void CMsgMouseLeave::Swap(CMsgMouseLeave* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMouseLeave::InternalSwap(CMsgMouseLeave* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMouseLeave::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserCreate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserCreate::kRequestIdFieldNumber;
const int CMsgBrowserCreate::kUseragentFieldNumber;
const int CMsgBrowserCreate::kUserCssFieldNumber;
const int CMsgBrowserCreate::kNativeDropdownsFieldNumber;
const int CMsgBrowserCreate::kDpiScalingFieldNumber;
const int CMsgBrowserCreate::kOffscreenFieldNumber;
const int CMsgBrowserCreate::kInitialWidthFieldNumber;
const int CMsgBrowserCreate::kInitialHeightFieldNumber;
const int CMsgBrowserCreate::kWindowIconFieldNumber;
const int CMsgBrowserCreate::kBorderlessFieldNumber;
const int CMsgBrowserCreate::kVroverlayKeyFieldNumber;
const int CMsgBrowserCreate::kBrowserTypeFieldNumber;
const int CMsgBrowserCreate::kInitialTopFieldNumber;
const int CMsgBrowserCreate::kInitialLeftFieldNumber;
const int CMsgBrowserCreate::kOnlyAllowTrustedPopupsFieldNumber;
const int CMsgBrowserCreate::kInitialUrlFieldNumber;
const int CMsgBrowserCreate::kHwndParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserCreate::CMsgBrowserCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserCreate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserCreate)
}
CMsgBrowserCreate::CMsgBrowserCreate(const CMsgBrowserCreate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  useragent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_useragent()) {
    useragent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useragent_);
  }
  user_css_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_css()) {
    user_css_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_css_);
  }
  window_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_window_icon()) {
    window_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.window_icon_);
  }
  vroverlay_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vroverlay_key()) {
    vroverlay_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vroverlay_key_);
  }
  initial_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_initial_url()) {
    initial_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_url_);
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&initial_top_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(initial_top_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserCreate)
}

void CMsgBrowserCreate::SharedCtor() {
  useragent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_css_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  window_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vroverlay_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hwnd_parent_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(hwnd_parent_));
  initial_left_ = (~0x7fffffff);
  offscreen_ = true;
  initial_top_ = (~0x7fffffff);
}

CMsgBrowserCreate::~CMsgBrowserCreate() {
  // @@protoc_insertion_point(destructor:CMsgBrowserCreate)
  SharedDtor();
}

void CMsgBrowserCreate::SharedDtor() {
  useragent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_css_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  window_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vroverlay_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBrowserCreate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserCreate::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserCreate& CMsgBrowserCreate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserCreate.base);
  return *internal_default_instance();
}


void CMsgBrowserCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      useragent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      user_css_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      window_icon_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      vroverlay_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      initial_url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&initial_width_) -
        reinterpret_cast<char*>(&request_id_)) + sizeof(initial_width_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&initial_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hwnd_parent_) -
        reinterpret_cast<char*>(&initial_height_)) + sizeof(hwnd_parent_));
    initial_left_ = (~0x7fffffff);
    offscreen_ = true;
  }
  initial_top_ = (~0x7fffffff);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserCreate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string useragent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useragent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->useragent().data(), static_cast<int>(this->useragent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserCreate.useragent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_css = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_css()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_css().data(), static_cast<int>(this->user_css().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserCreate.user_css");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool native_dropdowns = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_native_dropdowns();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &native_dropdowns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float dpi_scaling = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_dpi_scaling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dpi_scaling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool offscreen = 8 [default = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_offscreen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &offscreen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_width = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_initial_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_height = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_initial_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string window_icon = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_window_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->window_icon().data(), static_cast<int>(this->window_icon().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserCreate.window_icon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool borderless = 12 [default = false];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_borderless();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &borderless_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vroverlay_key = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vroverlay_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vroverlay_key().data(), static_cast<int>(this->vroverlay_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserCreate.vroverlay_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 browser_type = 14 [default = 0];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_browser_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 initial_top = 15 [default = -2147483648];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_initial_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 initial_left = 16 [default = -2147483648];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_initial_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initial_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool only_allow_trusted_popups = 17 [default = false];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_only_allow_trusted_popups();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_allow_trusted_popups_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string initial_url = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initial_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initial_url().data(), static_cast<int>(this->initial_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserCreate.initial_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hwnd_parent = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {
          set_has_hwnd_parent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hwnd_parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserCreate)
  return false;
#undef DO_
}

void CMsgBrowserCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_id(), output);
  }

  // optional string useragent = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useragent().data(), static_cast<int>(this->useragent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.useragent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->useragent(), output);
  }

  // optional string user_css = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_css().data(), static_cast<int>(this->user_css().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.user_css");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_css(), output);
  }

  // optional bool native_dropdowns = 6;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->native_dropdowns(), output);
  }

  // optional float dpi_scaling = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->dpi_scaling(), output);
  }

  // optional bool offscreen = 8 [default = true];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->offscreen(), output);
  }

  // optional uint32 initial_width = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->initial_width(), output);
  }

  // optional uint32 initial_height = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->initial_height(), output);
  }

  // optional string window_icon = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->window_icon().data(), static_cast<int>(this->window_icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.window_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->window_icon(), output);
  }

  // optional bool borderless = 12 [default = false];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->borderless(), output);
  }

  // optional string vroverlay_key = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vroverlay_key().data(), static_cast<int>(this->vroverlay_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.vroverlay_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->vroverlay_key(), output);
  }

  // optional uint32 browser_type = 14 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->browser_type(), output);
  }

  // optional int32 initial_top = 15 [default = -2147483648];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->initial_top(), output);
  }

  // optional int32 initial_left = 16 [default = -2147483648];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->initial_left(), output);
  }

  // optional bool only_allow_trusted_popups = 17 [default = false];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->only_allow_trusted_popups(), output);
  }

  // optional string initial_url = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initial_url().data(), static_cast<int>(this->initial_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.initial_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->initial_url(), output);
  }

  // optional fixed64 hwnd_parent = 19;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(19, this->hwnd_parent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserCreate)
}

::google::protobuf::uint8* CMsgBrowserCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_id(), target);
  }

  // optional string useragent = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useragent().data(), static_cast<int>(this->useragent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.useragent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->useragent(), target);
  }

  // optional string user_css = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_css().data(), static_cast<int>(this->user_css().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.user_css");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_css(), target);
  }

  // optional bool native_dropdowns = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->native_dropdowns(), target);
  }

  // optional float dpi_scaling = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->dpi_scaling(), target);
  }

  // optional bool offscreen = 8 [default = true];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->offscreen(), target);
  }

  // optional uint32 initial_width = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->initial_width(), target);
  }

  // optional uint32 initial_height = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->initial_height(), target);
  }

  // optional string window_icon = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->window_icon().data(), static_cast<int>(this->window_icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.window_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->window_icon(), target);
  }

  // optional bool borderless = 12 [default = false];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->borderless(), target);
  }

  // optional string vroverlay_key = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vroverlay_key().data(), static_cast<int>(this->vroverlay_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.vroverlay_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->vroverlay_key(), target);
  }

  // optional uint32 browser_type = 14 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->browser_type(), target);
  }

  // optional int32 initial_top = 15 [default = -2147483648];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->initial_top(), target);
  }

  // optional int32 initial_left = 16 [default = -2147483648];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->initial_left(), target);
  }

  // optional bool only_allow_trusted_popups = 17 [default = false];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->only_allow_trusted_popups(), target);
  }

  // optional string initial_url = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initial_url().data(), static_cast<int>(this->initial_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserCreate.initial_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->initial_url(), target);
  }

  // optional fixed64 hwnd_parent = 19;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(19, this->hwnd_parent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserCreate)
  return target;
}

size_t CMsgBrowserCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserCreate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string useragent = 3;
    if (has_useragent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->useragent());
    }

    // optional string user_css = 5;
    if (has_user_css()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_css());
    }

    // optional string window_icon = 11;
    if (has_window_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->window_icon());
    }

    // optional string vroverlay_key = 13;
    if (has_vroverlay_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vroverlay_key());
    }

    // optional string initial_url = 18;
    if (has_initial_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initial_url());
    }

    // optional uint32 request_id = 1;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_id());
    }

    // optional float dpi_scaling = 7;
    if (has_dpi_scaling()) {
      total_size += 1 + 4;
    }

    // optional uint32 initial_width = 9 [default = 0];
    if (has_initial_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_width());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 initial_height = 10 [default = 0];
    if (has_initial_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_height());
    }

    // optional bool native_dropdowns = 6;
    if (has_native_dropdowns()) {
      total_size += 1 + 1;
    }

    // optional bool borderless = 12 [default = false];
    if (has_borderless()) {
      total_size += 1 + 1;
    }

    // optional bool only_allow_trusted_popups = 17 [default = false];
    if (has_only_allow_trusted_popups()) {
      total_size += 2 + 1;
    }

    // optional uint32 browser_type = 14 [default = 0];
    if (has_browser_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_type());
    }

    // optional fixed64 hwnd_parent = 19;
    if (has_hwnd_parent()) {
      total_size += 2 + 8;
    }

    // optional int32 initial_left = 16 [default = -2147483648];
    if (has_initial_left()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->initial_left());
    }

    // optional bool offscreen = 8 [default = true];
    if (has_offscreen()) {
      total_size += 1 + 1;
    }

  }
  // optional int32 initial_top = 15 [default = -2147483648];
  if (has_initial_top()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->initial_top());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserCreate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserCreate)
    MergeFrom(*source);
  }
}

void CMsgBrowserCreate::MergeFrom(const CMsgBrowserCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserCreate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_useragent();
      useragent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useragent_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_user_css();
      user_css_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_css_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_window_icon();
      window_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.window_icon_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_vroverlay_key();
      vroverlay_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vroverlay_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_initial_url();
      initial_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_url_);
    }
    if (cached_has_bits & 0x00000020u) {
      request_id_ = from.request_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      dpi_scaling_ = from.dpi_scaling_;
    }
    if (cached_has_bits & 0x00000080u) {
      initial_width_ = from.initial_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      initial_height_ = from.initial_height_;
    }
    if (cached_has_bits & 0x00000200u) {
      native_dropdowns_ = from.native_dropdowns_;
    }
    if (cached_has_bits & 0x00000400u) {
      borderless_ = from.borderless_;
    }
    if (cached_has_bits & 0x00000800u) {
      only_allow_trusted_popups_ = from.only_allow_trusted_popups_;
    }
    if (cached_has_bits & 0x00001000u) {
      browser_type_ = from.browser_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      hwnd_parent_ = from.hwnd_parent_;
    }
    if (cached_has_bits & 0x00004000u) {
      initial_left_ = from.initial_left_;
    }
    if (cached_has_bits & 0x00008000u) {
      offscreen_ = from.offscreen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_initial_top(from.initial_top());
  }
}

void CMsgBrowserCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserCreate::CopyFrom(const CMsgBrowserCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserCreate::IsInitialized() const {
  return true;
}

void CMsgBrowserCreate::Swap(CMsgBrowserCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserCreate::InternalSwap(CMsgBrowserCreate* other) {
  using std::swap;
  useragent_.Swap(&other->useragent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_css_.Swap(&other->user_css_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  window_icon_.Swap(&other->window_icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vroverlay_key_.Swap(&other->vroverlay_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  initial_url_.Swap(&other->initial_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_id_, other->request_id_);
  swap(dpi_scaling_, other->dpi_scaling_);
  swap(initial_width_, other->initial_width_);
  swap(initial_height_, other->initial_height_);
  swap(native_dropdowns_, other->native_dropdowns_);
  swap(borderless_, other->borderless_);
  swap(only_allow_trusted_popups_, other->only_allow_trusted_popups_);
  swap(browser_type_, other->browser_type_);
  swap(hwnd_parent_, other->hwnd_parent_);
  swap(initial_left_, other->initial_left_);
  swap(offscreen_, other->offscreen_);
  swap(initial_top_, other->initial_top_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserCreate::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserCreateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserCreateResponse::kBrowserHandleFieldNumber;
const int CMsgBrowserCreateResponse::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserCreateResponse::CMsgBrowserCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserCreateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserCreateResponse)
}
CMsgBrowserCreateResponse::CMsgBrowserCreateResponse(const CMsgBrowserCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(request_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserCreateResponse)
}

void CMsgBrowserCreateResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(request_id_));
}

CMsgBrowserCreateResponse::~CMsgBrowserCreateResponse() {
  // @@protoc_insertion_point(destructor:CMsgBrowserCreateResponse)
  SharedDtor();
}

void CMsgBrowserCreateResponse::SharedDtor() {
}

void CMsgBrowserCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserCreateResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserCreateResponse& CMsgBrowserCreateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserCreateResponse.base);
  return *internal_default_instance();
}


void CMsgBrowserCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&request_id_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserCreateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 request_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserCreateResponse)
  return false;
#undef DO_
}

void CMsgBrowserCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->request_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserCreateResponse)
}

::google::protobuf::uint8* CMsgBrowserCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->request_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserCreateResponse)
  return target;
}

size_t CMsgBrowserCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserCreateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 request_id = 2;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserCreateResponse)
    MergeFrom(*source);
  }
}

void CMsgBrowserCreateResponse::MergeFrom(const CMsgBrowserCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_ = from.request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserCreateResponse::CopyFrom(const CMsgBrowserCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserCreateResponse::IsInitialized() const {
  return true;
}

void CMsgBrowserCreateResponse::Swap(CMsgBrowserCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserCreateResponse::InternalSwap(CMsgBrowserCreateResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(request_id_, other->request_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserCreateResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserRemove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserRemove::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserRemove::CMsgBrowserRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserRemove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserRemove)
}
CMsgBrowserRemove::CMsgBrowserRemove(const CMsgBrowserRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserRemove)
}

void CMsgBrowserRemove::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgBrowserRemove::~CMsgBrowserRemove() {
  // @@protoc_insertion_point(destructor:CMsgBrowserRemove)
  SharedDtor();
}

void CMsgBrowserRemove::SharedDtor() {
}

void CMsgBrowserRemove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserRemove::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserRemove& CMsgBrowserRemove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserRemove.base);
  return *internal_default_instance();
}


void CMsgBrowserRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserRemove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserRemove)
  return false;
#undef DO_
}

void CMsgBrowserRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserRemove)
}

::google::protobuf::uint8* CMsgBrowserRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserRemove)
  return target;
}

size_t CMsgBrowserRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserRemove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserRemove)
    MergeFrom(*source);
  }
}

void CMsgBrowserRemove::MergeFrom(const CMsgBrowserRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgBrowserRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserRemove::CopyFrom(const CMsgBrowserRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserRemove::IsInitialized() const {
  return true;
}

void CMsgBrowserRemove::Swap(CMsgBrowserRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserRemove::InternalSwap(CMsgBrowserRemove* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserRemove::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetLocalFileRequestMapping_AdditionalRoute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetLocalFileRequestMapping_AdditionalRoute::kRelativeUrlFieldNumber;
const int CMsgSetLocalFileRequestMapping_AdditionalRoute::kLocalPathFieldNumber;
const int CMsgSetLocalFileRequestMapping_AdditionalRoute::kAllowedExtensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetLocalFileRequestMapping_AdditionalRoute::CMsgSetLocalFileRequestMapping_AdditionalRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetLocalFileRequestMapping.AdditionalRoute)
}
CMsgSetLocalFileRequestMapping_AdditionalRoute::CMsgSetLocalFileRequestMapping_AdditionalRoute(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relative_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_relative_url()) {
    relative_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_url_);
  }
  local_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_local_path()) {
    local_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_path_);
  }
  allowed_extensions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_allowed_extensions()) {
    allowed_extensions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allowed_extensions_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSetLocalFileRequestMapping.AdditionalRoute)
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::SharedCtor() {
  relative_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowed_extensions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgSetLocalFileRequestMapping_AdditionalRoute::~CMsgSetLocalFileRequestMapping_AdditionalRoute() {
  // @@protoc_insertion_point(destructor:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  SharedDtor();
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::SharedDtor() {
  relative_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowed_extensions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetLocalFileRequestMapping_AdditionalRoute::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetLocalFileRequestMapping_AdditionalRoute& CMsgSetLocalFileRequestMapping_AdditionalRoute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetLocalFileRequestMapping_AdditionalRoute.base);
  return *internal_default_instance();
}


void CMsgSetLocalFileRequestMapping_AdditionalRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      relative_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      local_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      allowed_extensions_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetLocalFileRequestMapping_AdditionalRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string relative_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relative_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->relative_url().data(), static_cast<int>(this->relative_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string local_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->local_path().data(), static_cast<int>(this->local_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string allowed_extensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allowed_extensions()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->allowed_extensions().data(), static_cast<int>(this->allowed_extensions().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  return false;
#undef DO_
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string relative_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->relative_url().data(), static_cast<int>(this->relative_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->relative_url(), output);
  }

  // optional string local_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_path().data(), static_cast<int>(this->local_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->local_path(), output);
  }

  // optional string allowed_extensions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->allowed_extensions().data(), static_cast<int>(this->allowed_extensions().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->allowed_extensions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetLocalFileRequestMapping.AdditionalRoute)
}

::google::protobuf::uint8* CMsgSetLocalFileRequestMapping_AdditionalRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string relative_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->relative_url().data(), static_cast<int>(this->relative_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->relative_url(), target);
  }

  // optional string local_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_path().data(), static_cast<int>(this->local_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->local_path(), target);
  }

  // optional string allowed_extensions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->allowed_extensions().data(), static_cast<int>(this->allowed_extensions().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->allowed_extensions(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  return target;
}

size_t CMsgSetLocalFileRequestMapping_AdditionalRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string relative_url = 1;
    if (has_relative_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->relative_url());
    }

    // optional string local_path = 2;
    if (has_local_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->local_path());
    }

    // optional string allowed_extensions = 3;
    if (has_allowed_extensions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->allowed_extensions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetLocalFileRequestMapping_AdditionalRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetLocalFileRequestMapping_AdditionalRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetLocalFileRequestMapping.AdditionalRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetLocalFileRequestMapping.AdditionalRoute)
    MergeFrom(*source);
  }
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::MergeFrom(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_relative_url();
      relative_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relative_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_local_path();
      local_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_allowed_extensions();
      allowed_extensions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allowed_extensions_);
    }
  }
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::CopyFrom(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetLocalFileRequestMapping.AdditionalRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetLocalFileRequestMapping_AdditionalRoute::IsInitialized() const {
  return true;
}

void CMsgSetLocalFileRequestMapping_AdditionalRoute::Swap(CMsgSetLocalFileRequestMapping_AdditionalRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetLocalFileRequestMapping_AdditionalRoute::InternalSwap(CMsgSetLocalFileRequestMapping_AdditionalRoute* other) {
  using std::swap;
  relative_url_.Swap(&other->relative_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_path_.Swap(&other->local_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  allowed_extensions_.Swap(&other->allowed_extensions_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetLocalFileRequestMapping_AdditionalRoute::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetLocalFileRequestMapping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetLocalFileRequestMapping::kBrowserHandleFieldNumber;
const int CMsgSetLocalFileRequestMapping::kRequestUrlFieldNumber;
const int CMsgSetLocalFileRequestMapping::kDefaultLocalPathFieldNumber;
const int CMsgSetLocalFileRequestMapping::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetLocalFileRequestMapping::CMsgSetLocalFileRequestMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetLocalFileRequestMapping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetLocalFileRequestMapping)
}
CMsgSetLocalFileRequestMapping::CMsgSetLocalFileRequestMapping(const CMsgSetLocalFileRequestMapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_request_url()) {
    request_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_url_);
  }
  default_local_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_local_path()) {
    default_local_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_local_path_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgSetLocalFileRequestMapping)
}

void CMsgSetLocalFileRequestMapping::SharedCtor() {
  request_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_local_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgSetLocalFileRequestMapping::~CMsgSetLocalFileRequestMapping() {
  // @@protoc_insertion_point(destructor:CMsgSetLocalFileRequestMapping)
  SharedDtor();
}

void CMsgSetLocalFileRequestMapping::SharedDtor() {
  request_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_local_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetLocalFileRequestMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetLocalFileRequestMapping::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetLocalFileRequestMapping& CMsgSetLocalFileRequestMapping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetLocalFileRequestMapping.base);
  return *internal_default_instance();
}


void CMsgSetLocalFileRequestMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetLocalFileRequestMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      request_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      default_local_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetLocalFileRequestMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetLocalFileRequestMapping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string request_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_url().data(), static_cast<int>(this->request_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetLocalFileRequestMapping.request_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_local_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_local_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_local_path().data(), static_cast<int>(this->default_local_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetLocalFileRequestMapping.default_local_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetLocalFileRequestMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetLocalFileRequestMapping)
  return false;
#undef DO_
}

void CMsgSetLocalFileRequestMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetLocalFileRequestMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string request_url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_url().data(), static_cast<int>(this->request_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.request_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_url(), output);
  }

  // optional string default_local_path = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_local_path().data(), static_cast<int>(this->default_local_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.default_local_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->default_local_path(), output);
  }

  // repeated .CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->routes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetLocalFileRequestMapping)
}

::google::protobuf::uint8* CMsgSetLocalFileRequestMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetLocalFileRequestMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string request_url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_url().data(), static_cast<int>(this->request_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.request_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_url(), target);
  }

  // optional string default_local_path = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_local_path().data(), static_cast<int>(this->default_local_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetLocalFileRequestMapping.default_local_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->default_local_path(), target);
  }

  // repeated .CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->routes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetLocalFileRequestMapping)
  return target;
}

size_t CMsgSetLocalFileRequestMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetLocalFileRequestMapping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string request_url = 2;
    if (has_request_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request_url());
    }

    // optional string default_local_path = 3;
    if (has_default_local_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_local_path());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetLocalFileRequestMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetLocalFileRequestMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetLocalFileRequestMapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetLocalFileRequestMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetLocalFileRequestMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetLocalFileRequestMapping)
    MergeFrom(*source);
  }
}

void CMsgSetLocalFileRequestMapping::MergeFrom(const CMsgSetLocalFileRequestMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetLocalFileRequestMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_request_url();
      request_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_default_local_path();
      default_local_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_local_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetLocalFileRequestMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetLocalFileRequestMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetLocalFileRequestMapping::CopyFrom(const CMsgSetLocalFileRequestMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetLocalFileRequestMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetLocalFileRequestMapping::IsInitialized() const {
  return true;
}

void CMsgSetLocalFileRequestMapping::Swap(CMsgSetLocalFileRequestMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetLocalFileRequestMapping::InternalSwap(CMsgSetLocalFileRequestMapping* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  request_url_.Swap(&other->request_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_local_path_.Swap(&other->default_local_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetLocalFileRequestMapping::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserErrorStrings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserErrorStrings::kBrowserHandleFieldNumber;
const int CMsgBrowserErrorStrings::kTitleFieldNumber;
const int CMsgBrowserErrorStrings::kHeaderFieldNumber;
const int CMsgBrowserErrorStrings::kCacheMissFieldNumber;
const int CMsgBrowserErrorStrings::kBadUrlFieldNumber;
const int CMsgBrowserErrorStrings::kConnectionProblemFieldNumber;
const int CMsgBrowserErrorStrings::kProxyProblemFieldNumber;
const int CMsgBrowserErrorStrings::kUnknownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserErrorStrings::CMsgBrowserErrorStrings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserErrorStrings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserErrorStrings)
}
CMsgBrowserErrorStrings::CMsgBrowserErrorStrings(const CMsgBrowserErrorStrings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header()) {
    header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_);
  }
  cache_miss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cache_miss()) {
    cache_miss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_miss_);
  }
  bad_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bad_url()) {
    bad_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bad_url_);
  }
  connection_problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_connection_problem()) {
    connection_problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_problem_);
  }
  proxy_problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_proxy_problem()) {
    proxy_problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxy_problem_);
  }
  unknown_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unknown()) {
    unknown_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unknown_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserErrorStrings)
}

void CMsgBrowserErrorStrings::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_miss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bad_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connection_problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unknown_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgBrowserErrorStrings::~CMsgBrowserErrorStrings() {
  // @@protoc_insertion_point(destructor:CMsgBrowserErrorStrings)
  SharedDtor();
}

void CMsgBrowserErrorStrings::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cache_miss_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bad_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connection_problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unknown_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBrowserErrorStrings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserErrorStrings::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserErrorStrings& CMsgBrowserErrorStrings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserErrorStrings.base);
  return *internal_default_instance();
}


void CMsgBrowserErrorStrings::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserErrorStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      header_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      cache_miss_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      bad_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      connection_problem_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      proxy_problem_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      unknown_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserErrorStrings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserErrorStrings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string header = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header().data(), static_cast<int>(this->header().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.header");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cache_miss = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cache_miss()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cache_miss().data(), static_cast<int>(this->cache_miss().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.cache_miss");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bad_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bad_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bad_url().data(), static_cast<int>(this->bad_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.bad_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string connection_problem = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connection_problem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->connection_problem().data(), static_cast<int>(this->connection_problem().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.connection_problem");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string proxy_problem = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxy_problem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->proxy_problem().data(), static_cast<int>(this->proxy_problem().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.proxy_problem");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string unknown = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unknown()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unknown().data(), static_cast<int>(this->unknown().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserErrorStrings.unknown");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserErrorStrings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserErrorStrings)
  return false;
#undef DO_
}

void CMsgBrowserErrorStrings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserErrorStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string header = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->header(), output);
  }

  // optional string cache_miss = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_miss().data(), static_cast<int>(this->cache_miss().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.cache_miss");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cache_miss(), output);
  }

  // optional string bad_url = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bad_url().data(), static_cast<int>(this->bad_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.bad_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bad_url(), output);
  }

  // optional string connection_problem = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connection_problem().data(), static_cast<int>(this->connection_problem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.connection_problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->connection_problem(), output);
  }

  // optional string proxy_problem = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxy_problem().data(), static_cast<int>(this->proxy_problem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.proxy_problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->proxy_problem(), output);
  }

  // optional string unknown = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unknown().data(), static_cast<int>(this->unknown().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.unknown");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->unknown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserErrorStrings)
}

::google::protobuf::uint8* CMsgBrowserErrorStrings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserErrorStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string header = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->header(), target);
  }

  // optional string cache_miss = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cache_miss().data(), static_cast<int>(this->cache_miss().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.cache_miss");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cache_miss(), target);
  }

  // optional string bad_url = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bad_url().data(), static_cast<int>(this->bad_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.bad_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bad_url(), target);
  }

  // optional string connection_problem = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connection_problem().data(), static_cast<int>(this->connection_problem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.connection_problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->connection_problem(), target);
  }

  // optional string proxy_problem = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxy_problem().data(), static_cast<int>(this->proxy_problem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.proxy_problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->proxy_problem(), target);
  }

  // optional string unknown = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unknown().data(), static_cast<int>(this->unknown().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserErrorStrings.unknown");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->unknown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserErrorStrings)
  return target;
}

size_t CMsgBrowserErrorStrings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserErrorStrings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string header = 3;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header());
    }

    // optional string cache_miss = 4;
    if (has_cache_miss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cache_miss());
    }

    // optional string bad_url = 5;
    if (has_bad_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bad_url());
    }

    // optional string connection_problem = 6;
    if (has_connection_problem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->connection_problem());
    }

    // optional string proxy_problem = 7;
    if (has_proxy_problem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proxy_problem());
    }

    // optional string unknown = 8;
    if (has_unknown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unknown());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserErrorStrings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserErrorStrings)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserErrorStrings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserErrorStrings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserErrorStrings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserErrorStrings)
    MergeFrom(*source);
  }
}

void CMsgBrowserErrorStrings::MergeFrom(const CMsgBrowserErrorStrings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserErrorStrings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_header();
      header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_cache_miss();
      cache_miss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_miss_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_bad_url();
      bad_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bad_url_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_connection_problem();
      connection_problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_problem_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_proxy_problem();
      proxy_problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxy_problem_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_unknown();
      unknown_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unknown_);
    }
    if (cached_has_bits & 0x00000080u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserErrorStrings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserErrorStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserErrorStrings::CopyFrom(const CMsgBrowserErrorStrings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserErrorStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserErrorStrings::IsInitialized() const {
  return true;
}

void CMsgBrowserErrorStrings::Swap(CMsgBrowserErrorStrings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserErrorStrings::InternalSwap(CMsgBrowserErrorStrings* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  header_.Swap(&other->header_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cache_miss_.Swap(&other->cache_miss_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bad_url_.Swap(&other->bad_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_problem_.Swap(&other->connection_problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proxy_problem_.Swap(&other->proxy_problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unknown_.Swap(&other->unknown_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserErrorStrings::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserSize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserSize::kBrowserHandleFieldNumber;
const int CMsgBrowserSize::kWidthFieldNumber;
const int CMsgBrowserSize::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserSize::CMsgBrowserSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserSize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserSize)
}
CMsgBrowserSize::CMsgBrowserSize(const CMsgBrowserSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserSize)
}

void CMsgBrowserSize::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgBrowserSize::~CMsgBrowserSize() {
  // @@protoc_insertion_point(destructor:CMsgBrowserSize)
  SharedDtor();
}

void CMsgBrowserSize::SharedDtor() {
}

void CMsgBrowserSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserSize::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserSize& CMsgBrowserSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserSize.base);
  return *internal_default_instance();
}


void CMsgBrowserSize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserSize)
  return false;
#undef DO_
}

void CMsgBrowserSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->width(), output);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserSize)
}

::google::protobuf::uint8* CMsgBrowserSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->width(), target);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserSize)
  return target;
}

size_t CMsgBrowserSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserSize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserSize)
    MergeFrom(*source);
  }
}

void CMsgBrowserSize::MergeFrom(const CMsgBrowserSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserSize::CopyFrom(const CMsgBrowserSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserSize::IsInitialized() const {
  return true;
}

void CMsgBrowserSize::Swap(CMsgBrowserSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserSize::InternalSwap(CMsgBrowserSize* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserSize::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserSetMinSize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserSetMinSize::kBrowserHandleFieldNumber;
const int CMsgBrowserSetMinSize::kWidthFieldNumber;
const int CMsgBrowserSetMinSize::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserSetMinSize::CMsgBrowserSetMinSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserSetMinSize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserSetMinSize)
}
CMsgBrowserSetMinSize::CMsgBrowserSetMinSize(const CMsgBrowserSetMinSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserSetMinSize)
}

void CMsgBrowserSetMinSize::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgBrowserSetMinSize::~CMsgBrowserSetMinSize() {
  // @@protoc_insertion_point(destructor:CMsgBrowserSetMinSize)
  SharedDtor();
}

void CMsgBrowserSetMinSize::SharedDtor() {
}

void CMsgBrowserSetMinSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserSetMinSize::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserSetMinSize& CMsgBrowserSetMinSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserSetMinSize.base);
  return *internal_default_instance();
}


void CMsgBrowserSetMinSize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserSetMinSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserSetMinSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserSetMinSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserSetMinSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserSetMinSize)
  return false;
#undef DO_
}

void CMsgBrowserSetMinSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserSetMinSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->width(), output);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserSetMinSize)
}

::google::protobuf::uint8* CMsgBrowserSetMinSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserSetMinSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->width(), target);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserSetMinSize)
  return target;
}

size_t CMsgBrowserSetMinSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserSetMinSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserSetMinSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserSetMinSize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserSetMinSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserSetMinSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserSetMinSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserSetMinSize)
    MergeFrom(*source);
  }
}

void CMsgBrowserSetMinSize::MergeFrom(const CMsgBrowserSetMinSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserSetMinSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserSetMinSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserSetMinSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserSetMinSize::CopyFrom(const CMsgBrowserSetMinSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserSetMinSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserSetMinSize::IsInitialized() const {
  return true;
}

void CMsgBrowserSetMinSize::Swap(CMsgBrowserSetMinSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserSetMinSize::InternalSwap(CMsgBrowserSetMinSize* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserSetMinSize::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserPosition::kBrowserHandleFieldNumber;
const int CMsgBrowserPosition::kXFieldNumber;
const int CMsgBrowserPosition::kYFieldNumber;
const int CMsgBrowserPosition::kXLocalFieldNumber;
const int CMsgBrowserPosition::kYLocalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserPosition::CMsgBrowserPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserPosition)
}
CMsgBrowserPosition::CMsgBrowserPosition(const CMsgBrowserPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_local_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_local_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserPosition)
}

void CMsgBrowserPosition::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_local_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_local_));
}

CMsgBrowserPosition::~CMsgBrowserPosition() {
  // @@protoc_insertion_point(destructor:CMsgBrowserPosition)
  SharedDtor();
}

void CMsgBrowserPosition::SharedDtor() {
}

void CMsgBrowserPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserPosition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserPosition& CMsgBrowserPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserPosition.base);
  return *internal_default_instance();
}


void CMsgBrowserPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_local_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_local_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x_local = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_x_local();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y_local = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_y_local();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserPosition)
  return false;
#undef DO_
}

void CMsgBrowserPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional int32 x_local = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->x_local(), output);
  }

  // optional int32 y_local = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y_local(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserPosition)
}

::google::protobuf::uint8* CMsgBrowserPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional int32 x_local = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->x_local(), target);
  }

  // optional int32 y_local = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y_local(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserPosition)
  return target;
}

size_t CMsgBrowserPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 x_local = 4;
    if (has_x_local()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x_local());
    }

    // optional int32 y_local = 5;
    if (has_y_local()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y_local());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserPosition)
    MergeFrom(*source);
  }
}

void CMsgBrowserPosition::MergeFrom(const CMsgBrowserPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      x_local_ = from.x_local_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_local_ = from.y_local_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserPosition::CopyFrom(const CMsgBrowserPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserPosition::IsInitialized() const {
  return true;
}

void CMsgBrowserPosition::Swap(CMsgBrowserPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserPosition::InternalSwap(CMsgBrowserPosition* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(x_local_, other->x_local_);
  swap(y_local_, other->y_local_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserPosition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserResized::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserResized::kBrowserHandleFieldNumber;
const int CMsgBrowserResized::kXFieldNumber;
const int CMsgBrowserResized::kYFieldNumber;
const int CMsgBrowserResized::kWidthFieldNumber;
const int CMsgBrowserResized::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserResized::CMsgBrowserResized()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserResized.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserResized)
}
CMsgBrowserResized::CMsgBrowserResized(const CMsgBrowserResized& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserResized)
}

void CMsgBrowserResized::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgBrowserResized::~CMsgBrowserResized() {
  // @@protoc_insertion_point(destructor:CMsgBrowserResized)
  SharedDtor();
}

void CMsgBrowserResized::SharedDtor() {
}

void CMsgBrowserResized::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserResized::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserResized& CMsgBrowserResized::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserResized.base);
  return *internal_default_instance();
}


void CMsgBrowserResized::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserResized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserResized::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserResized)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserResized)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserResized)
  return false;
#undef DO_
}

void CMsgBrowserResized::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserResized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional uint32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserResized)
}

::google::protobuf::uint8* CMsgBrowserResized::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserResized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional uint32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserResized)
  return target;
}

size_t CMsgBrowserResized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserResized)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional uint32 width = 4;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserResized::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserResized)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserResized* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserResized>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserResized)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserResized)
    MergeFrom(*source);
  }
}

void CMsgBrowserResized::MergeFrom(const CMsgBrowserResized& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserResized)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserResized::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserResized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserResized::CopyFrom(const CMsgBrowserResized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserResized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserResized::IsInitialized() const {
  return true;
}

void CMsgBrowserResized::Swap(CMsgBrowserResized* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserResized::InternalSwap(CMsgBrowserResized* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserResized::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPostURL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPostURL::kBrowserHandleFieldNumber;
const int CMsgPostURL::kUrlFieldNumber;
const int CMsgPostURL::kPostFieldNumber;
const int CMsgPostURL::kPageserialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPostURL::CMsgPostURL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPostURL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPostURL)
}
CMsgPostURL::CMsgPostURL(const CMsgPostURL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  post_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_post()) {
    post_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.post_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&pageserial_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  // @@protoc_insertion_point(copy_constructor:CMsgPostURL)
}

void CMsgPostURL::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pageserial_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
}

CMsgPostURL::~CMsgPostURL() {
  // @@protoc_insertion_point(destructor:CMsgPostURL)
  SharedDtor();
}

void CMsgPostURL::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  post_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgPostURL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPostURL::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPostURL& CMsgPostURL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPostURL.base);
  return *internal_default_instance();
}


void CMsgPostURL::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPostURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      post_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pageserial_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPostURL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPostURL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPostURL.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string post = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_post()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->post().data(), static_cast<int>(this->post().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPostURL.post");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pageserial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pageserial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageserial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPostURL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPostURL)
  return false;
#undef DO_
}

void CMsgPostURL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPostURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPostURL.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string post = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->post().data(), static_cast<int>(this->post().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPostURL.post");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->post(), output);
  }

  // optional uint32 pageserial = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pageserial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPostURL)
}

::google::protobuf::uint8* CMsgPostURL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPostURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPostURL.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string post = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->post().data(), static_cast<int>(this->post().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPostURL.post");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->post(), target);
  }

  // optional uint32 pageserial = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pageserial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPostURL)
  return target;
}

size_t CMsgPostURL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPostURL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string post = 3;
    if (has_post()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->post());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 pageserial = 4;
    if (has_pageserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageserial());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPostURL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPostURL)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPostURL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPostURL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPostURL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPostURL)
    MergeFrom(*source);
  }
}

void CMsgPostURL::MergeFrom(const CMsgPostURL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPostURL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_post();
      post_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.post_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      pageserial_ = from.pageserial_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPostURL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPostURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPostURL::CopyFrom(const CMsgPostURL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPostURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPostURL::IsInitialized() const {
  return true;
}

void CMsgPostURL::Swap(CMsgPostURL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPostURL::InternalSwap(CMsgPostURL* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  post_.Swap(&other->post_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(pageserial_, other->pageserial_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPostURL::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAddHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAddHeader::kBrowserHandleFieldNumber;
const int CMsgAddHeader::kKeyFieldNumber;
const int CMsgAddHeader::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAddHeader::CMsgAddHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgAddHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAddHeader)
}
CMsgAddHeader::CMsgAddHeader(const CMsgAddHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgAddHeader)
}

void CMsgAddHeader::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgAddHeader::~CMsgAddHeader() {
  // @@protoc_insertion_point(destructor:CMsgAddHeader)
  SharedDtor();
}

void CMsgAddHeader::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAddHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAddHeader::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAddHeader& CMsgAddHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgAddHeader.base);
  return *internal_default_instance();
}


void CMsgAddHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAddHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAddHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAddHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAddHeader.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAddHeader.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAddHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAddHeader)
  return false;
#undef DO_
}

void CMsgAddHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAddHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAddHeader.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAddHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAddHeader)
}

::google::protobuf::uint8* CMsgAddHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAddHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAddHeader.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAddHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAddHeader)
  return target;
}

size_t CMsgAddHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAddHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string key = 2;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAddHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAddHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAddHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAddHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAddHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAddHeader)
    MergeFrom(*source);
  }
}

void CMsgAddHeader::MergeFrom(const CMsgAddHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAddHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAddHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAddHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAddHeader::CopyFrom(const CMsgAddHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAddHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAddHeader::IsInitialized() const {
  return true;
}

void CMsgAddHeader::Swap(CMsgAddHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAddHeader::InternalSwap(CMsgAddHeader* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAddHeader::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStopLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStopLoad::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStopLoad::CMsgStopLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgStopLoad.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStopLoad)
}
CMsgStopLoad::CMsgStopLoad(const CMsgStopLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgStopLoad)
}

void CMsgStopLoad::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgStopLoad::~CMsgStopLoad() {
  // @@protoc_insertion_point(destructor:CMsgStopLoad)
  SharedDtor();
}

void CMsgStopLoad::SharedDtor() {
}

void CMsgStopLoad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgStopLoad::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStopLoad& CMsgStopLoad::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgStopLoad.base);
  return *internal_default_instance();
}


void CMsgStopLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStopLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStopLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStopLoad)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStopLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStopLoad)
  return false;
#undef DO_
}

void CMsgStopLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStopLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStopLoad)
}

::google::protobuf::uint8* CMsgStopLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStopLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStopLoad)
  return target;
}

size_t CMsgStopLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStopLoad)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgStopLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStopLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStopLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStopLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStopLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStopLoad)
    MergeFrom(*source);
  }
}

void CMsgStopLoad::MergeFrom(const CMsgStopLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStopLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgStopLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStopLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStopLoad::CopyFrom(const CMsgStopLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStopLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStopLoad::IsInitialized() const {
  return true;
}

void CMsgStopLoad::Swap(CMsgStopLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStopLoad::InternalSwap(CMsgStopLoad* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgStopLoad::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgReload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgReload::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgReload::CMsgReload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgReload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgReload)
}
CMsgReload::CMsgReload(const CMsgReload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgReload)
}

void CMsgReload::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgReload::~CMsgReload() {
  // @@protoc_insertion_point(destructor:CMsgReload)
  SharedDtor();
}

void CMsgReload::SharedDtor() {
}

void CMsgReload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgReload::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgReload& CMsgReload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgReload.base);
  return *internal_default_instance();
}


void CMsgReload::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgReload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgReload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgReload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgReload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgReload)
  return false;
#undef DO_
}

void CMsgReload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgReload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgReload)
}

::google::protobuf::uint8* CMsgReload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgReload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgReload)
  return target;
}

size_t CMsgReload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgReload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgReload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgReload)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgReload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgReload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgReload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgReload)
    MergeFrom(*source);
  }
}

void CMsgReload::MergeFrom(const CMsgReload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgReload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgReload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgReload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgReload::CopyFrom(const CMsgReload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgReload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgReload::IsInitialized() const {
  return true;
}

void CMsgReload::Swap(CMsgReload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgReload::InternalSwap(CMsgReload* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgReload::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGoForward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGoForward::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGoForward::CMsgGoForward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGoForward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGoForward)
}
CMsgGoForward::CMsgGoForward(const CMsgGoForward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgGoForward)
}

void CMsgGoForward::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgGoForward::~CMsgGoForward() {
  // @@protoc_insertion_point(destructor:CMsgGoForward)
  SharedDtor();
}

void CMsgGoForward::SharedDtor() {
}

void CMsgGoForward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGoForward::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGoForward& CMsgGoForward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGoForward.base);
  return *internal_default_instance();
}


void CMsgGoForward::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGoForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGoForward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGoForward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGoForward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGoForward)
  return false;
#undef DO_
}

void CMsgGoForward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGoForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGoForward)
}

::google::protobuf::uint8* CMsgGoForward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGoForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGoForward)
  return target;
}

size_t CMsgGoForward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGoForward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGoForward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGoForward)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGoForward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGoForward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGoForward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGoForward)
    MergeFrom(*source);
  }
}

void CMsgGoForward::MergeFrom(const CMsgGoForward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGoForward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgGoForward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGoForward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGoForward::CopyFrom(const CMsgGoForward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGoForward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGoForward::IsInitialized() const {
  return true;
}

void CMsgGoForward::Swap(CMsgGoForward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGoForward::InternalSwap(CMsgGoForward* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGoForward::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGoBack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGoBack::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGoBack::CMsgGoBack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGoBack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGoBack)
}
CMsgGoBack::CMsgGoBack(const CMsgGoBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgGoBack)
}

void CMsgGoBack::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgGoBack::~CMsgGoBack() {
  // @@protoc_insertion_point(destructor:CMsgGoBack)
  SharedDtor();
}

void CMsgGoBack::SharedDtor() {
}

void CMsgGoBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGoBack::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGoBack& CMsgGoBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGoBack.base);
  return *internal_default_instance();
}


void CMsgGoBack::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGoBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGoBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGoBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGoBack)
  return false;
#undef DO_
}

void CMsgGoBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGoBack)
}

::google::protobuf::uint8* CMsgGoBack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGoBack)
  return target;
}

size_t CMsgGoBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGoBack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGoBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGoBack)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGoBack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGoBack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGoBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGoBack)
    MergeFrom(*source);
  }
}

void CMsgGoBack::MergeFrom(const CMsgGoBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGoBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgGoBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGoBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGoBack::CopyFrom(const CMsgGoBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGoBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGoBack::IsInitialized() const {
  return true;
}

void CMsgGoBack::Swap(CMsgGoBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGoBack::InternalSwap(CMsgGoBack* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGoBack::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgWasHidden::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgWasHidden::kBrowserHandleFieldNumber;
const int CMsgWasHidden::kHiddenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgWasHidden::CMsgWasHidden()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgWasHidden.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgWasHidden)
}
CMsgWasHidden::CMsgWasHidden(const CMsgWasHidden& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&hidden_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(hidden_));
  // @@protoc_insertion_point(copy_constructor:CMsgWasHidden)
}

void CMsgWasHidden::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hidden_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(hidden_));
}

CMsgWasHidden::~CMsgWasHidden() {
  // @@protoc_insertion_point(destructor:CMsgWasHidden)
  SharedDtor();
}

void CMsgWasHidden::SharedDtor() {
}

void CMsgWasHidden::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgWasHidden::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgWasHidden& CMsgWasHidden::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgWasHidden.base);
  return *internal_default_instance();
}


void CMsgWasHidden::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgWasHidden)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hidden_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(hidden_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgWasHidden::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgWasHidden)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hidden = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hidden();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hidden_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgWasHidden)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgWasHidden)
  return false;
#undef DO_
}

void CMsgWasHidden::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgWasHidden)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool hidden = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hidden(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgWasHidden)
}

::google::protobuf::uint8* CMsgWasHidden::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWasHidden)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool hidden = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hidden(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWasHidden)
  return target;
}

size_t CMsgWasHidden::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgWasHidden)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool hidden = 2;
    if (has_hidden()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgWasHidden::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgWasHidden)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgWasHidden* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgWasHidden>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgWasHidden)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgWasHidden)
    MergeFrom(*source);
  }
}

void CMsgWasHidden::MergeFrom(const CMsgWasHidden& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgWasHidden)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      hidden_ = from.hidden_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgWasHidden::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgWasHidden)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgWasHidden::CopyFrom(const CMsgWasHidden& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgWasHidden)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgWasHidden::IsInitialized() const {
  return true;
}

void CMsgWasHidden::Swap(CMsgWasHidden* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgWasHidden::InternalSwap(CMsgWasHidden* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(hidden_, other->hidden_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgWasHidden::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearHistory::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearHistory::CMsgClearHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgClearHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearHistory)
}
CMsgClearHistory::CMsgClearHistory(const CMsgClearHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgClearHistory)
}

void CMsgClearHistory::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgClearHistory::~CMsgClearHistory() {
  // @@protoc_insertion_point(destructor:CMsgClearHistory)
  SharedDtor();
}

void CMsgClearHistory::SharedDtor() {
}

void CMsgClearHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClearHistory::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClearHistory& CMsgClearHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgClearHistory.base);
  return *internal_default_instance();
}


void CMsgClearHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClearHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClearHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearHistory)
  return false;
#undef DO_
}

void CMsgClearHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearHistory)
}

::google::protobuf::uint8* CMsgClearHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearHistory)
  return target;
}

size_t CMsgClearHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClearHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClearHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClearHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClearHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClearHistory)
    MergeFrom(*source);
  }
}

void CMsgClearHistory::MergeFrom(const CMsgClearHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClearHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgClearHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClearHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearHistory::CopyFrom(const CMsgClearHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClearHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearHistory::IsInitialized() const {
  return true;
}

void CMsgClearHistory::Swap(CMsgClearHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearHistory::InternalSwap(CMsgClearHistory* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClearHistory::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearAllBrowsingData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearAllBrowsingData::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearAllBrowsingData::CMsgClearAllBrowsingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgClearAllBrowsingData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearAllBrowsingData)
}
CMsgClearAllBrowsingData::CMsgClearAllBrowsingData(const CMsgClearAllBrowsingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgClearAllBrowsingData)
}

void CMsgClearAllBrowsingData::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgClearAllBrowsingData::~CMsgClearAllBrowsingData() {
  // @@protoc_insertion_point(destructor:CMsgClearAllBrowsingData)
  SharedDtor();
}

void CMsgClearAllBrowsingData::SharedDtor() {
}

void CMsgClearAllBrowsingData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClearAllBrowsingData::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClearAllBrowsingData& CMsgClearAllBrowsingData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgClearAllBrowsingData.base);
  return *internal_default_instance();
}


void CMsgClearAllBrowsingData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClearAllBrowsingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClearAllBrowsingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearAllBrowsingData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearAllBrowsingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearAllBrowsingData)
  return false;
#undef DO_
}

void CMsgClearAllBrowsingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearAllBrowsingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearAllBrowsingData)
}

::google::protobuf::uint8* CMsgClearAllBrowsingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearAllBrowsingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearAllBrowsingData)
  return target;
}

size_t CMsgClearAllBrowsingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClearAllBrowsingData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearAllBrowsingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClearAllBrowsingData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearAllBrowsingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClearAllBrowsingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClearAllBrowsingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClearAllBrowsingData)
    MergeFrom(*source);
  }
}

void CMsgClearAllBrowsingData::MergeFrom(const CMsgClearAllBrowsingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClearAllBrowsingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgClearAllBrowsingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClearAllBrowsingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearAllBrowsingData::CopyFrom(const CMsgClearAllBrowsingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClearAllBrowsingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearAllBrowsingData::IsInitialized() const {
  return true;
}

void CMsgClearAllBrowsingData::Swap(CMsgClearAllBrowsingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearAllBrowsingData::InternalSwap(CMsgClearAllBrowsingData* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClearAllBrowsingData::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCopy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCopy::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCopy::CMsgCopy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgCopy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCopy)
}
CMsgCopy::CMsgCopy(const CMsgCopy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgCopy)
}

void CMsgCopy::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgCopy::~CMsgCopy() {
  // @@protoc_insertion_point(destructor:CMsgCopy)
  SharedDtor();
}

void CMsgCopy::SharedDtor() {
}

void CMsgCopy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCopy::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCopy& CMsgCopy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgCopy.base);
  return *internal_default_instance();
}


void CMsgCopy::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCopy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCopy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCopy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCopy)
  return false;
#undef DO_
}

void CMsgCopy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCopy)
}

::google::protobuf::uint8* CMsgCopy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCopy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCopy)
  return target;
}

size_t CMsgCopy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCopy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCopy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCopy)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCopy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCopy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCopy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCopy)
    MergeFrom(*source);
  }
}

void CMsgCopy::MergeFrom(const CMsgCopy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCopy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgCopy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCopy::CopyFrom(const CMsgCopy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCopy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCopy::IsInitialized() const {
  return true;
}

void CMsgCopy::Swap(CMsgCopy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCopy::InternalSwap(CMsgCopy* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCopy::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPaste::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPaste::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPaste::CMsgPaste()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPaste.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPaste)
}
CMsgPaste::CMsgPaste(const CMsgPaste& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgPaste)
}

void CMsgPaste::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgPaste::~CMsgPaste() {
  // @@protoc_insertion_point(destructor:CMsgPaste)
  SharedDtor();
}

void CMsgPaste::SharedDtor() {
}

void CMsgPaste::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPaste::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPaste& CMsgPaste::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPaste.base);
  return *internal_default_instance();
}


void CMsgPaste::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPaste)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPaste::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPaste)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPaste)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPaste)
  return false;
#undef DO_
}

void CMsgPaste::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPaste)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPaste)
}

::google::protobuf::uint8* CMsgPaste::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPaste)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPaste)
  return target;
}

size_t CMsgPaste::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPaste)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPaste::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPaste)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPaste* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPaste>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPaste)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPaste)
    MergeFrom(*source);
  }
}

void CMsgPaste::MergeFrom(const CMsgPaste& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPaste)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgPaste::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPaste)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPaste::CopyFrom(const CMsgPaste& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPaste)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPaste::IsInitialized() const {
  return true;
}

void CMsgPaste::Swap(CMsgPaste* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPaste::InternalSwap(CMsgPaste* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPaste::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgExecuteJavaScript::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgExecuteJavaScript::kBrowserHandleFieldNumber;
const int CMsgExecuteJavaScript::kScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgExecuteJavaScript::CMsgExecuteJavaScript()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgExecuteJavaScript.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgExecuteJavaScript)
}
CMsgExecuteJavaScript::CMsgExecuteJavaScript(const CMsgExecuteJavaScript& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_script()) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgExecuteJavaScript)
}

void CMsgExecuteJavaScript::SharedCtor() {
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgExecuteJavaScript::~CMsgExecuteJavaScript() {
  // @@protoc_insertion_point(destructor:CMsgExecuteJavaScript)
  SharedDtor();
}

void CMsgExecuteJavaScript::SharedDtor() {
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgExecuteJavaScript::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgExecuteJavaScript::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgExecuteJavaScript& CMsgExecuteJavaScript::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgExecuteJavaScript.base);
  return *internal_default_instance();
}


void CMsgExecuteJavaScript::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgExecuteJavaScript)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    script_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgExecuteJavaScript::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgExecuteJavaScript)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string script = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->script().data(), static_cast<int>(this->script().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgExecuteJavaScript.script");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgExecuteJavaScript)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgExecuteJavaScript)
  return false;
#undef DO_
}

void CMsgExecuteJavaScript::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgExecuteJavaScript)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string script = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->script().data(), static_cast<int>(this->script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgExecuteJavaScript.script");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->script(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgExecuteJavaScript)
}

::google::protobuf::uint8* CMsgExecuteJavaScript::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgExecuteJavaScript)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string script = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->script().data(), static_cast<int>(this->script().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgExecuteJavaScript.script");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->script(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgExecuteJavaScript)
  return target;
}

size_t CMsgExecuteJavaScript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgExecuteJavaScript)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string script = 2;
    if (has_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->script());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgExecuteJavaScript::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgExecuteJavaScript)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgExecuteJavaScript* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgExecuteJavaScript>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgExecuteJavaScript)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgExecuteJavaScript)
    MergeFrom(*source);
  }
}

void CMsgExecuteJavaScript::MergeFrom(const CMsgExecuteJavaScript& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgExecuteJavaScript)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_script();
      script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgExecuteJavaScript::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgExecuteJavaScript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExecuteJavaScript::CopyFrom(const CMsgExecuteJavaScript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgExecuteJavaScript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExecuteJavaScript::IsInitialized() const {
  return true;
}

void CMsgExecuteJavaScript::Swap(CMsgExecuteJavaScript* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgExecuteJavaScript::InternalSwap(CMsgExecuteJavaScript* other) {
  using std::swap;
  script_.Swap(&other->script_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgExecuteJavaScript::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetFocus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetFocus::kBrowserHandleFieldNumber;
const int CMsgSetFocus::kFocusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetFocus::CMsgSetFocus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetFocus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetFocus)
}
CMsgSetFocus::CMsgSetFocus(const CMsgSetFocus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&focus_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(focus_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetFocus)
}

void CMsgSetFocus::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&focus_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(focus_));
}

CMsgSetFocus::~CMsgSetFocus() {
  // @@protoc_insertion_point(destructor:CMsgSetFocus)
  SharedDtor();
}

void CMsgSetFocus::SharedDtor() {
}

void CMsgSetFocus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetFocus::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetFocus& CMsgSetFocus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetFocus.base);
  return *internal_default_instance();
}


void CMsgSetFocus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&focus_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(focus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetFocus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetFocus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool focus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_focus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetFocus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetFocus)
  return false;
#undef DO_
}

void CMsgSetFocus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool focus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->focus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetFocus)
}

::google::protobuf::uint8* CMsgSetFocus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool focus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->focus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetFocus)
  return target;
}

size_t CMsgSetFocus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetFocus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool focus = 2;
    if (has_focus()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetFocus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetFocus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetFocus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetFocus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetFocus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetFocus)
    MergeFrom(*source);
  }
}

void CMsgSetFocus::MergeFrom(const CMsgSetFocus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetFocus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      focus_ = from.focus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetFocus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetFocus::CopyFrom(const CMsgSetFocus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetFocus::IsInitialized() const {
  return true;
}

void CMsgSetFocus::Swap(CMsgSetFocus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetFocus::InternalSwap(CMsgSetFocus* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(focus_, other->focus_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetFocus::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHorizontalScrollBarSize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHorizontalScrollBarSize::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHorizontalScrollBarSize::CMsgHorizontalScrollBarSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgHorizontalScrollBarSize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHorizontalScrollBarSize)
}
CMsgHorizontalScrollBarSize::CMsgHorizontalScrollBarSize(const CMsgHorizontalScrollBarSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgHorizontalScrollBarSize)
}

void CMsgHorizontalScrollBarSize::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgHorizontalScrollBarSize::~CMsgHorizontalScrollBarSize() {
  // @@protoc_insertion_point(destructor:CMsgHorizontalScrollBarSize)
  SharedDtor();
}

void CMsgHorizontalScrollBarSize::SharedDtor() {
}

void CMsgHorizontalScrollBarSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHorizontalScrollBarSize::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHorizontalScrollBarSize& CMsgHorizontalScrollBarSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgHorizontalScrollBarSize.base);
  return *internal_default_instance();
}


void CMsgHorizontalScrollBarSize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHorizontalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHorizontalScrollBarSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHorizontalScrollBarSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHorizontalScrollBarSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHorizontalScrollBarSize)
  return false;
#undef DO_
}

void CMsgHorizontalScrollBarSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHorizontalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHorizontalScrollBarSize)
}

::google::protobuf::uint8* CMsgHorizontalScrollBarSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHorizontalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHorizontalScrollBarSize)
  return target;
}

size_t CMsgHorizontalScrollBarSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHorizontalScrollBarSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHorizontalScrollBarSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHorizontalScrollBarSize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHorizontalScrollBarSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHorizontalScrollBarSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHorizontalScrollBarSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHorizontalScrollBarSize)
    MergeFrom(*source);
  }
}

void CMsgHorizontalScrollBarSize::MergeFrom(const CMsgHorizontalScrollBarSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHorizontalScrollBarSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgHorizontalScrollBarSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHorizontalScrollBarSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHorizontalScrollBarSize::CopyFrom(const CMsgHorizontalScrollBarSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHorizontalScrollBarSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHorizontalScrollBarSize::IsInitialized() const {
  return true;
}

void CMsgHorizontalScrollBarSize::Swap(CMsgHorizontalScrollBarSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHorizontalScrollBarSize::InternalSwap(CMsgHorizontalScrollBarSize* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHorizontalScrollBarSize::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHorizontalScrollBarSizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHorizontalScrollBarSizeResponse::kBrowserHandleFieldNumber;
const int CMsgHorizontalScrollBarSizeResponse::kScrollMaxFieldNumber;
const int CMsgHorizontalScrollBarSizeResponse::kScrollFieldNumber;
const int CMsgHorizontalScrollBarSizeResponse::kZoomFieldNumber;
const int CMsgHorizontalScrollBarSizeResponse::kVisibleFieldNumber;
const int CMsgHorizontalScrollBarSizeResponse::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHorizontalScrollBarSizeResponse::CMsgHorizontalScrollBarSizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgHorizontalScrollBarSizeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHorizontalScrollBarSizeResponse)
}
CMsgHorizontalScrollBarSizeResponse::CMsgHorizontalScrollBarSizeResponse(const CMsgHorizontalScrollBarSizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:CMsgHorizontalScrollBarSizeResponse)
}

void CMsgHorizontalScrollBarSizeResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
}

CMsgHorizontalScrollBarSizeResponse::~CMsgHorizontalScrollBarSizeResponse() {
  // @@protoc_insertion_point(destructor:CMsgHorizontalScrollBarSizeResponse)
  SharedDtor();
}

void CMsgHorizontalScrollBarSizeResponse::SharedDtor() {
}

void CMsgHorizontalScrollBarSizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHorizontalScrollBarSizeResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHorizontalScrollBarSizeResponse& CMsgHorizontalScrollBarSizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgHorizontalScrollBarSizeResponse.base);
  return *internal_default_instance();
}


void CMsgHorizontalScrollBarSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHorizontalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&page_size_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHorizontalScrollBarSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHorizontalScrollBarSizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_scroll_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_scroll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float zoom = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_zoom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_page_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHorizontalScrollBarSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHorizontalScrollBarSizeResponse)
  return false;
#undef DO_
}

void CMsgHorizontalScrollBarSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHorizontalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 scroll_max = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scroll_max(), output);
  }

  // optional uint32 scroll = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->scroll(), output);
  }

  // optional float zoom = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->zoom(), output);
  }

  // optional bool visible = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->visible(), output);
  }

  // optional uint32 page_size = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHorizontalScrollBarSizeResponse)
}

::google::protobuf::uint8* CMsgHorizontalScrollBarSizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHorizontalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 scroll_max = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scroll_max(), target);
  }

  // optional uint32 scroll = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->scroll(), target);
  }

  // optional float zoom = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->zoom(), target);
  }

  // optional bool visible = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->visible(), target);
  }

  // optional uint32 page_size = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHorizontalScrollBarSizeResponse)
  return target;
}

size_t CMsgHorizontalScrollBarSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHorizontalScrollBarSizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 scroll_max = 6;
    if (has_scroll_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll_max());
    }

    // optional uint32 scroll = 7;
    if (has_scroll()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll());
    }

    // optional float zoom = 8;
    if (has_zoom()) {
      total_size += 1 + 4;
    }

    // optional bool visible = 9;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional uint32 page_size = 10;
    if (has_page_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHorizontalScrollBarSizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHorizontalScrollBarSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHorizontalScrollBarSizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHorizontalScrollBarSizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHorizontalScrollBarSizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHorizontalScrollBarSizeResponse)
    MergeFrom(*source);
  }
}

void CMsgHorizontalScrollBarSizeResponse::MergeFrom(const CMsgHorizontalScrollBarSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHorizontalScrollBarSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scroll_max_ = from.scroll_max_;
    }
    if (cached_has_bits & 0x00000004u) {
      scroll_ = from.scroll_;
    }
    if (cached_has_bits & 0x00000008u) {
      zoom_ = from.zoom_;
    }
    if (cached_has_bits & 0x00000010u) {
      visible_ = from.visible_;
    }
    if (cached_has_bits & 0x00000020u) {
      page_size_ = from.page_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgHorizontalScrollBarSizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHorizontalScrollBarSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHorizontalScrollBarSizeResponse::CopyFrom(const CMsgHorizontalScrollBarSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHorizontalScrollBarSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHorizontalScrollBarSizeResponse::IsInitialized() const {
  return true;
}

void CMsgHorizontalScrollBarSizeResponse::Swap(CMsgHorizontalScrollBarSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHorizontalScrollBarSizeResponse::InternalSwap(CMsgHorizontalScrollBarSizeResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scroll_max_, other->scroll_max_);
  swap(scroll_, other->scroll_);
  swap(zoom_, other->zoom_);
  swap(visible_, other->visible_);
  swap(page_size_, other->page_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHorizontalScrollBarSizeResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgVerticalScrollBarSize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVerticalScrollBarSize::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVerticalScrollBarSize::CMsgVerticalScrollBarSize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgVerticalScrollBarSize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVerticalScrollBarSize)
}
CMsgVerticalScrollBarSize::CMsgVerticalScrollBarSize(const CMsgVerticalScrollBarSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgVerticalScrollBarSize)
}

void CMsgVerticalScrollBarSize::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgVerticalScrollBarSize::~CMsgVerticalScrollBarSize() {
  // @@protoc_insertion_point(destructor:CMsgVerticalScrollBarSize)
  SharedDtor();
}

void CMsgVerticalScrollBarSize::SharedDtor() {
}

void CMsgVerticalScrollBarSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgVerticalScrollBarSize::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgVerticalScrollBarSize& CMsgVerticalScrollBarSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgVerticalScrollBarSize.base);
  return *internal_default_instance();
}


void CMsgVerticalScrollBarSize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVerticalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgVerticalScrollBarSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVerticalScrollBarSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVerticalScrollBarSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVerticalScrollBarSize)
  return false;
#undef DO_
}

void CMsgVerticalScrollBarSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVerticalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVerticalScrollBarSize)
}

::google::protobuf::uint8* CMsgVerticalScrollBarSize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVerticalScrollBarSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVerticalScrollBarSize)
  return target;
}

size_t CMsgVerticalScrollBarSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVerticalScrollBarSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVerticalScrollBarSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgVerticalScrollBarSize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVerticalScrollBarSize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgVerticalScrollBarSize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgVerticalScrollBarSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgVerticalScrollBarSize)
    MergeFrom(*source);
  }
}

void CMsgVerticalScrollBarSize::MergeFrom(const CMsgVerticalScrollBarSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgVerticalScrollBarSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgVerticalScrollBarSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgVerticalScrollBarSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVerticalScrollBarSize::CopyFrom(const CMsgVerticalScrollBarSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVerticalScrollBarSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVerticalScrollBarSize::IsInitialized() const {
  return true;
}

void CMsgVerticalScrollBarSize::Swap(CMsgVerticalScrollBarSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVerticalScrollBarSize::InternalSwap(CMsgVerticalScrollBarSize* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgVerticalScrollBarSize::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgVerticalScrollBarSizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVerticalScrollBarSizeResponse::kBrowserHandleFieldNumber;
const int CMsgVerticalScrollBarSizeResponse::kScrollMaxFieldNumber;
const int CMsgVerticalScrollBarSizeResponse::kScrollFieldNumber;
const int CMsgVerticalScrollBarSizeResponse::kZoomFieldNumber;
const int CMsgVerticalScrollBarSizeResponse::kVisibleFieldNumber;
const int CMsgVerticalScrollBarSizeResponse::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVerticalScrollBarSizeResponse::CMsgVerticalScrollBarSizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgVerticalScrollBarSizeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVerticalScrollBarSizeResponse)
}
CMsgVerticalScrollBarSizeResponse::CMsgVerticalScrollBarSizeResponse(const CMsgVerticalScrollBarSizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:CMsgVerticalScrollBarSizeResponse)
}

void CMsgVerticalScrollBarSizeResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
}

CMsgVerticalScrollBarSizeResponse::~CMsgVerticalScrollBarSizeResponse() {
  // @@protoc_insertion_point(destructor:CMsgVerticalScrollBarSizeResponse)
  SharedDtor();
}

void CMsgVerticalScrollBarSizeResponse::SharedDtor() {
}

void CMsgVerticalScrollBarSizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgVerticalScrollBarSizeResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgVerticalScrollBarSizeResponse& CMsgVerticalScrollBarSizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgVerticalScrollBarSizeResponse.base);
  return *internal_default_instance();
}


void CMsgVerticalScrollBarSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVerticalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&page_size_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(page_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgVerticalScrollBarSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVerticalScrollBarSizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_scroll_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_scroll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float zoom = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_zoom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_page_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVerticalScrollBarSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVerticalScrollBarSizeResponse)
  return false;
#undef DO_
}

void CMsgVerticalScrollBarSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVerticalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 scroll_max = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scroll_max(), output);
  }

  // optional uint32 scroll = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->scroll(), output);
  }

  // optional float zoom = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->zoom(), output);
  }

  // optional bool visible = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->visible(), output);
  }

  // optional uint32 page_size = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->page_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVerticalScrollBarSizeResponse)
}

::google::protobuf::uint8* CMsgVerticalScrollBarSizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVerticalScrollBarSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 scroll_max = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scroll_max(), target);
  }

  // optional uint32 scroll = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->scroll(), target);
  }

  // optional float zoom = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->zoom(), target);
  }

  // optional bool visible = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->visible(), target);
  }

  // optional uint32 page_size = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->page_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVerticalScrollBarSizeResponse)
  return target;
}

size_t CMsgVerticalScrollBarSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVerticalScrollBarSizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 scroll_max = 6;
    if (has_scroll_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll_max());
    }

    // optional uint32 scroll = 7;
    if (has_scroll()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll());
    }

    // optional float zoom = 8;
    if (has_zoom()) {
      total_size += 1 + 4;
    }

    // optional bool visible = 9;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional uint32 page_size = 10;
    if (has_page_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVerticalScrollBarSizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgVerticalScrollBarSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVerticalScrollBarSizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgVerticalScrollBarSizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgVerticalScrollBarSizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgVerticalScrollBarSizeResponse)
    MergeFrom(*source);
  }
}

void CMsgVerticalScrollBarSizeResponse::MergeFrom(const CMsgVerticalScrollBarSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgVerticalScrollBarSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scroll_max_ = from.scroll_max_;
    }
    if (cached_has_bits & 0x00000004u) {
      scroll_ = from.scroll_;
    }
    if (cached_has_bits & 0x00000008u) {
      zoom_ = from.zoom_;
    }
    if (cached_has_bits & 0x00000010u) {
      visible_ = from.visible_;
    }
    if (cached_has_bits & 0x00000020u) {
      page_size_ = from.page_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgVerticalScrollBarSizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgVerticalScrollBarSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVerticalScrollBarSizeResponse::CopyFrom(const CMsgVerticalScrollBarSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVerticalScrollBarSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVerticalScrollBarSizeResponse::IsInitialized() const {
  return true;
}

void CMsgVerticalScrollBarSizeResponse::Swap(CMsgVerticalScrollBarSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVerticalScrollBarSizeResponse::InternalSwap(CMsgVerticalScrollBarSizeResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scroll_max_, other->scroll_max_);
  swap(scroll_, other->scroll_);
  swap(zoom_, other->zoom_);
  swap(visible_, other->visible_);
  swap(page_size_, other->page_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgVerticalScrollBarSizeResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFind::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFind::kBrowserHandleFieldNumber;
const int CMsgFind::kFindFieldNumber;
const int CMsgFind::kInfindFieldNumber;
const int CMsgFind::kReverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFind::CMsgFind()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFind.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFind)
}
CMsgFind::CMsgFind(const CMsgFind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  find_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_find()) {
    find_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.find_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverse_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(reverse_));
  // @@protoc_insertion_point(copy_constructor:CMsgFind)
}

void CMsgFind::SharedCtor() {
  find_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(reverse_));
}

CMsgFind::~CMsgFind() {
  // @@protoc_insertion_point(destructor:CMsgFind)
  SharedDtor();
}

void CMsgFind::SharedDtor() {
  find_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgFind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFind::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFind& CMsgFind::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFind.base);
  return *internal_default_instance();
}


void CMsgFind::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    find_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reverse_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(reverse_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string find = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_find()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->find().data(), static_cast<int>(this->find().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFind.find");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool infind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_infind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &infind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reverse = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reverse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFind)
  return false;
#undef DO_
}

void CMsgFind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string find = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->find().data(), static_cast<int>(this->find().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFind.find");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->find(), output);
  }

  // optional bool infind = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->infind(), output);
  }

  // optional bool reverse = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reverse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFind)
}

::google::protobuf::uint8* CMsgFind::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string find = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->find().data(), static_cast<int>(this->find().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFind.find");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->find(), target);
  }

  // optional bool infind = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->infind(), target);
  }

  // optional bool reverse = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reverse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFind)
  return target;
}

size_t CMsgFind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string find = 2;
    if (has_find()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->find());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool infind = 3;
    if (has_infind()) {
      total_size += 1 + 1;
    }

    // optional bool reverse = 4 [default = false];
    if (has_reverse()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFind)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFind* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFind>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFind)
    MergeFrom(*source);
  }
}

void CMsgFind::MergeFrom(const CMsgFind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_find();
      find_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.find_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      infind_ = from.infind_;
    }
    if (cached_has_bits & 0x00000008u) {
      reverse_ = from.reverse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFind::CopyFrom(const CMsgFind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFind::IsInitialized() const {
  return true;
}

void CMsgFind::Swap(CMsgFind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFind::InternalSwap(CMsgFind* other) {
  using std::swap;
  find_.Swap(&other->find_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(infind_, other->infind_);
  swap(reverse_, other->reverse_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFind::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStopFind::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStopFind::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStopFind::CMsgStopFind()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgStopFind.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStopFind)
}
CMsgStopFind::CMsgStopFind(const CMsgStopFind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgStopFind)
}

void CMsgStopFind::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgStopFind::~CMsgStopFind() {
  // @@protoc_insertion_point(destructor:CMsgStopFind)
  SharedDtor();
}

void CMsgStopFind::SharedDtor() {
}

void CMsgStopFind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgStopFind::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStopFind& CMsgStopFind::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgStopFind.base);
  return *internal_default_instance();
}


void CMsgStopFind::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStopFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStopFind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStopFind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStopFind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStopFind)
  return false;
#undef DO_
}

void CMsgStopFind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStopFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStopFind)
}

::google::protobuf::uint8* CMsgStopFind::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStopFind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStopFind)
  return target;
}

size_t CMsgStopFind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStopFind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgStopFind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStopFind)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStopFind* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStopFind>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStopFind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStopFind)
    MergeFrom(*source);
  }
}

void CMsgStopFind::MergeFrom(const CMsgStopFind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStopFind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgStopFind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStopFind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStopFind::CopyFrom(const CMsgStopFind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStopFind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStopFind::IsInitialized() const {
  return true;
}

void CMsgStopFind::Swap(CMsgStopFind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStopFind::InternalSwap(CMsgStopFind* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgStopFind::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetHorizontalScroll::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetHorizontalScroll::kBrowserHandleFieldNumber;
const int CMsgSetHorizontalScroll::kScrollFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetHorizontalScroll::CMsgSetHorizontalScroll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetHorizontalScroll.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetHorizontalScroll)
}
CMsgSetHorizontalScroll::CMsgSetHorizontalScroll(const CMsgSetHorizontalScroll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&scroll_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetHorizontalScroll)
}

void CMsgSetHorizontalScroll::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scroll_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
}

CMsgSetHorizontalScroll::~CMsgSetHorizontalScroll() {
  // @@protoc_insertion_point(destructor:CMsgSetHorizontalScroll)
  SharedDtor();
}

void CMsgSetHorizontalScroll::SharedDtor() {
}

void CMsgSetHorizontalScroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetHorizontalScroll::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetHorizontalScroll& CMsgSetHorizontalScroll::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetHorizontalScroll.base);
  return *internal_default_instance();
}


void CMsgSetHorizontalScroll::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetHorizontalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scroll_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetHorizontalScroll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetHorizontalScroll)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_scroll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetHorizontalScroll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetHorizontalScroll)
  return false;
#undef DO_
}

void CMsgSetHorizontalScroll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetHorizontalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 scroll = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scroll(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetHorizontalScroll)
}

::google::protobuf::uint8* CMsgSetHorizontalScroll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetHorizontalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 scroll = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scroll(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetHorizontalScroll)
  return target;
}

size_t CMsgSetHorizontalScroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetHorizontalScroll)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 scroll = 2;
    if (has_scroll()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetHorizontalScroll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetHorizontalScroll)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetHorizontalScroll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetHorizontalScroll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetHorizontalScroll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetHorizontalScroll)
    MergeFrom(*source);
  }
}

void CMsgSetHorizontalScroll::MergeFrom(const CMsgSetHorizontalScroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetHorizontalScroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scroll_ = from.scroll_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetHorizontalScroll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetHorizontalScroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetHorizontalScroll::CopyFrom(const CMsgSetHorizontalScroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetHorizontalScroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetHorizontalScroll::IsInitialized() const {
  return true;
}

void CMsgSetHorizontalScroll::Swap(CMsgSetHorizontalScroll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetHorizontalScroll::InternalSwap(CMsgSetHorizontalScroll* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scroll_, other->scroll_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetHorizontalScroll::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetVerticalScroll::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetVerticalScroll::kBrowserHandleFieldNumber;
const int CMsgSetVerticalScroll::kScrollFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetVerticalScroll::CMsgSetVerticalScroll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetVerticalScroll.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetVerticalScroll)
}
CMsgSetVerticalScroll::CMsgSetVerticalScroll(const CMsgSetVerticalScroll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&scroll_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetVerticalScroll)
}

void CMsgSetVerticalScroll::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scroll_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
}

CMsgSetVerticalScroll::~CMsgSetVerticalScroll() {
  // @@protoc_insertion_point(destructor:CMsgSetVerticalScroll)
  SharedDtor();
}

void CMsgSetVerticalScroll::SharedDtor() {
}

void CMsgSetVerticalScroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetVerticalScroll::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetVerticalScroll& CMsgSetVerticalScroll::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetVerticalScroll.base);
  return *internal_default_instance();
}


void CMsgSetVerticalScroll::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetVerticalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scroll_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(scroll_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetVerticalScroll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetVerticalScroll)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scroll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_scroll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scroll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetVerticalScroll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetVerticalScroll)
  return false;
#undef DO_
}

void CMsgSetVerticalScroll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetVerticalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 scroll = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scroll(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetVerticalScroll)
}

::google::protobuf::uint8* CMsgSetVerticalScroll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetVerticalScroll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 scroll = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scroll(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetVerticalScroll)
  return target;
}

size_t CMsgSetVerticalScroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetVerticalScroll)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 scroll = 2;
    if (has_scroll()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scroll());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetVerticalScroll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetVerticalScroll)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetVerticalScroll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetVerticalScroll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetVerticalScroll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetVerticalScroll)
    MergeFrom(*source);
  }
}

void CMsgSetVerticalScroll::MergeFrom(const CMsgSetVerticalScroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetVerticalScroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scroll_ = from.scroll_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetVerticalScroll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetVerticalScroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetVerticalScroll::CopyFrom(const CMsgSetVerticalScroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetVerticalScroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetVerticalScroll::IsInitialized() const {
  return true;
}

void CMsgSetVerticalScroll::Swap(CMsgSetVerticalScroll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetVerticalScroll::InternalSwap(CMsgSetVerticalScroll* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scroll_, other->scroll_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetVerticalScroll::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetZoomLevel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetZoomLevel::kBrowserHandleFieldNumber;
const int CMsgSetZoomLevel::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetZoomLevel::CMsgSetZoomLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetZoomLevel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetZoomLevel)
}
CMsgSetZoomLevel::CMsgSetZoomLevel(const CMsgSetZoomLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&zoom_, &from.zoom_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_handle_) -
    reinterpret_cast<char*>(&zoom_)) + sizeof(browser_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetZoomLevel)
}

void CMsgSetZoomLevel::SharedCtor() {
  ::memset(&zoom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_handle_) -
      reinterpret_cast<char*>(&zoom_)) + sizeof(browser_handle_));
}

CMsgSetZoomLevel::~CMsgSetZoomLevel() {
  // @@protoc_insertion_point(destructor:CMsgSetZoomLevel)
  SharedDtor();
}

void CMsgSetZoomLevel::SharedDtor() {
}

void CMsgSetZoomLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetZoomLevel::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetZoomLevel& CMsgSetZoomLevel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetZoomLevel.base);
  return *internal_default_instance();
}


void CMsgSetZoomLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetZoomLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&zoom_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&browser_handle_) -
        reinterpret_cast<char*>(&zoom_)) + sizeof(browser_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetZoomLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetZoomLevel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double zoom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_zoom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetZoomLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetZoomLevel)
  return false;
#undef DO_
}

void CMsgSetZoomLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetZoomLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional double zoom = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetZoomLevel)
}

::google::protobuf::uint8* CMsgSetZoomLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetZoomLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional double zoom = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetZoomLevel)
  return target;
}

size_t CMsgSetZoomLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetZoomLevel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double zoom = 2;
    if (has_zoom()) {
      total_size += 1 + 8;
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetZoomLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetZoomLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetZoomLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetZoomLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetZoomLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetZoomLevel)
    MergeFrom(*source);
  }
}

void CMsgSetZoomLevel::MergeFrom(const CMsgSetZoomLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetZoomLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      zoom_ = from.zoom_;
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetZoomLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetZoomLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetZoomLevel::CopyFrom(const CMsgSetZoomLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetZoomLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetZoomLevel::IsInitialized() const {
  return true;
}

void CMsgSetZoomLevel::Swap(CMsgSetZoomLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetZoomLevel::InternalSwap(CMsgSetZoomLevel* other) {
  using std::swap;
  swap(zoom_, other->zoom_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetZoomLevel::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgViewSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgViewSource::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgViewSource::CMsgViewSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgViewSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgViewSource)
}
CMsgViewSource::CMsgViewSource(const CMsgViewSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgViewSource)
}

void CMsgViewSource::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgViewSource::~CMsgViewSource() {
  // @@protoc_insertion_point(destructor:CMsgViewSource)
  SharedDtor();
}

void CMsgViewSource::SharedDtor() {
}

void CMsgViewSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgViewSource::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgViewSource& CMsgViewSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgViewSource.base);
  return *internal_default_instance();
}


void CMsgViewSource::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgViewSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgViewSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgViewSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgViewSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgViewSource)
  return false;
#undef DO_
}

void CMsgViewSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgViewSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgViewSource)
}

::google::protobuf::uint8* CMsgViewSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgViewSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgViewSource)
  return target;
}

size_t CMsgViewSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgViewSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgViewSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgViewSource)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgViewSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgViewSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgViewSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgViewSource)
    MergeFrom(*source);
  }
}

void CMsgViewSource::MergeFrom(const CMsgViewSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgViewSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgViewSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgViewSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgViewSource::CopyFrom(const CMsgViewSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgViewSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgViewSource::IsInitialized() const {
  return true;
}

void CMsgViewSource::Swap(CMsgViewSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgViewSource::InternalSwap(CMsgViewSource* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgViewSource::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBrowserReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBrowserReady::kBrowserHandleFieldNumber;
const int CMsgBrowserReady::kVrOverlayKeyFieldNumber;
const int CMsgBrowserReady::kHwndBrowserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBrowserReady::CMsgBrowserReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserReady.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBrowserReady)
}
CMsgBrowserReady::CMsgBrowserReady(const CMsgBrowserReady& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vr_overlay_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_overlay_key()) {
    vr_overlay_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_overlay_key_);
  }
  ::memcpy(&hwnd_browser_, &from.hwnd_browser_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_handle_) -
    reinterpret_cast<char*>(&hwnd_browser_)) + sizeof(browser_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgBrowserReady)
}

void CMsgBrowserReady::SharedCtor() {
  vr_overlay_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hwnd_browser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_handle_) -
      reinterpret_cast<char*>(&hwnd_browser_)) + sizeof(browser_handle_));
}

CMsgBrowserReady::~CMsgBrowserReady() {
  // @@protoc_insertion_point(destructor:CMsgBrowserReady)
  SharedDtor();
}

void CMsgBrowserReady::SharedDtor() {
  vr_overlay_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBrowserReady::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBrowserReady::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBrowserReady& CMsgBrowserReady::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBrowserReady.base);
  return *internal_default_instance();
}


void CMsgBrowserReady::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBrowserReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vr_overlay_key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&hwnd_browser_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&browser_handle_) -
        reinterpret_cast<char*>(&hwnd_browser_)) + sizeof(browser_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBrowserReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBrowserReady)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_overlay_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_overlay_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_overlay_key().data(), static_cast<int>(this->vr_overlay_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBrowserReady.vr_overlay_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hwnd_browser = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_hwnd_browser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hwnd_browser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBrowserReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBrowserReady)
  return false;
#undef DO_
}

void CMsgBrowserReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBrowserReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string vr_overlay_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_overlay_key().data(), static_cast<int>(this->vr_overlay_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserReady.vr_overlay_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vr_overlay_key(), output);
  }

  // optional fixed64 hwnd_browser = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->hwnd_browser(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBrowserReady)
}

::google::protobuf::uint8* CMsgBrowserReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBrowserReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string vr_overlay_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_overlay_key().data(), static_cast<int>(this->vr_overlay_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBrowserReady.vr_overlay_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vr_overlay_key(), target);
  }

  // optional fixed64 hwnd_browser = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->hwnd_browser(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBrowserReady)
  return target;
}

size_t CMsgBrowserReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBrowserReady)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string vr_overlay_key = 2;
    if (has_vr_overlay_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_overlay_key());
    }

    // optional fixed64 hwnd_browser = 3;
    if (has_hwnd_browser()) {
      total_size += 1 + 8;
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBrowserReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBrowserReady)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBrowserReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBrowserReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBrowserReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBrowserReady)
    MergeFrom(*source);
  }
}

void CMsgBrowserReady::MergeFrom(const CMsgBrowserReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBrowserReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vr_overlay_key();
      vr_overlay_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_overlay_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      hwnd_browser_ = from.hwnd_browser_;
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBrowserReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBrowserReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBrowserReady::CopyFrom(const CMsgBrowserReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBrowserReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBrowserReady::IsInitialized() const {
  return true;
}

void CMsgBrowserReady::Swap(CMsgBrowserReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBrowserReady::InternalSwap(CMsgBrowserReady* other) {
  using std::swap;
  vr_overlay_key_.Swap(&other->vr_overlay_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hwnd_browser_, other->hwnd_browser_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBrowserReady::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgURLChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgURLChanged::kBrowserHandleFieldNumber;
const int CMsgURLChanged::kUrlFieldNumber;
const int CMsgURLChanged::kPostDataFieldNumber;
const int CMsgURLChanged::kBIsRedirectFieldNumber;
const int CMsgURLChanged::kPagetitleFieldNumber;
const int CMsgURLChanged::kBNewNavigationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgURLChanged::CMsgURLChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgURLChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgURLChanged)
}
CMsgURLChanged::CMsgURLChanged(const CMsgURLChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  postdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_postdata()) {
    postdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postdata_);
  }
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pagetitle()) {
    pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&bnewnavigation_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(bnewnavigation_));
  // @@protoc_insertion_point(copy_constructor:CMsgURLChanged)
}

void CMsgURLChanged::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bnewnavigation_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(bnewnavigation_));
}

CMsgURLChanged::~CMsgURLChanged() {
  // @@protoc_insertion_point(destructor:CMsgURLChanged)
  SharedDtor();
}

void CMsgURLChanged::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgURLChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgURLChanged::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgURLChanged& CMsgURLChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgURLChanged.base);
  return *internal_default_instance();
}


void CMsgURLChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgURLChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      postdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pagetitle_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bnewnavigation_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(bnewnavigation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgURLChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgURLChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgURLChanged.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string postData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->postdata().data(), static_cast<int>(this->postdata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgURLChanged.postData");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bIsRedirect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bisredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bisredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pagetitle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pagetitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgURLChanged.pagetitle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bNewNavigation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_bnewnavigation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bnewnavigation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgURLChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgURLChanged)
  return false;
#undef DO_
}

void CMsgURLChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgURLChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string postData = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postdata().data(), static_cast<int>(this->postdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.postData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->postdata(), output);
  }

  // optional bool bIsRedirect = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bisredirect(), output);
  }

  // optional string pagetitle = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.pagetitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pagetitle(), output);
  }

  // optional bool bNewNavigation = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bnewnavigation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgURLChanged)
}

::google::protobuf::uint8* CMsgURLChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgURLChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string postData = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postdata().data(), static_cast<int>(this->postdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.postData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->postdata(), target);
  }

  // optional bool bIsRedirect = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bisredirect(), target);
  }

  // optional string pagetitle = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgURLChanged.pagetitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pagetitle(), target);
  }

  // optional bool bNewNavigation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bnewnavigation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgURLChanged)
  return target;
}

size_t CMsgURLChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgURLChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string postData = 3;
    if (has_postdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->postdata());
    }

    // optional string pagetitle = 5;
    if (has_pagetitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pagetitle());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bIsRedirect = 4;
    if (has_bisredirect()) {
      total_size += 1 + 1;
    }

    // optional bool bNewNavigation = 6;
    if (has_bnewnavigation()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgURLChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgURLChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgURLChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgURLChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgURLChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgURLChanged)
    MergeFrom(*source);
  }
}

void CMsgURLChanged::MergeFrom(const CMsgURLChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgURLChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_postdata();
      postdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postdata_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_pagetitle();
      pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
    }
    if (cached_has_bits & 0x00000008u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      bisredirect_ = from.bisredirect_;
    }
    if (cached_has_bits & 0x00000020u) {
      bnewnavigation_ = from.bnewnavigation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgURLChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgURLChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgURLChanged::CopyFrom(const CMsgURLChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgURLChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgURLChanged::IsInitialized() const {
  return true;
}

void CMsgURLChanged::Swap(CMsgURLChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgURLChanged::InternalSwap(CMsgURLChanged* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  postdata_.Swap(&other->postdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pagetitle_.Swap(&other->pagetitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(bisredirect_, other->bisredirect_);
  swap(bnewnavigation_, other->bnewnavigation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgURLChanged::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CHTMLHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CHTMLHeader::kKeyFieldNumber;
const int CHTMLHeader::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CHTMLHeader::CHTMLHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CHTMLHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CHTMLHeader)
}
CHTMLHeader::CHTMLHeader(const CHTMLHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CHTMLHeader)
}

void CHTMLHeader::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CHTMLHeader::~CHTMLHeader() {
  // @@protoc_insertion_point(destructor:CHTMLHeader)
  SharedDtor();
}

void CHTMLHeader::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CHTMLHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CHTMLHeader::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CHTMLHeader& CHTMLHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CHTMLHeader.base);
  return *internal_default_instance();
}


void CHTMLHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CHTMLHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CHTMLHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CHTMLHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CHTMLHeader.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CHTMLHeader.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CHTMLHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CHTMLHeader)
  return false;
#undef DO_
}

void CHTMLHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CHTMLHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLHeader.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CHTMLHeader)
}

::google::protobuf::uint8* CHTMLHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CHTMLHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLHeader.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHTMLHeader)
  return target;
}

size_t CHTMLHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHTMLHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHTMLHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHTMLHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CHTMLHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CHTMLHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHTMLHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHTMLHeader)
    MergeFrom(*source);
  }
}

void CHTMLHeader::MergeFrom(const CHTMLHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHTMLHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CHTMLHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHTMLHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHTMLHeader::CopyFrom(const CHTMLHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHTMLHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHTMLHeader::IsInitialized() const {
  return true;
}

void CHTMLHeader::Swap(CHTMLHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CHTMLHeader::InternalSwap(CHTMLHeader* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CHTMLHeader::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CHTMLPageSecurityInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CHTMLPageSecurityInfo::kBIsSecureFieldNumber;
const int CHTMLPageSecurityInfo::kBHasCertErrorFieldNumber;
const int CHTMLPageSecurityInfo::kIssuerNameFieldNumber;
const int CHTMLPageSecurityInfo::kCertNameFieldNumber;
const int CHTMLPageSecurityInfo::kCertExpiryFieldNumber;
const int CHTMLPageSecurityInfo::kNCertBitsFieldNumber;
const int CHTMLPageSecurityInfo::kBIsEVCertFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CHTMLPageSecurityInfo::CHTMLPageSecurityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CHTMLPageSecurityInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CHTMLPageSecurityInfo)
}
CHTMLPageSecurityInfo::CHTMLPageSecurityInfo(const CHTMLPageSecurityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_issuername()) {
    issuername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuername_);
  }
  certname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_certname()) {
    certname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certname_);
  }
  ::memcpy(&bissecure_, &from.bissecure_,
    static_cast<size_t>(reinterpret_cast<char*>(&ncertbits_) -
    reinterpret_cast<char*>(&bissecure_)) + sizeof(ncertbits_));
  // @@protoc_insertion_point(copy_constructor:CHTMLPageSecurityInfo)
}

void CHTMLPageSecurityInfo::SharedCtor() {
  issuername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bissecure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncertbits_) -
      reinterpret_cast<char*>(&bissecure_)) + sizeof(ncertbits_));
}

CHTMLPageSecurityInfo::~CHTMLPageSecurityInfo() {
  // @@protoc_insertion_point(destructor:CHTMLPageSecurityInfo)
  SharedDtor();
}

void CHTMLPageSecurityInfo::SharedDtor() {
  issuername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CHTMLPageSecurityInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CHTMLPageSecurityInfo::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CHTMLPageSecurityInfo& CHTMLPageSecurityInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CHTMLPageSecurityInfo.base);
  return *internal_default_instance();
}


void CHTMLPageSecurityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CHTMLPageSecurityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      issuername_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      certname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&bissecure_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ncertbits_) -
        reinterpret_cast<char*>(&bissecure_)) + sizeof(ncertbits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CHTMLPageSecurityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CHTMLPageSecurityInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bIsSecure = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bissecure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bissecure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bHasCertError = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bhascerterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhascerterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string issuerName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->issuername().data(), static_cast<int>(this->issuername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CHTMLPageSecurityInfo.issuerName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string certName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->certname().data(), static_cast<int>(this->certname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CHTMLPageSecurityInfo.certName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 certExpiry = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_certexpiry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &certexpiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nCertBits = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ncertbits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncertbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bIsEVCert = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bisevcert();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bisevcert_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CHTMLPageSecurityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CHTMLPageSecurityInfo)
  return false;
#undef DO_
}

void CHTMLPageSecurityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CHTMLPageSecurityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bIsSecure = 1 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bissecure(), output);
  }

  // optional bool bHasCertError = 2 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bhascerterror(), output);
  }

  // optional string issuerName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuername().data(), static_cast<int>(this->issuername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLPageSecurityInfo.issuerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->issuername(), output);
  }

  // optional string certName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->certname().data(), static_cast<int>(this->certname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLPageSecurityInfo.certName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->certname(), output);
  }

  // optional int32 certExpiry = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->certexpiry(), output);
  }

  // optional int32 nCertBits = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ncertbits(), output);
  }

  // optional bool bIsEVCert = 7 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bisevcert(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CHTMLPageSecurityInfo)
}

::google::protobuf::uint8* CHTMLPageSecurityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CHTMLPageSecurityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bIsSecure = 1 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bissecure(), target);
  }

  // optional bool bHasCertError = 2 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bhascerterror(), target);
  }

  // optional string issuerName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuername().data(), static_cast<int>(this->issuername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLPageSecurityInfo.issuerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->issuername(), target);
  }

  // optional string certName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->certname().data(), static_cast<int>(this->certname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CHTMLPageSecurityInfo.certName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->certname(), target);
  }

  // optional int32 certExpiry = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->certexpiry(), target);
  }

  // optional int32 nCertBits = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ncertbits(), target);
  }

  // optional bool bIsEVCert = 7 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bisevcert(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHTMLPageSecurityInfo)
  return target;
}

size_t CHTMLPageSecurityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHTMLPageSecurityInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string issuerName = 3;
    if (has_issuername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuername());
    }

    // optional string certName = 4;
    if (has_certname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->certname());
    }

    // optional bool bIsSecure = 1 [default = false];
    if (has_bissecure()) {
      total_size += 1 + 1;
    }

    // optional bool bHasCertError = 2 [default = false];
    if (has_bhascerterror()) {
      total_size += 1 + 1;
    }

    // optional bool bIsEVCert = 7 [default = false];
    if (has_bisevcert()) {
      total_size += 1 + 1;
    }

    // optional int32 certExpiry = 5 [default = 0];
    if (has_certexpiry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->certexpiry());
    }

    // optional int32 nCertBits = 6 [default = 0];
    if (has_ncertbits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ncertbits());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHTMLPageSecurityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHTMLPageSecurityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CHTMLPageSecurityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CHTMLPageSecurityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHTMLPageSecurityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHTMLPageSecurityInfo)
    MergeFrom(*source);
  }
}

void CHTMLPageSecurityInfo::MergeFrom(const CHTMLPageSecurityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHTMLPageSecurityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_issuername();
      issuername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_certname();
      certname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certname_);
    }
    if (cached_has_bits & 0x00000004u) {
      bissecure_ = from.bissecure_;
    }
    if (cached_has_bits & 0x00000008u) {
      bhascerterror_ = from.bhascerterror_;
    }
    if (cached_has_bits & 0x00000010u) {
      bisevcert_ = from.bisevcert_;
    }
    if (cached_has_bits & 0x00000020u) {
      certexpiry_ = from.certexpiry_;
    }
    if (cached_has_bits & 0x00000040u) {
      ncertbits_ = from.ncertbits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CHTMLPageSecurityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHTMLPageSecurityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHTMLPageSecurityInfo::CopyFrom(const CHTMLPageSecurityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHTMLPageSecurityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHTMLPageSecurityInfo::IsInitialized() const {
  return true;
}

void CHTMLPageSecurityInfo::Swap(CHTMLPageSecurityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CHTMLPageSecurityInfo::InternalSwap(CHTMLPageSecurityInfo* other) {
  using std::swap;
  issuername_.Swap(&other->issuername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certname_.Swap(&other->certname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bissecure_, other->bissecure_);
  swap(bhascerterror_, other->bhascerterror_);
  swap(bisevcert_, other->bisevcert_);
  swap(certexpiry_, other->certexpiry_);
  swap(ncertbits_, other->ncertbits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CHTMLPageSecurityInfo::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFinishedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFinishedRequest::kBrowserHandleFieldNumber;
const int CMsgFinishedRequest::kUrlFieldNumber;
const int CMsgFinishedRequest::kPageTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFinishedRequest::CMsgFinishedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFinishedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFinishedRequest)
}
CMsgFinishedRequest::CMsgFinishedRequest(const CMsgFinishedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pagetitle()) {
    pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFinishedRequest)
}

void CMsgFinishedRequest::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgFinishedRequest::~CMsgFinishedRequest() {
  // @@protoc_insertion_point(destructor:CMsgFinishedRequest)
  SharedDtor();
}

void CMsgFinishedRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgFinishedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFinishedRequest::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFinishedRequest& CMsgFinishedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFinishedRequest.base);
  return *internal_default_instance();
}


void CMsgFinishedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFinishedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pagetitle_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFinishedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFinishedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFinishedRequest.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pageTitle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pagetitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFinishedRequest.pageTitle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFinishedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFinishedRequest)
  return false;
#undef DO_
}

void CMsgFinishedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFinishedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFinishedRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string pageTitle = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFinishedRequest.pageTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pagetitle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFinishedRequest)
}

::google::protobuf::uint8* CMsgFinishedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFinishedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFinishedRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string pageTitle = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFinishedRequest.pageTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pagetitle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFinishedRequest)
  return target;
}

size_t CMsgFinishedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFinishedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string pageTitle = 3;
    if (has_pagetitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pagetitle());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFinishedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFinishedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFinishedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFinishedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFinishedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFinishedRequest)
    MergeFrom(*source);
  }
}

void CMsgFinishedRequest::MergeFrom(const CMsgFinishedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFinishedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pagetitle();
      pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFinishedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFinishedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFinishedRequest::CopyFrom(const CMsgFinishedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFinishedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFinishedRequest::IsInitialized() const {
  return true;
}

void CMsgFinishedRequest::Swap(CMsgFinishedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFinishedRequest::InternalSwap(CMsgFinishedRequest* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pagetitle_.Swap(&other->pagetitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFinishedRequest::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLoadedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLoadedRequest::kBrowserHandleFieldNumber;
const int CMsgLoadedRequest::kUrlFieldNumber;
const int CMsgLoadedRequest::kPageTitleFieldNumber;
const int CMsgLoadedRequest::kHeadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLoadedRequest::CMsgLoadedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgLoadedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLoadedRequest)
}
CMsgLoadedRequest::CMsgLoadedRequest(const CMsgLoadedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      headers_(from.headers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pagetitle()) {
    pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgLoadedRequest)
}

void CMsgLoadedRequest::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgLoadedRequest::~CMsgLoadedRequest() {
  // @@protoc_insertion_point(destructor:CMsgLoadedRequest)
  SharedDtor();
}

void CMsgLoadedRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pagetitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLoadedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgLoadedRequest::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLoadedRequest& CMsgLoadedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgLoadedRequest.base);
  return *internal_default_instance();
}


void CMsgLoadedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLoadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pagetitle_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLoadedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLoadedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLoadedRequest.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pageTitle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pagetitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLoadedRequest.pageTitle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CHTMLHeader headers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLoadedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLoadedRequest)
  return false;
#undef DO_
}

void CMsgLoadedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLoadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadedRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string pageTitle = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadedRequest.pageTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pagetitle(), output);
  }

  // repeated .CHTMLHeader headers = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->headers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLoadedRequest)
}

::google::protobuf::uint8* CMsgLoadedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLoadedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadedRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string pageTitle = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pagetitle().data(), static_cast<int>(this->pagetitle().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadedRequest.pageTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pagetitle(), target);
  }

  // repeated .CHTMLHeader headers = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->headers(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLoadedRequest)
  return target;
}

size_t CMsgLoadedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLoadedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CHTMLHeader headers = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->headers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string pageTitle = 3;
    if (has_pagetitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pagetitle());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLoadedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLoadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLoadedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLoadedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLoadedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLoadedRequest)
    MergeFrom(*source);
  }
}

void CMsgLoadedRequest::MergeFrom(const CMsgLoadedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLoadedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pagetitle();
      pagetitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pagetitle_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLoadedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLoadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLoadedRequest::CopyFrom(const CMsgLoadedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLoadedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLoadedRequest::IsInitialized() const {
  return true;
}

void CMsgLoadedRequest::Swap(CMsgLoadedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLoadedRequest::InternalSwap(CMsgLoadedRequest* other) {
  using std::swap;
  CastToBase(&headers_)->InternalSwap(CastToBase(&other->headers_));
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pagetitle_.Swap(&other->pagetitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgLoadedRequest::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPageSecurity::InitAsDefaultInstance() {
  ::_CMsgPageSecurity_default_instance_._instance.get_mutable()->security_info_ = const_cast< ::CHTMLPageSecurityInfo*>(
      ::CHTMLPageSecurityInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPageSecurity::kBrowserHandleFieldNumber;
const int CMsgPageSecurity::kUrlFieldNumber;
const int CMsgPageSecurity::kSecurityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPageSecurity::CMsgPageSecurity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPageSecurity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPageSecurity)
}
CMsgPageSecurity::CMsgPageSecurity(const CMsgPageSecurity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_security_info()) {
    security_info_ = new ::CHTMLPageSecurityInfo(*from.security_info_);
  } else {
    security_info_ = NULL;
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgPageSecurity)
}

void CMsgPageSecurity::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_handle_) -
      reinterpret_cast<char*>(&security_info_)) + sizeof(browser_handle_));
}

CMsgPageSecurity::~CMsgPageSecurity() {
  // @@protoc_insertion_point(destructor:CMsgPageSecurity)
  SharedDtor();
}

void CMsgPageSecurity::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_info_;
}

void CMsgPageSecurity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPageSecurity::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPageSecurity& CMsgPageSecurity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPageSecurity.base);
  return *internal_default_instance();
}


void CMsgPageSecurity::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPageSecurity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(security_info_ != NULL);
      security_info_->Clear();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPageSecurity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPageSecurity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPageSecurity.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CHTMLPageSecurityInfo security_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPageSecurity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPageSecurity)
  return false;
#undef DO_
}

void CMsgPageSecurity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPageSecurity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPageSecurity.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional .CHTMLPageSecurityInfo security_info = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_security_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPageSecurity)
}

::google::protobuf::uint8* CMsgPageSecurity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPageSecurity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPageSecurity.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional .CHTMLPageSecurityInfo security_info = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_security_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPageSecurity)
  return target;
}

size_t CMsgPageSecurity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPageSecurity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .CHTMLPageSecurityInfo security_info = 3;
    if (has_security_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *security_info_);
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPageSecurity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPageSecurity)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPageSecurity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPageSecurity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPageSecurity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPageSecurity)
    MergeFrom(*source);
  }
}

void CMsgPageSecurity::MergeFrom(const CMsgPageSecurity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPageSecurity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_security_info()->::CHTMLPageSecurityInfo::MergeFrom(from.security_info());
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPageSecurity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPageSecurity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPageSecurity::CopyFrom(const CMsgPageSecurity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPageSecurity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPageSecurity::IsInitialized() const {
  return true;
}

void CMsgPageSecurity::Swap(CMsgPageSecurity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPageSecurity::InternalSwap(CMsgPageSecurity* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(security_info_, other->security_info_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPageSecurity::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStartRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStartRequest::kBrowserHandleFieldNumber;
const int CMsgStartRequest::kUrlFieldNumber;
const int CMsgStartRequest::kTargetFieldNumber;
const int CMsgStartRequest::kPostDataFieldNumber;
const int CMsgStartRequest::kBIsRedirectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStartRequest::CMsgStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgStartRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStartRequest)
}
CMsgStartRequest::CMsgStartRequest(const CMsgStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  postdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_postdata()) {
    postdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postdata_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&bisredirect_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(bisredirect_));
  // @@protoc_insertion_point(copy_constructor:CMsgStartRequest)
}

void CMsgStartRequest::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bisredirect_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(bisredirect_));
}

CMsgStartRequest::~CMsgStartRequest() {
  // @@protoc_insertion_point(destructor:CMsgStartRequest)
  SharedDtor();
}

void CMsgStartRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgStartRequest::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStartRequest& CMsgStartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgStartRequest.base);
  return *internal_default_instance();
}


void CMsgStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      target_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      postdata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bisredirect_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(bisredirect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgStartRequest.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgStartRequest.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string postData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->postdata().data(), static_cast<int>(this->postdata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgStartRequest.postData");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bIsRedirect = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bisredirect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bisredirect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStartRequest)
  return false;
#undef DO_
}

void CMsgStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string target = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target(), output);
  }

  // optional string postData = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postdata().data(), static_cast<int>(this->postdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.postData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->postdata(), output);
  }

  // optional bool bIsRedirect = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bisredirect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStartRequest)
}

::google::protobuf::uint8* CMsgStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string target = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target(), target);
  }

  // optional string postData = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->postdata().data(), static_cast<int>(this->postdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStartRequest.postData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->postdata(), target);
  }

  // optional bool bIsRedirect = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bisredirect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStartRequest)
  return target;
}

size_t CMsgStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string target = 3;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target());
    }

    // optional string postData = 4;
    if (has_postdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->postdata());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bIsRedirect = 5;
    if (has_bisredirect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStartRequest)
    MergeFrom(*source);
  }
}

void CMsgStartRequest::MergeFrom(const CMsgStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_postdata();
      postdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postdata_);
    }
    if (cached_has_bits & 0x00000008u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      bisredirect_ = from.bisredirect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStartRequest::CopyFrom(const CMsgStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStartRequest::IsInitialized() const {
  return true;
}

void CMsgStartRequest::Swap(CMsgStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStartRequest::InternalSwap(CMsgStartRequest* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  postdata_.Swap(&other->postdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(bisredirect_, other->bisredirect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgStartRequest::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStartRequestResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStartRequestResponse::kBrowserHandleFieldNumber;
const int CMsgStartRequestResponse::kBAllowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStartRequestResponse::CMsgStartRequestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgStartRequestResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStartRequestResponse)
}
CMsgStartRequestResponse::CMsgStartRequestResponse(const CMsgStartRequestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&ballow_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
  // @@protoc_insertion_point(copy_constructor:CMsgStartRequestResponse)
}

void CMsgStartRequestResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ballow_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
}

CMsgStartRequestResponse::~CMsgStartRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgStartRequestResponse)
  SharedDtor();
}

void CMsgStartRequestResponse::SharedDtor() {
}

void CMsgStartRequestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgStartRequestResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStartRequestResponse& CMsgStartRequestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgStartRequestResponse.base);
  return *internal_default_instance();
}


void CMsgStartRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStartRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ballow_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStartRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStartRequestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bAllow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ballow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ballow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStartRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStartRequestResponse)
  return false;
#undef DO_
}

void CMsgStartRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStartRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool bAllow = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ballow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStartRequestResponse)
}

::google::protobuf::uint8* CMsgStartRequestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStartRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool bAllow = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ballow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStartRequestResponse)
  return target;
}

size_t CMsgStartRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStartRequestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bAllow = 2;
    if (has_ballow()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgStartRequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStartRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStartRequestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStartRequestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStartRequestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStartRequestResponse)
    MergeFrom(*source);
  }
}

void CMsgStartRequestResponse::MergeFrom(const CMsgStartRequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStartRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      ballow_ = from.ballow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgStartRequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStartRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStartRequestResponse::CopyFrom(const CMsgStartRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStartRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStartRequestResponse::IsInitialized() const {
  return true;
}

void CMsgStartRequestResponse::Swap(CMsgStartRequestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStartRequestResponse::InternalSwap(CMsgStartRequestResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(ballow_, other->ballow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgStartRequestResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgShowPopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgShowPopup::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgShowPopup::CMsgShowPopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgShowPopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgShowPopup)
}
CMsgShowPopup::CMsgShowPopup(const CMsgShowPopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgShowPopup)
}

void CMsgShowPopup::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgShowPopup::~CMsgShowPopup() {
  // @@protoc_insertion_point(destructor:CMsgShowPopup)
  SharedDtor();
}

void CMsgShowPopup::SharedDtor() {
}

void CMsgShowPopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgShowPopup::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgShowPopup& CMsgShowPopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgShowPopup.base);
  return *internal_default_instance();
}


void CMsgShowPopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgShowPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgShowPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgShowPopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgShowPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgShowPopup)
  return false;
#undef DO_
}

void CMsgShowPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgShowPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgShowPopup)
}

::google::protobuf::uint8* CMsgShowPopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgShowPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgShowPopup)
  return target;
}

size_t CMsgShowPopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgShowPopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgShowPopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgShowPopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgShowPopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgShowPopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgShowPopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgShowPopup)
    MergeFrom(*source);
  }
}

void CMsgShowPopup::MergeFrom(const CMsgShowPopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgShowPopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgShowPopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgShowPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShowPopup::CopyFrom(const CMsgShowPopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgShowPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShowPopup::IsInitialized() const {
  return true;
}

void CMsgShowPopup::Swap(CMsgShowPopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgShowPopup::InternalSwap(CMsgShowPopup* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgShowPopup::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHidePopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHidePopup::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHidePopup::CMsgHidePopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgHidePopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHidePopup)
}
CMsgHidePopup::CMsgHidePopup(const CMsgHidePopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgHidePopup)
}

void CMsgHidePopup::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgHidePopup::~CMsgHidePopup() {
  // @@protoc_insertion_point(destructor:CMsgHidePopup)
  SharedDtor();
}

void CMsgHidePopup::SharedDtor() {
}

void CMsgHidePopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHidePopup::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHidePopup& CMsgHidePopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgHidePopup.base);
  return *internal_default_instance();
}


void CMsgHidePopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHidePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHidePopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHidePopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHidePopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHidePopup)
  return false;
#undef DO_
}

void CMsgHidePopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHidePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHidePopup)
}

::google::protobuf::uint8* CMsgHidePopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHidePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHidePopup)
  return target;
}

size_t CMsgHidePopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHidePopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHidePopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHidePopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHidePopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHidePopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHidePopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHidePopup)
    MergeFrom(*source);
  }
}

void CMsgHidePopup::MergeFrom(const CMsgHidePopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHidePopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgHidePopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHidePopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHidePopup::CopyFrom(const CMsgHidePopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHidePopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHidePopup::IsInitialized() const {
  return true;
}

void CMsgHidePopup::Swap(CMsgHidePopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHidePopup::InternalSwap(CMsgHidePopup* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHidePopup::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSizePopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSizePopup::kBrowserHandleFieldNumber;
const int CMsgSizePopup::kXFieldNumber;
const int CMsgSizePopup::kYFieldNumber;
const int CMsgSizePopup::kWideFieldNumber;
const int CMsgSizePopup::kTallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSizePopup::CMsgSizePopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSizePopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSizePopup)
}
CMsgSizePopup::CMsgSizePopup(const CMsgSizePopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&tall_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
  // @@protoc_insertion_point(copy_constructor:CMsgSizePopup)
}

void CMsgSizePopup::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tall_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
}

CMsgSizePopup::~CMsgSizePopup() {
  // @@protoc_insertion_point(destructor:CMsgSizePopup)
  SharedDtor();
}

void CMsgSizePopup::SharedDtor() {
}

void CMsgSizePopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSizePopup::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSizePopup& CMsgSizePopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSizePopup.base);
  return *internal_default_instance();
}


void CMsgSizePopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSizePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tall_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSizePopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSizePopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wide = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_wide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tall = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tall();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSizePopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSizePopup)
  return false;
#undef DO_
}

void CMsgSizePopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSizePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional uint32 wide = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wide(), output);
  }

  // optional uint32 tall = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tall(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSizePopup)
}

::google::protobuf::uint8* CMsgSizePopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSizePopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional uint32 wide = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wide(), target);
  }

  // optional uint32 tall = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tall(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSizePopup)
  return target;
}

size_t CMsgSizePopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSizePopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional uint32 wide = 4;
    if (has_wide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wide());
    }

    // optional uint32 tall = 5;
    if (has_tall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tall());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSizePopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSizePopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSizePopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSizePopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSizePopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSizePopup)
    MergeFrom(*source);
  }
}

void CMsgSizePopup::MergeFrom(const CMsgSizePopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSizePopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      wide_ = from.wide_;
    }
    if (cached_has_bits & 0x00000010u) {
      tall_ = from.tall_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSizePopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSizePopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSizePopup::CopyFrom(const CMsgSizePopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSizePopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSizePopup::IsInitialized() const {
  return true;
}

void CMsgSizePopup::Swap(CMsgSizePopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSizePopup::InternalSwap(CMsgSizePopup* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(wide_, other->wide_);
  swap(tall_, other->tall_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSizePopup::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgOpenNewTab::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgOpenNewTab::kBrowserHandleFieldNumber;
const int CMsgOpenNewTab::kUrlFieldNumber;
const int CMsgOpenNewTab::kBForegroundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgOpenNewTab::CMsgOpenNewTab()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgOpenNewTab.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgOpenNewTab)
}
CMsgOpenNewTab::CMsgOpenNewTab(const CMsgOpenNewTab& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&bforeground_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(bforeground_));
  // @@protoc_insertion_point(copy_constructor:CMsgOpenNewTab)
}

void CMsgOpenNewTab::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bforeground_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(bforeground_));
}

CMsgOpenNewTab::~CMsgOpenNewTab() {
  // @@protoc_insertion_point(destructor:CMsgOpenNewTab)
  SharedDtor();
}

void CMsgOpenNewTab::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgOpenNewTab::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgOpenNewTab::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgOpenNewTab& CMsgOpenNewTab::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgOpenNewTab.base);
  return *internal_default_instance();
}


void CMsgOpenNewTab::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgOpenNewTab)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bforeground_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(bforeground_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgOpenNewTab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgOpenNewTab)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgOpenNewTab.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bForeground = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bforeground();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bforeground_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgOpenNewTab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgOpenNewTab)
  return false;
#undef DO_
}

void CMsgOpenNewTab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgOpenNewTab)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenNewTab.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional bool bForeground = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bforeground(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgOpenNewTab)
}

::google::protobuf::uint8* CMsgOpenNewTab::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgOpenNewTab)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenNewTab.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional bool bForeground = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bforeground(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgOpenNewTab)
  return target;
}

size_t CMsgOpenNewTab::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgOpenNewTab)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bForeground = 3;
    if (has_bforeground()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgOpenNewTab::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgOpenNewTab)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgOpenNewTab* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgOpenNewTab>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgOpenNewTab)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgOpenNewTab)
    MergeFrom(*source);
  }
}

void CMsgOpenNewTab::MergeFrom(const CMsgOpenNewTab& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgOpenNewTab)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      bforeground_ = from.bforeground_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgOpenNewTab::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgOpenNewTab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenNewTab::CopyFrom(const CMsgOpenNewTab& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgOpenNewTab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenNewTab::IsInitialized() const {
  return true;
}

void CMsgOpenNewTab::Swap(CMsgOpenNewTab* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgOpenNewTab::InternalSwap(CMsgOpenNewTab* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(bforeground_, other->bforeground_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgOpenNewTab::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPopupHTMLWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPopupHTMLWindow::kBrowserHandleFieldNumber;
const int CMsgPopupHTMLWindow::kUrlFieldNumber;
const int CMsgPopupHTMLWindow::kXFieldNumber;
const int CMsgPopupHTMLWindow::kYFieldNumber;
const int CMsgPopupHTMLWindow::kWideFieldNumber;
const int CMsgPopupHTMLWindow::kTallFieldNumber;
const int CMsgPopupHTMLWindow::kPopupIndexFieldNumber;
const int CMsgPopupHTMLWindow::kTrustedCreatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPopupHTMLWindow::CMsgPopupHTMLWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPopupHTMLWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPopupHTMLWindow)
}
CMsgPopupHTMLWindow::CMsgPopupHTMLWindow(const CMsgPopupHTMLWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgPopupHTMLWindow)
}

void CMsgPopupHTMLWindow::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trusted_creator_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(trusted_creator_));
  x_ = (~0x7fffffff);
  y_ = (~0x7fffffff);
}

CMsgPopupHTMLWindow::~CMsgPopupHTMLWindow() {
  // @@protoc_insertion_point(destructor:CMsgPopupHTMLWindow)
  SharedDtor();
}

void CMsgPopupHTMLWindow::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgPopupHTMLWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPopupHTMLWindow::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPopupHTMLWindow& CMsgPopupHTMLWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPopupHTMLWindow.base);
  return *internal_default_instance();
}


void CMsgPopupHTMLWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPopupHTMLWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trusted_creator_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(trusted_creator_));
    x_ = (~0x7fffffff);
    y_ = (~0x7fffffff);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPopupHTMLWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPopupHTMLWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPopupHTMLWindow.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 3 [default = -2147483648];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 4 [default = -2147483648];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wide = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_wide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tall = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_tall();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 popup_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_popup_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &popup_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool trusted_creator = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_trusted_creator();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trusted_creator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPopupHTMLWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPopupHTMLWindow)
  return false;
#undef DO_
}

void CMsgPopupHTMLWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPopupHTMLWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPopupHTMLWindow.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional int32 x = 3 [default = -2147483648];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // optional int32 y = 4 [default = -2147483648];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // optional uint32 wide = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wide(), output);
  }

  // optional uint32 tall = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tall(), output);
  }

  // optional uint32 popup_index = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->popup_index(), output);
  }

  // optional bool trusted_creator = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->trusted_creator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPopupHTMLWindow)
}

::google::protobuf::uint8* CMsgPopupHTMLWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPopupHTMLWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPopupHTMLWindow.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional int32 x = 3 [default = -2147483648];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // optional int32 y = 4 [default = -2147483648];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // optional uint32 wide = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wide(), target);
  }

  // optional uint32 tall = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tall(), target);
  }

  // optional uint32 popup_index = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->popup_index(), target);
  }

  // optional bool trusted_creator = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->trusted_creator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPopupHTMLWindow)
  return target;
}

size_t CMsgPopupHTMLWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPopupHTMLWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 wide = 5;
    if (has_wide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wide());
    }

    // optional uint32 tall = 6;
    if (has_tall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tall());
    }

    // optional uint32 popup_index = 7;
    if (has_popup_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->popup_index());
    }

    // optional bool trusted_creator = 8;
    if (has_trusted_creator()) {
      total_size += 1 + 1;
    }

    // optional int32 x = 3 [default = -2147483648];
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 4 [default = -2147483648];
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPopupHTMLWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPopupHTMLWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPopupHTMLWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPopupHTMLWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPopupHTMLWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPopupHTMLWindow)
    MergeFrom(*source);
  }
}

void CMsgPopupHTMLWindow::MergeFrom(const CMsgPopupHTMLWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPopupHTMLWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      wide_ = from.wide_;
    }
    if (cached_has_bits & 0x00000008u) {
      tall_ = from.tall_;
    }
    if (cached_has_bits & 0x00000010u) {
      popup_index_ = from.popup_index_;
    }
    if (cached_has_bits & 0x00000020u) {
      trusted_creator_ = from.trusted_creator_;
    }
    if (cached_has_bits & 0x00000040u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000080u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPopupHTMLWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPopupHTMLWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPopupHTMLWindow::CopyFrom(const CMsgPopupHTMLWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPopupHTMLWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPopupHTMLWindow::IsInitialized() const {
  return true;
}

void CMsgPopupHTMLWindow::Swap(CMsgPopupHTMLWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPopupHTMLWindow::InternalSwap(CMsgPopupHTMLWindow* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(wide_, other->wide_);
  swap(tall_, other->tall_);
  swap(popup_index_, other->popup_index_);
  swap(trusted_creator_, other->trusted_creator_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPopupHTMLWindow::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPopupHTMLWindowResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPopupHTMLWindowResponse::kBrowserHandleFieldNumber;
const int CMsgPopupHTMLWindowResponse::kBAllowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPopupHTMLWindowResponse::CMsgPopupHTMLWindowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPopupHTMLWindowResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPopupHTMLWindowResponse)
}
CMsgPopupHTMLWindowResponse::CMsgPopupHTMLWindowResponse(const CMsgPopupHTMLWindowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&ballow_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
  // @@protoc_insertion_point(copy_constructor:CMsgPopupHTMLWindowResponse)
}

void CMsgPopupHTMLWindowResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ballow_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
}

CMsgPopupHTMLWindowResponse::~CMsgPopupHTMLWindowResponse() {
  // @@protoc_insertion_point(destructor:CMsgPopupHTMLWindowResponse)
  SharedDtor();
}

void CMsgPopupHTMLWindowResponse::SharedDtor() {
}

void CMsgPopupHTMLWindowResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPopupHTMLWindowResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPopupHTMLWindowResponse& CMsgPopupHTMLWindowResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPopupHTMLWindowResponse.base);
  return *internal_default_instance();
}


void CMsgPopupHTMLWindowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPopupHTMLWindowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ballow_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(ballow_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPopupHTMLWindowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPopupHTMLWindowResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bAllow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ballow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ballow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPopupHTMLWindowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPopupHTMLWindowResponse)
  return false;
#undef DO_
}

void CMsgPopupHTMLWindowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPopupHTMLWindowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool bAllow = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ballow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPopupHTMLWindowResponse)
}

::google::protobuf::uint8* CMsgPopupHTMLWindowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPopupHTMLWindowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool bAllow = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ballow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPopupHTMLWindowResponse)
  return target;
}

size_t CMsgPopupHTMLWindowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPopupHTMLWindowResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bAllow = 2;
    if (has_ballow()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPopupHTMLWindowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPopupHTMLWindowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPopupHTMLWindowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPopupHTMLWindowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPopupHTMLWindowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPopupHTMLWindowResponse)
    MergeFrom(*source);
  }
}

void CMsgPopupHTMLWindowResponse::MergeFrom(const CMsgPopupHTMLWindowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPopupHTMLWindowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      ballow_ = from.ballow_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPopupHTMLWindowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPopupHTMLWindowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPopupHTMLWindowResponse::CopyFrom(const CMsgPopupHTMLWindowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPopupHTMLWindowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPopupHTMLWindowResponse::IsInitialized() const {
  return true;
}

void CMsgPopupHTMLWindowResponse::Swap(CMsgPopupHTMLWindowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPopupHTMLWindowResponse::InternalSwap(CMsgPopupHTMLWindowResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(ballow_, other->ballow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPopupHTMLWindowResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetHTMLTitle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetHTMLTitle::kBrowserHandleFieldNumber;
const int CMsgSetHTMLTitle::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetHTMLTitle::CMsgSetHTMLTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetHTMLTitle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetHTMLTitle)
}
CMsgSetHTMLTitle::CMsgSetHTMLTitle(const CMsgSetHTMLTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgSetHTMLTitle)
}

void CMsgSetHTMLTitle::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgSetHTMLTitle::~CMsgSetHTMLTitle() {
  // @@protoc_insertion_point(destructor:CMsgSetHTMLTitle)
  SharedDtor();
}

void CMsgSetHTMLTitle::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetHTMLTitle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetHTMLTitle::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetHTMLTitle& CMsgSetHTMLTitle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetHTMLTitle.base);
  return *internal_default_instance();
}


void CMsgSetHTMLTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetHTMLTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    title_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetHTMLTitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetHTMLTitle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetHTMLTitle.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetHTMLTitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetHTMLTitle)
  return false;
#undef DO_
}

void CMsgSetHTMLTitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetHTMLTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetHTMLTitle.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetHTMLTitle)
}

::google::protobuf::uint8* CMsgSetHTMLTitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetHTMLTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetHTMLTitle.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetHTMLTitle)
  return target;
}

size_t CMsgSetHTMLTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetHTMLTitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetHTMLTitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetHTMLTitle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetHTMLTitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetHTMLTitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetHTMLTitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetHTMLTitle)
    MergeFrom(*source);
  }
}

void CMsgSetHTMLTitle::MergeFrom(const CMsgSetHTMLTitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetHTMLTitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetHTMLTitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetHTMLTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetHTMLTitle::CopyFrom(const CMsgSetHTMLTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetHTMLTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetHTMLTitle::IsInitialized() const {
  return true;
}

void CMsgSetHTMLTitle::Swap(CMsgSetHTMLTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetHTMLTitle::InternalSwap(CMsgSetHTMLTitle* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetHTMLTitle::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLoadingResource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLoadingResource::kBrowserHandleFieldNumber;
const int CMsgLoadingResource::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLoadingResource::CMsgLoadingResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgLoadingResource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLoadingResource)
}
CMsgLoadingResource::CMsgLoadingResource(const CMsgLoadingResource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgLoadingResource)
}

void CMsgLoadingResource::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgLoadingResource::~CMsgLoadingResource() {
  // @@protoc_insertion_point(destructor:CMsgLoadingResource)
  SharedDtor();
}

void CMsgLoadingResource::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLoadingResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgLoadingResource::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLoadingResource& CMsgLoadingResource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgLoadingResource.base);
  return *internal_default_instance();
}


void CMsgLoadingResource::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLoadingResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLoadingResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLoadingResource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLoadingResource.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLoadingResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLoadingResource)
  return false;
#undef DO_
}

void CMsgLoadingResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLoadingResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadingResource.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLoadingResource)
}

::google::protobuf::uint8* CMsgLoadingResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLoadingResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadingResource.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLoadingResource)
  return target;
}

size_t CMsgLoadingResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLoadingResource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLoadingResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLoadingResource)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLoadingResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLoadingResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLoadingResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLoadingResource)
    MergeFrom(*source);
  }
}

void CMsgLoadingResource::MergeFrom(const CMsgLoadingResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLoadingResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLoadingResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLoadingResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLoadingResource::CopyFrom(const CMsgLoadingResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLoadingResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLoadingResource::IsInitialized() const {
  return true;
}

void CMsgLoadingResource::Swap(CMsgLoadingResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLoadingResource::InternalSwap(CMsgLoadingResource* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgLoadingResource::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStatusText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStatusText::kBrowserHandleFieldNumber;
const int CMsgStatusText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStatusText::CMsgStatusText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgStatusText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStatusText)
}
CMsgStatusText::CMsgStatusText(const CMsgStatusText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgStatusText)
}

void CMsgStatusText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgStatusText::~CMsgStatusText() {
  // @@protoc_insertion_point(destructor:CMsgStatusText)
  SharedDtor();
}

void CMsgStatusText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgStatusText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgStatusText::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStatusText& CMsgStatusText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgStatusText.base);
  return *internal_default_instance();
}


void CMsgStatusText::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStatusText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStatusText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStatusText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgStatusText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStatusText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStatusText)
  return false;
#undef DO_
}

void CMsgStatusText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStatusText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStatusText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStatusText)
}

::google::protobuf::uint8* CMsgStatusText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStatusText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStatusText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStatusText)
  return target;
}

size_t CMsgStatusText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStatusText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgStatusText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStatusText)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStatusText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStatusText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStatusText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStatusText)
    MergeFrom(*source);
  }
}

void CMsgStatusText::MergeFrom(const CMsgStatusText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStatusText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgStatusText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStatusText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStatusText::CopyFrom(const CMsgStatusText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStatusText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStatusText::IsInitialized() const {
  return true;
}

void CMsgStatusText::Swap(CMsgStatusText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStatusText::InternalSwap(CMsgStatusText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgStatusText::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetCursor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetCursor::kBrowserHandleFieldNumber;
const int CMsgSetCursor::kCursorFieldNumber;
const int CMsgSetCursor::kCustomDataFieldNumber;
const int CMsgSetCursor::kWideFieldNumber;
const int CMsgSetCursor::kTallFieldNumber;
const int CMsgSetCursor::kXhotspotFieldNumber;
const int CMsgSetCursor::kYhotspotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetCursor::CMsgSetCursor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetCursor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetCursor)
}
CMsgSetCursor::CMsgSetCursor(const CMsgSetCursor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  custom_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_data()) {
    custom_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_data_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&yhotspot_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(yhotspot_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetCursor)
}

void CMsgSetCursor::SharedCtor() {
  custom_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yhotspot_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(yhotspot_));
}

CMsgSetCursor::~CMsgSetCursor() {
  // @@protoc_insertion_point(destructor:CMsgSetCursor)
  SharedDtor();
}

void CMsgSetCursor::SharedDtor() {
  custom_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetCursor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetCursor::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetCursor& CMsgSetCursor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetCursor.base);
  return *internal_default_instance();
}


void CMsgSetCursor::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetCursor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    custom_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yhotspot_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(yhotspot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetCursor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetCursor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cursor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cursor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cursor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes custom_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_custom_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wide = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_wide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tall = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tall();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xhotspot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_xhotspot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xhotspot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 yhotspot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_yhotspot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yhotspot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetCursor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetCursor)
  return false;
#undef DO_
}

void CMsgSetCursor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetCursor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 cursor = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cursor(), output);
  }

  // optional bytes custom_data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->custom_data(), output);
  }

  // optional uint32 wide = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->wide(), output);
  }

  // optional uint32 tall = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tall(), output);
  }

  // optional uint32 xhotspot = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->xhotspot(), output);
  }

  // optional uint32 yhotspot = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->yhotspot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetCursor)
}

::google::protobuf::uint8* CMsgSetCursor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetCursor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 cursor = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cursor(), target);
  }

  // optional bytes custom_data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->custom_data(), target);
  }

  // optional uint32 wide = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->wide(), target);
  }

  // optional uint32 tall = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tall(), target);
  }

  // optional uint32 xhotspot = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->xhotspot(), target);
  }

  // optional uint32 yhotspot = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->yhotspot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetCursor)
  return target;
}

size_t CMsgSetCursor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetCursor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes custom_data = 3;
    if (has_custom_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->custom_data());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 cursor = 2;
    if (has_cursor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cursor());
    }

    // optional uint32 wide = 4;
    if (has_wide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wide());
    }

    // optional uint32 tall = 5;
    if (has_tall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tall());
    }

    // optional uint32 xhotspot = 6;
    if (has_xhotspot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xhotspot());
    }

    // optional uint32 yhotspot = 7;
    if (has_yhotspot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yhotspot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetCursor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetCursor)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetCursor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetCursor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetCursor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetCursor)
    MergeFrom(*source);
  }
}

void CMsgSetCursor::MergeFrom(const CMsgSetCursor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetCursor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_custom_data();
      custom_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      cursor_ = from.cursor_;
    }
    if (cached_has_bits & 0x00000008u) {
      wide_ = from.wide_;
    }
    if (cached_has_bits & 0x00000010u) {
      tall_ = from.tall_;
    }
    if (cached_has_bits & 0x00000020u) {
      xhotspot_ = from.xhotspot_;
    }
    if (cached_has_bits & 0x00000040u) {
      yhotspot_ = from.yhotspot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetCursor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetCursor::CopyFrom(const CMsgSetCursor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetCursor::IsInitialized() const {
  return true;
}

void CMsgSetCursor::Swap(CMsgSetCursor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetCursor::InternalSwap(CMsgSetCursor* other) {
  using std::swap;
  custom_data_.Swap(&other->custom_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(cursor_, other->cursor_);
  swap(wide_, other->wide_);
  swap(tall_, other->tall_);
  swap(xhotspot_, other->xhotspot_);
  swap(yhotspot_, other->yhotspot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetCursor::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFileLoadDialog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFileLoadDialog::kBrowserHandleFieldNumber;
const int CMsgFileLoadDialog::kTitleFieldNumber;
const int CMsgFileLoadDialog::kInitialFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFileLoadDialog::CMsgFileLoadDialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFileLoadDialog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFileLoadDialog)
}
CMsgFileLoadDialog::CMsgFileLoadDialog(const CMsgFileLoadDialog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  initialfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_initialfile()) {
    initialfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initialfile_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFileLoadDialog)
}

void CMsgFileLoadDialog::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initialfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgFileLoadDialog::~CMsgFileLoadDialog() {
  // @@protoc_insertion_point(destructor:CMsgFileLoadDialog)
  SharedDtor();
}

void CMsgFileLoadDialog::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initialfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgFileLoadDialog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFileLoadDialog::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFileLoadDialog& CMsgFileLoadDialog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFileLoadDialog.base);
  return *internal_default_instance();
}


void CMsgFileLoadDialog::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFileLoadDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      initialfile_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFileLoadDialog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFileLoadDialog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFileLoadDialog.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string initialFile = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initialfile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initialfile().data(), static_cast<int>(this->initialfile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFileLoadDialog.initialFile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFileLoadDialog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFileLoadDialog)
  return false;
#undef DO_
}

void CMsgFileLoadDialog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFileLoadDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialog.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string initialFile = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initialfile().data(), static_cast<int>(this->initialfile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialog.initialFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->initialfile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFileLoadDialog)
}

::google::protobuf::uint8* CMsgFileLoadDialog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFileLoadDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialog.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string initialFile = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initialfile().data(), static_cast<int>(this->initialfile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialog.initialFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->initialfile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFileLoadDialog)
  return target;
}

size_t CMsgFileLoadDialog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFileLoadDialog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string initialFile = 3;
    if (has_initialfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initialfile());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFileLoadDialog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFileLoadDialog)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFileLoadDialog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFileLoadDialog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFileLoadDialog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFileLoadDialog)
    MergeFrom(*source);
  }
}

void CMsgFileLoadDialog::MergeFrom(const CMsgFileLoadDialog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFileLoadDialog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_initialfile();
      initialfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initialfile_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFileLoadDialog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFileLoadDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFileLoadDialog::CopyFrom(const CMsgFileLoadDialog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFileLoadDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFileLoadDialog::IsInitialized() const {
  return true;
}

void CMsgFileLoadDialog::Swap(CMsgFileLoadDialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFileLoadDialog::InternalSwap(CMsgFileLoadDialog* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  initialfile_.Swap(&other->initialfile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFileLoadDialog::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFileLoadDialogResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFileLoadDialogResponse::kBrowserHandleFieldNumber;
const int CMsgFileLoadDialogResponse::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFileLoadDialogResponse::CMsgFileLoadDialogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFileLoadDialogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFileLoadDialogResponse)
}
CMsgFileLoadDialogResponse::CMsgFileLoadDialogResponse(const CMsgFileLoadDialogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFileLoadDialogResponse)
}

void CMsgFileLoadDialogResponse::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgFileLoadDialogResponse::~CMsgFileLoadDialogResponse() {
  // @@protoc_insertion_point(destructor:CMsgFileLoadDialogResponse)
  SharedDtor();
}

void CMsgFileLoadDialogResponse::SharedDtor() {
}

void CMsgFileLoadDialogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFileLoadDialogResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFileLoadDialogResponse& CMsgFileLoadDialogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFileLoadDialogResponse.base);
  return *internal_default_instance();
}


void CMsgFileLoadDialogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFileLoadDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFileLoadDialogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFileLoadDialogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_files()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->files(this->files_size() - 1).data(),
            static_cast<int>(this->files(this->files_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFileLoadDialogResponse.files");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFileLoadDialogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFileLoadDialogResponse)
  return false;
#undef DO_
}

void CMsgFileLoadDialogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFileLoadDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // repeated string files = 2;
  for (int i = 0, n = this->files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->files(i).data(), static_cast<int>(this->files(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialogResponse.files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->files(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFileLoadDialogResponse)
}

::google::protobuf::uint8* CMsgFileLoadDialogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFileLoadDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // repeated string files = 2;
  for (int i = 0, n = this->files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->files(i).data(), static_cast<int>(this->files(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFileLoadDialogResponse.files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->files(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFileLoadDialogResponse)
  return target;
}

size_t CMsgFileLoadDialogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFileLoadDialogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string files = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->files_size());
  for (int i = 0, n = this->files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->files(i));
  }

  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFileLoadDialogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFileLoadDialogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFileLoadDialogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFileLoadDialogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFileLoadDialogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFileLoadDialogResponse)
    MergeFrom(*source);
  }
}

void CMsgFileLoadDialogResponse::MergeFrom(const CMsgFileLoadDialogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFileLoadDialogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgFileLoadDialogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFileLoadDialogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFileLoadDialogResponse::CopyFrom(const CMsgFileLoadDialogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFileLoadDialogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFileLoadDialogResponse::IsInitialized() const {
  return true;
}

void CMsgFileLoadDialogResponse::Swap(CMsgFileLoadDialogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFileLoadDialogResponse::InternalSwap(CMsgFileLoadDialogResponse* other) {
  using std::swap;
  files_.InternalSwap(CastToBase(&other->files_));
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFileLoadDialogResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgShowToolTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgShowToolTip::kBrowserHandleFieldNumber;
const int CMsgShowToolTip::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgShowToolTip::CMsgShowToolTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgShowToolTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgShowToolTip)
}
CMsgShowToolTip::CMsgShowToolTip(const CMsgShowToolTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgShowToolTip)
}

void CMsgShowToolTip::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgShowToolTip::~CMsgShowToolTip() {
  // @@protoc_insertion_point(destructor:CMsgShowToolTip)
  SharedDtor();
}

void CMsgShowToolTip::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgShowToolTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgShowToolTip::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgShowToolTip& CMsgShowToolTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgShowToolTip.base);
  return *internal_default_instance();
}


void CMsgShowToolTip::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgShowToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgShowToolTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgShowToolTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgShowToolTip.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgShowToolTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgShowToolTip)
  return false;
#undef DO_
}

void CMsgShowToolTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgShowToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgShowToolTip.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgShowToolTip)
}

::google::protobuf::uint8* CMsgShowToolTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgShowToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgShowToolTip.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgShowToolTip)
  return target;
}

size_t CMsgShowToolTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgShowToolTip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgShowToolTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgShowToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgShowToolTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgShowToolTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgShowToolTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgShowToolTip)
    MergeFrom(*source);
  }
}

void CMsgShowToolTip::MergeFrom(const CMsgShowToolTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgShowToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgShowToolTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgShowToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShowToolTip::CopyFrom(const CMsgShowToolTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgShowToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShowToolTip::IsInitialized() const {
  return true;
}

void CMsgShowToolTip::Swap(CMsgShowToolTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgShowToolTip::InternalSwap(CMsgShowToolTip* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgShowToolTip::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgUpdateToolTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUpdateToolTip::kBrowserHandleFieldNumber;
const int CMsgUpdateToolTip::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUpdateToolTip::CMsgUpdateToolTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgUpdateToolTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUpdateToolTip)
}
CMsgUpdateToolTip::CMsgUpdateToolTip(const CMsgUpdateToolTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgUpdateToolTip)
}

void CMsgUpdateToolTip::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgUpdateToolTip::~CMsgUpdateToolTip() {
  // @@protoc_insertion_point(destructor:CMsgUpdateToolTip)
  SharedDtor();
}

void CMsgUpdateToolTip::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgUpdateToolTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgUpdateToolTip::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUpdateToolTip& CMsgUpdateToolTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgUpdateToolTip.base);
  return *internal_default_instance();
}


void CMsgUpdateToolTip::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgUpdateToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUpdateToolTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUpdateToolTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgUpdateToolTip.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUpdateToolTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUpdateToolTip)
  return false;
#undef DO_
}

void CMsgUpdateToolTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUpdateToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateToolTip.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUpdateToolTip)
}

::google::protobuf::uint8* CMsgUpdateToolTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUpdateToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateToolTip.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUpdateToolTip)
  return target;
}

size_t CMsgUpdateToolTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgUpdateToolTip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgUpdateToolTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgUpdateToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUpdateToolTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUpdateToolTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgUpdateToolTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgUpdateToolTip)
    MergeFrom(*source);
  }
}

void CMsgUpdateToolTip::MergeFrom(const CMsgUpdateToolTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgUpdateToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUpdateToolTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgUpdateToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUpdateToolTip::CopyFrom(const CMsgUpdateToolTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgUpdateToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUpdateToolTip::IsInitialized() const {
  return true;
}

void CMsgUpdateToolTip::Swap(CMsgUpdateToolTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUpdateToolTip::InternalSwap(CMsgUpdateToolTip* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgUpdateToolTip::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHideToolTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHideToolTip::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHideToolTip::CMsgHideToolTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgHideToolTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHideToolTip)
}
CMsgHideToolTip::CMsgHideToolTip(const CMsgHideToolTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgHideToolTip)
}

void CMsgHideToolTip::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgHideToolTip::~CMsgHideToolTip() {
  // @@protoc_insertion_point(destructor:CMsgHideToolTip)
  SharedDtor();
}

void CMsgHideToolTip::SharedDtor() {
}

void CMsgHideToolTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHideToolTip::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHideToolTip& CMsgHideToolTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgHideToolTip.base);
  return *internal_default_instance();
}


void CMsgHideToolTip::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHideToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHideToolTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHideToolTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHideToolTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHideToolTip)
  return false;
#undef DO_
}

void CMsgHideToolTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHideToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHideToolTip)
}

::google::protobuf::uint8* CMsgHideToolTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHideToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHideToolTip)
  return target;
}

size_t CMsgHideToolTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHideToolTip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHideToolTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHideToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHideToolTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHideToolTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHideToolTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHideToolTip)
    MergeFrom(*source);
  }
}

void CMsgHideToolTip::MergeFrom(const CMsgHideToolTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHideToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgHideToolTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHideToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHideToolTip::CopyFrom(const CMsgHideToolTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHideToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHideToolTip::IsInitialized() const {
  return true;
}

void CMsgHideToolTip::Swap(CMsgHideToolTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHideToolTip::InternalSwap(CMsgHideToolTip* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHideToolTip::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSearchResults::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSearchResults::kBrowserHandleFieldNumber;
const int CMsgSearchResults::kActiveMatchFieldNumber;
const int CMsgSearchResults::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSearchResults::CMsgSearchResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSearchResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSearchResults)
}
CMsgSearchResults::CMsgSearchResults(const CMsgSearchResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&results_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(results_));
  // @@protoc_insertion_point(copy_constructor:CMsgSearchResults)
}

void CMsgSearchResults::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&results_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(results_));
}

CMsgSearchResults::~CMsgSearchResults() {
  // @@protoc_insertion_point(destructor:CMsgSearchResults)
  SharedDtor();
}

void CMsgSearchResults::SharedDtor() {
}

void CMsgSearchResults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSearchResults::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSearchResults& CMsgSearchResults::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSearchResults.base);
  return *internal_default_instance();
}


void CMsgSearchResults::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSearchResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&results_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(results_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSearchResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSearchResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activeMatch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_activematch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activematch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSearchResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSearchResults)
  return false;
#undef DO_
}

void CMsgSearchResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSearchResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 activeMatch = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activematch(), output);
  }

  // optional int32 results = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSearchResults)
}

::google::protobuf::uint8* CMsgSearchResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSearchResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 activeMatch = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activematch(), target);
  }

  // optional int32 results = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSearchResults)
  return target;
}

size_t CMsgSearchResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSearchResults)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 activeMatch = 2;
    if (has_activematch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activematch());
    }

    // optional int32 results = 3;
    if (has_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->results());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSearchResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSearchResults)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSearchResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSearchResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSearchResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSearchResults)
    MergeFrom(*source);
  }
}

void CMsgSearchResults::MergeFrom(const CMsgSearchResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSearchResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      activematch_ = from.activematch_;
    }
    if (cached_has_bits & 0x00000004u) {
      results_ = from.results_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSearchResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSearchResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSearchResults::CopyFrom(const CMsgSearchResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSearchResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSearchResults::IsInitialized() const {
  return true;
}

void CMsgSearchResults::Swap(CMsgSearchResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSearchResults::InternalSwap(CMsgSearchResults* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(activematch_, other->activematch_);
  swap(results_, other->results_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSearchResults::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClose::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClose::CMsgClose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgClose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClose)
}
CMsgClose::CMsgClose(const CMsgClose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgClose)
}

void CMsgClose::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgClose::~CMsgClose() {
  // @@protoc_insertion_point(destructor:CMsgClose)
  SharedDtor();
}

void CMsgClose::SharedDtor() {
}

void CMsgClose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClose::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClose& CMsgClose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgClose.base);
  return *internal_default_instance();
}


void CMsgClose::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClose)
  return false;
#undef DO_
}

void CMsgClose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClose)
}

::google::protobuf::uint8* CMsgClose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClose)
  return target;
}

size_t CMsgClose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClose)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClose)
    MergeFrom(*source);
  }
}

void CMsgClose::MergeFrom(const CMsgClose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgClose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClose::CopyFrom(const CMsgClose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClose::IsInitialized() const {
  return true;
}

void CMsgClose::Swap(CMsgClose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClose::InternalSwap(CMsgClose* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClose::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetSharedPaintBuffers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetSharedPaintBuffers::kBrowserHandleFieldNumber;
const int CMsgSetSharedPaintBuffers::kWideFieldNumber;
const int CMsgSetSharedPaintBuffers::kTallFieldNumber;
const int CMsgSetSharedPaintBuffers::kSourcePidFieldNumber;
const int CMsgSetSharedPaintBuffers::kSourceHandleFieldNumber;
const int CMsgSetSharedPaintBuffers::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetSharedPaintBuffers::CMsgSetSharedPaintBuffers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetSharedPaintBuffers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetSharedPaintBuffers)
}
CMsgSetSharedPaintBuffers::CMsgSetSharedPaintBuffers(const CMsgSetSharedPaintBuffers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&tall_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetSharedPaintBuffers)
}

void CMsgSetSharedPaintBuffers::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tall_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
}

CMsgSetSharedPaintBuffers::~CMsgSetSharedPaintBuffers() {
  // @@protoc_insertion_point(destructor:CMsgSetSharedPaintBuffers)
  SharedDtor();
}

void CMsgSetSharedPaintBuffers::SharedDtor() {
}

void CMsgSetSharedPaintBuffers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetSharedPaintBuffers::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetSharedPaintBuffers& CMsgSetSharedPaintBuffers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetSharedPaintBuffers.base);
  return *internal_default_instance();
}


void CMsgSetSharedPaintBuffers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tall_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(tall_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetSharedPaintBuffers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetSharedPaintBuffers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wide = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_wide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tall = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tall();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 source_pid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_source_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 source_handle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_source_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 handle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetSharedPaintBuffers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetSharedPaintBuffers)
  return false;
#undef DO_
}

void CMsgSetSharedPaintBuffers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 wide = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wide(), output);
  }

  // optional uint32 tall = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tall(), output);
  }

  // optional uint64 source_pid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->source_pid(), output);
  }

  // optional uint64 source_handle = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->source_handle(), output);
  }

  // optional uint64 handle = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetSharedPaintBuffers)
}

::google::protobuf::uint8* CMsgSetSharedPaintBuffers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 wide = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wide(), target);
  }

  // optional uint32 tall = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tall(), target);
  }

  // optional uint64 source_pid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->source_pid(), target);
  }

  // optional uint64 source_handle = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->source_handle(), target);
  }

  // optional uint64 handle = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetSharedPaintBuffers)
  return target;
}

size_t CMsgSetSharedPaintBuffers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetSharedPaintBuffers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 wide = 2;
    if (has_wide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wide());
    }

    // optional uint64 source_pid = 4;
    if (has_source_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_pid());
    }

    // optional uint64 source_handle = 5;
    if (has_source_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_handle());
    }

    // optional uint64 handle = 6;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->handle());
    }

    // optional uint32 tall = 3;
    if (has_tall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tall());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetSharedPaintBuffers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetSharedPaintBuffers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetSharedPaintBuffers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetSharedPaintBuffers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetSharedPaintBuffers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetSharedPaintBuffers)
    MergeFrom(*source);
  }
}

void CMsgSetSharedPaintBuffers::MergeFrom(const CMsgSetSharedPaintBuffers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetSharedPaintBuffers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      wide_ = from.wide_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_pid_ = from.source_pid_;
    }
    if (cached_has_bits & 0x00000008u) {
      source_handle_ = from.source_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000020u) {
      tall_ = from.tall_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetSharedPaintBuffers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetSharedPaintBuffers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetSharedPaintBuffers::CopyFrom(const CMsgSetSharedPaintBuffers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetSharedPaintBuffers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetSharedPaintBuffers::IsInitialized() const {
  return true;
}

void CMsgSetSharedPaintBuffers::Swap(CMsgSetSharedPaintBuffers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetSharedPaintBuffers::InternalSwap(CMsgSetSharedPaintBuffers* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(wide_, other->wide_);
  swap(source_pid_, other->source_pid_);
  swap(source_handle_, other->source_handle_);
  swap(handle_, other->handle_);
  swap(tall_, other->tall_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetSharedPaintBuffers::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAckSharedPaintBuffers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAckSharedPaintBuffers::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAckSharedPaintBuffers::CMsgAckSharedPaintBuffers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgAckSharedPaintBuffers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAckSharedPaintBuffers)
}
CMsgAckSharedPaintBuffers::CMsgAckSharedPaintBuffers(const CMsgAckSharedPaintBuffers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgAckSharedPaintBuffers)
}

void CMsgAckSharedPaintBuffers::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgAckSharedPaintBuffers::~CMsgAckSharedPaintBuffers() {
  // @@protoc_insertion_point(destructor:CMsgAckSharedPaintBuffers)
  SharedDtor();
}

void CMsgAckSharedPaintBuffers::SharedDtor() {
}

void CMsgAckSharedPaintBuffers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAckSharedPaintBuffers::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAckSharedPaintBuffers& CMsgAckSharedPaintBuffers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgAckSharedPaintBuffers.base);
  return *internal_default_instance();
}


void CMsgAckSharedPaintBuffers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAckSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAckSharedPaintBuffers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAckSharedPaintBuffers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAckSharedPaintBuffers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAckSharedPaintBuffers)
  return false;
#undef DO_
}

void CMsgAckSharedPaintBuffers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAckSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAckSharedPaintBuffers)
}

::google::protobuf::uint8* CMsgAckSharedPaintBuffers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAckSharedPaintBuffers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAckSharedPaintBuffers)
  return target;
}

size_t CMsgAckSharedPaintBuffers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAckSharedPaintBuffers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAckSharedPaintBuffers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAckSharedPaintBuffers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAckSharedPaintBuffers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAckSharedPaintBuffers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAckSharedPaintBuffers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAckSharedPaintBuffers)
    MergeFrom(*source);
  }
}

void CMsgAckSharedPaintBuffers::MergeFrom(const CMsgAckSharedPaintBuffers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAckSharedPaintBuffers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgAckSharedPaintBuffers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAckSharedPaintBuffers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAckSharedPaintBuffers::CopyFrom(const CMsgAckSharedPaintBuffers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAckSharedPaintBuffers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAckSharedPaintBuffers::IsInitialized() const {
  return true;
}

void CMsgAckSharedPaintBuffers::Swap(CMsgAckSharedPaintBuffers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAckSharedPaintBuffers::InternalSwap(CMsgAckSharedPaintBuffers* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAckSharedPaintBuffers::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNeedsPaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNeedsPaint::kBrowserHandleFieldNumber;
const int CMsgNeedsPaint::kScrollxFieldNumber;
const int CMsgNeedsPaint::kScrollyFieldNumber;
const int CMsgNeedsPaint::kPagescaleFieldNumber;
const int CMsgNeedsPaint::kPageserialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNeedsPaint::CMsgNeedsPaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgNeedsPaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNeedsPaint)
}
CMsgNeedsPaint::CMsgNeedsPaint(const CMsgNeedsPaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagescale_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(pagescale_));
  // @@protoc_insertion_point(copy_constructor:CMsgNeedsPaint)
}

void CMsgNeedsPaint::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagescale_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(pagescale_));
}

CMsgNeedsPaint::~CMsgNeedsPaint() {
  // @@protoc_insertion_point(destructor:CMsgNeedsPaint)
  SharedDtor();
}

void CMsgNeedsPaint::SharedDtor() {
}

void CMsgNeedsPaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgNeedsPaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNeedsPaint& CMsgNeedsPaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgNeedsPaint.base);
  return *internal_default_instance();
}


void CMsgNeedsPaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pagescale_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(pagescale_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNeedsPaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNeedsPaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrollx = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_scrollx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrollx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrolly = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_scrolly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrolly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pagescale = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_pagescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pagescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pageserial = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_pageserial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageserial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNeedsPaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNeedsPaint)
  return false;
#undef DO_
}

void CMsgNeedsPaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 scrollx = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scrollx(), output);
  }

  // optional uint32 scrolly = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->scrolly(), output);
  }

  // optional float pagescale = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->pagescale(), output);
  }

  // optional uint32 pageserial = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->pageserial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNeedsPaint)
}

::google::protobuf::uint8* CMsgNeedsPaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 scrollx = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scrollx(), target);
  }

  // optional uint32 scrolly = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->scrolly(), target);
  }

  // optional float pagescale = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->pagescale(), target);
  }

  // optional uint32 pageserial = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->pageserial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNeedsPaint)
  return target;
}

size_t CMsgNeedsPaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNeedsPaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 scrollx = 10;
    if (has_scrollx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrollx());
    }

    // optional uint32 pageserial = 15;
    if (has_pageserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageserial());
    }

    // optional uint32 scrolly = 11;
    if (has_scrolly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrolly());
    }

    // optional float pagescale = 12;
    if (has_pagescale()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgNeedsPaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNeedsPaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNeedsPaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNeedsPaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNeedsPaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNeedsPaint)
    MergeFrom(*source);
  }
}

void CMsgNeedsPaint::MergeFrom(const CMsgNeedsPaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNeedsPaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scrollx_ = from.scrollx_;
    }
    if (cached_has_bits & 0x00000004u) {
      pageserial_ = from.pageserial_;
    }
    if (cached_has_bits & 0x00000008u) {
      scrolly_ = from.scrolly_;
    }
    if (cached_has_bits & 0x00000010u) {
      pagescale_ = from.pagescale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgNeedsPaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNeedsPaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNeedsPaint::CopyFrom(const CMsgNeedsPaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNeedsPaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNeedsPaint::IsInitialized() const {
  return true;
}

void CMsgNeedsPaint::Swap(CMsgNeedsPaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNeedsPaint::InternalSwap(CMsgNeedsPaint* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scrollx_, other->scrollx_);
  swap(pageserial_, other->pageserial_);
  swap(scrolly_, other->scrolly_);
  swap(pagescale_, other->pagescale_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgNeedsPaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgComboNeedsPaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgComboNeedsPaint::kBrowserHandleFieldNumber;
const int CMsgComboNeedsPaint::kRgbaFieldNumber;
const int CMsgComboNeedsPaint::kComboboxWideFieldNumber;
const int CMsgComboNeedsPaint::kComboboxTallFieldNumber;
const int CMsgComboNeedsPaint::kSharedMemoryHandleFieldNumber;
const int CMsgComboNeedsPaint::kSharedMemorySizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgComboNeedsPaint::CMsgComboNeedsPaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgComboNeedsPaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgComboNeedsPaint)
}
CMsgComboNeedsPaint::CMsgComboNeedsPaint(const CMsgComboNeedsPaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rgba_, &from.rgba_,
    static_cast<size_t>(reinterpret_cast<char*>(&combobox_tall_) -
    reinterpret_cast<char*>(&rgba_)) + sizeof(combobox_tall_));
  // @@protoc_insertion_point(copy_constructor:CMsgComboNeedsPaint)
}

void CMsgComboNeedsPaint::SharedCtor() {
  ::memset(&rgba_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&combobox_tall_) -
      reinterpret_cast<char*>(&rgba_)) + sizeof(combobox_tall_));
}

CMsgComboNeedsPaint::~CMsgComboNeedsPaint() {
  // @@protoc_insertion_point(destructor:CMsgComboNeedsPaint)
  SharedDtor();
}

void CMsgComboNeedsPaint::SharedDtor() {
}

void CMsgComboNeedsPaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgComboNeedsPaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgComboNeedsPaint& CMsgComboNeedsPaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgComboNeedsPaint.base);
  return *internal_default_instance();
}


void CMsgComboNeedsPaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgComboNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&rgba_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&combobox_tall_) -
        reinterpret_cast<char*>(&rgba_)) + sizeof(combobox_tall_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgComboNeedsPaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgComboNeedsPaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 rgba = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rgba();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rgba_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 combobox_wide = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_combobox_wide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combobox_wide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 combobox_tall = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_combobox_tall();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combobox_tall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 shared_memory_handle = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_shared_memory_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shared_memory_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 shared_memory_size = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_shared_memory_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shared_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgComboNeedsPaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgComboNeedsPaint)
  return false;
#undef DO_
}

void CMsgComboNeedsPaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgComboNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint64 rgba = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rgba(), output);
  }

  // optional uint32 combobox_wide = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->combobox_wide(), output);
  }

  // optional uint32 combobox_tall = 4 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->combobox_tall(), output);
  }

  // optional uint64 shared_memory_handle = 5 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->shared_memory_handle(), output);
  }

  // optional uint64 shared_memory_size = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->shared_memory_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgComboNeedsPaint)
}

::google::protobuf::uint8* CMsgComboNeedsPaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgComboNeedsPaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint64 rgba = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rgba(), target);
  }

  // optional uint32 combobox_wide = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->combobox_wide(), target);
  }

  // optional uint32 combobox_tall = 4 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->combobox_tall(), target);
  }

  // optional uint64 shared_memory_handle = 5 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->shared_memory_handle(), target);
  }

  // optional uint64 shared_memory_size = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->shared_memory_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgComboNeedsPaint)
  return target;
}

size_t CMsgComboNeedsPaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgComboNeedsPaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint64 rgba = 2;
    if (has_rgba()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rgba());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 combobox_wide = 3 [default = 0];
    if (has_combobox_wide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->combobox_wide());
    }

    // optional uint64 shared_memory_handle = 5 [default = 0];
    if (has_shared_memory_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->shared_memory_handle());
    }

    // optional uint64 shared_memory_size = 7 [default = 0];
    if (has_shared_memory_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->shared_memory_size());
    }

    // optional uint32 combobox_tall = 4 [default = 0];
    if (has_combobox_tall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->combobox_tall());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgComboNeedsPaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgComboNeedsPaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgComboNeedsPaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgComboNeedsPaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgComboNeedsPaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgComboNeedsPaint)
    MergeFrom(*source);
  }
}

void CMsgComboNeedsPaint::MergeFrom(const CMsgComboNeedsPaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgComboNeedsPaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      rgba_ = from.rgba_;
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      combobox_wide_ = from.combobox_wide_;
    }
    if (cached_has_bits & 0x00000008u) {
      shared_memory_handle_ = from.shared_memory_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      shared_memory_size_ = from.shared_memory_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      combobox_tall_ = from.combobox_tall_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgComboNeedsPaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgComboNeedsPaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgComboNeedsPaint::CopyFrom(const CMsgComboNeedsPaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgComboNeedsPaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgComboNeedsPaint::IsInitialized() const {
  return true;
}

void CMsgComboNeedsPaint::Swap(CMsgComboNeedsPaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgComboNeedsPaint::InternalSwap(CMsgComboNeedsPaint* other) {
  using std::swap;
  swap(rgba_, other->rgba_);
  swap(browser_handle_, other->browser_handle_);
  swap(combobox_wide_, other->combobox_wide_);
  swap(shared_memory_handle_, other->shared_memory_handle_);
  swap(shared_memory_size_, other->shared_memory_size_);
  swap(combobox_tall_, other->combobox_tall_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgComboNeedsPaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNeedsSharedTexturePaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNeedsSharedTexturePaint::kBrowserHandleFieldNumber;
const int CMsgNeedsSharedTexturePaint::kShareHandleFieldNumber;
const int CMsgNeedsSharedTexturePaint::kWidthFieldNumber;
const int CMsgNeedsSharedTexturePaint::kHeightFieldNumber;
const int CMsgNeedsSharedTexturePaint::kScrollxFieldNumber;
const int CMsgNeedsSharedTexturePaint::kScrollyFieldNumber;
const int CMsgNeedsSharedTexturePaint::kPagescaleFieldNumber;
const int CMsgNeedsSharedTexturePaint::kPageserialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNeedsSharedTexturePaint::CMsgNeedsSharedTexturePaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgNeedsSharedTexturePaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNeedsSharedTexturePaint)
}
CMsgNeedsSharedTexturePaint::CMsgNeedsSharedTexturePaint(const CMsgNeedsSharedTexturePaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&pageserial_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  // @@protoc_insertion_point(copy_constructor:CMsgNeedsSharedTexturePaint)
}

void CMsgNeedsSharedTexturePaint::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pageserial_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
}

CMsgNeedsSharedTexturePaint::~CMsgNeedsSharedTexturePaint() {
  // @@protoc_insertion_point(destructor:CMsgNeedsSharedTexturePaint)
  SharedDtor();
}

void CMsgNeedsSharedTexturePaint::SharedDtor() {
}

void CMsgNeedsSharedTexturePaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgNeedsSharedTexturePaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNeedsSharedTexturePaint& CMsgNeedsSharedTexturePaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgNeedsSharedTexturePaint.base);
  return *internal_default_instance();
}


void CMsgNeedsSharedTexturePaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNeedsSharedTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pageserial_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNeedsSharedTexturePaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNeedsSharedTexturePaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 share_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_share_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &share_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrollx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_scrollx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrollx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrolly = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_scrolly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrolly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pagescale = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_pagescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pagescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pageserial = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pageserial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageserial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNeedsSharedTexturePaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNeedsSharedTexturePaint)
  return false;
#undef DO_
}

void CMsgNeedsSharedTexturePaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNeedsSharedTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 share_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->share_handle(), output);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // optional uint32 scrollx = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scrollx(), output);
  }

  // optional uint32 scrolly = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scrolly(), output);
  }

  // optional float pagescale = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pagescale(), output);
  }

  // optional uint32 pageserial = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pageserial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNeedsSharedTexturePaint)
}

::google::protobuf::uint8* CMsgNeedsSharedTexturePaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNeedsSharedTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 share_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->share_handle(), target);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // optional uint32 scrollx = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scrollx(), target);
  }

  // optional uint32 scrolly = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scrolly(), target);
  }

  // optional float pagescale = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pagescale(), target);
  }

  // optional uint32 pageserial = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pageserial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNeedsSharedTexturePaint)
  return target;
}

size_t CMsgNeedsSharedTexturePaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNeedsSharedTexturePaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 share_handle = 2;
    if (has_share_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->share_handle());
    }

    // optional uint32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 scrollx = 5;
    if (has_scrollx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrollx());
    }

    // optional uint32 scrolly = 6;
    if (has_scrolly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrolly());
    }

    // optional float pagescale = 7;
    if (has_pagescale()) {
      total_size += 1 + 4;
    }

    // optional uint32 pageserial = 8;
    if (has_pageserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageserial());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgNeedsSharedTexturePaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNeedsSharedTexturePaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNeedsSharedTexturePaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNeedsSharedTexturePaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNeedsSharedTexturePaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNeedsSharedTexturePaint)
    MergeFrom(*source);
  }
}

void CMsgNeedsSharedTexturePaint::MergeFrom(const CMsgNeedsSharedTexturePaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNeedsSharedTexturePaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      share_handle_ = from.share_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000010u) {
      scrollx_ = from.scrollx_;
    }
    if (cached_has_bits & 0x00000020u) {
      scrolly_ = from.scrolly_;
    }
    if (cached_has_bits & 0x00000040u) {
      pagescale_ = from.pagescale_;
    }
    if (cached_has_bits & 0x00000080u) {
      pageserial_ = from.pageserial_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgNeedsSharedTexturePaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNeedsSharedTexturePaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNeedsSharedTexturePaint::CopyFrom(const CMsgNeedsSharedTexturePaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNeedsSharedTexturePaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNeedsSharedTexturePaint::IsInitialized() const {
  return true;
}

void CMsgNeedsSharedTexturePaint::Swap(CMsgNeedsSharedTexturePaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNeedsSharedTexturePaint::InternalSwap(CMsgNeedsSharedTexturePaint* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(share_handle_, other->share_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(scrollx_, other->scrollx_);
  swap(scrolly_, other->scrolly_);
  swap(pagescale_, other->pagescale_);
  swap(pageserial_, other->pageserial_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgNeedsSharedTexturePaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameOverlayTexturePaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameOverlayTexturePaint::kBrowserHandleFieldNumber;
const int CMsgGameOverlayTexturePaint::kWidthFieldNumber;
const int CMsgGameOverlayTexturePaint::kHeightFieldNumber;
const int CMsgGameOverlayTexturePaint::kScrollxFieldNumber;
const int CMsgGameOverlayTexturePaint::kScrollyFieldNumber;
const int CMsgGameOverlayTexturePaint::kPagescaleFieldNumber;
const int CMsgGameOverlayTexturePaint::kPageserialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameOverlayTexturePaint::CMsgGameOverlayTexturePaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGameOverlayTexturePaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameOverlayTexturePaint)
}
CMsgGameOverlayTexturePaint::CMsgGameOverlayTexturePaint(const CMsgGameOverlayTexturePaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&pageserial_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameOverlayTexturePaint)
}

void CMsgGameOverlayTexturePaint::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pageserial_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
}

CMsgGameOverlayTexturePaint::~CMsgGameOverlayTexturePaint() {
  // @@protoc_insertion_point(destructor:CMsgGameOverlayTexturePaint)
  SharedDtor();
}

void CMsgGameOverlayTexturePaint::SharedDtor() {
}

void CMsgGameOverlayTexturePaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameOverlayTexturePaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameOverlayTexturePaint& CMsgGameOverlayTexturePaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGameOverlayTexturePaint.base);
  return *internal_default_instance();
}


void CMsgGameOverlayTexturePaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameOverlayTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pageserial_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(pageserial_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameOverlayTexturePaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameOverlayTexturePaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrollx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_scrollx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrollx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scrolly = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_scrolly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scrolly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pagescale = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_pagescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pagescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pageserial = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pageserial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pageserial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameOverlayTexturePaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameOverlayTexturePaint)
  return false;
#undef DO_
}

void CMsgGameOverlayTexturePaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameOverlayTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // optional uint32 scrollx = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scrollx(), output);
  }

  // optional uint32 scrolly = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scrolly(), output);
  }

  // optional float pagescale = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pagescale(), output);
  }

  // optional uint32 pageserial = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pageserial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameOverlayTexturePaint)
}

::google::protobuf::uint8* CMsgGameOverlayTexturePaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameOverlayTexturePaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // optional uint32 scrollx = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scrollx(), target);
  }

  // optional uint32 scrolly = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scrolly(), target);
  }

  // optional float pagescale = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pagescale(), target);
  }

  // optional uint32 pageserial = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pageserial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameOverlayTexturePaint)
  return target;
}

size_t CMsgGameOverlayTexturePaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameOverlayTexturePaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 scrollx = 5;
    if (has_scrollx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrollx());
    }

    // optional uint32 scrolly = 6;
    if (has_scrolly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scrolly());
    }

    // optional float pagescale = 7;
    if (has_pagescale()) {
      total_size += 1 + 4;
    }

    // optional uint32 pageserial = 8;
    if (has_pageserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pageserial());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameOverlayTexturePaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameOverlayTexturePaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameOverlayTexturePaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameOverlayTexturePaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameOverlayTexturePaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameOverlayTexturePaint)
    MergeFrom(*source);
  }
}

void CMsgGameOverlayTexturePaint::MergeFrom(const CMsgGameOverlayTexturePaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameOverlayTexturePaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000008u) {
      scrollx_ = from.scrollx_;
    }
    if (cached_has_bits & 0x00000010u) {
      scrolly_ = from.scrolly_;
    }
    if (cached_has_bits & 0x00000020u) {
      pagescale_ = from.pagescale_;
    }
    if (cached_has_bits & 0x00000040u) {
      pageserial_ = from.pageserial_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameOverlayTexturePaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameOverlayTexturePaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameOverlayTexturePaint::CopyFrom(const CMsgGameOverlayTexturePaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameOverlayTexturePaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameOverlayTexturePaint::IsInitialized() const {
  return true;
}

void CMsgGameOverlayTexturePaint::Swap(CMsgGameOverlayTexturePaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameOverlayTexturePaint::InternalSwap(CMsgGameOverlayTexturePaint* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(scrollx_, other->scrollx_);
  swap(scrolly_, other->scrolly_);
  swap(pagescale_, other->pagescale_);
  swap(pageserial_, other->pageserial_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameOverlayTexturePaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGetZoom::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGetZoom::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGetZoom::CMsgGetZoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGetZoom.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGetZoom)
}
CMsgGetZoom::CMsgGetZoom(const CMsgGetZoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgGetZoom)
}

void CMsgGetZoom::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgGetZoom::~CMsgGetZoom() {
  // @@protoc_insertion_point(destructor:CMsgGetZoom)
  SharedDtor();
}

void CMsgGetZoom::SharedDtor() {
}

void CMsgGetZoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGetZoom::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGetZoom& CMsgGetZoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGetZoom.base);
  return *internal_default_instance();
}


void CMsgGetZoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGetZoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGetZoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGetZoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGetZoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGetZoom)
  return false;
#undef DO_
}

void CMsgGetZoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGetZoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGetZoom)
}

::google::protobuf::uint8* CMsgGetZoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGetZoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGetZoom)
  return target;
}

size_t CMsgGetZoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGetZoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGetZoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGetZoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGetZoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGetZoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGetZoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGetZoom)
    MergeFrom(*source);
  }
}

void CMsgGetZoom::MergeFrom(const CMsgGetZoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGetZoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgGetZoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGetZoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGetZoom::CopyFrom(const CMsgGetZoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGetZoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGetZoom::IsInitialized() const {
  return true;
}

void CMsgGetZoom::Swap(CMsgGetZoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGetZoom::InternalSwap(CMsgGetZoom* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGetZoom::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGetZoomResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGetZoomResponse::kBrowserHandleFieldNumber;
const int CMsgGetZoomResponse::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGetZoomResponse::CMsgGetZoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGetZoomResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGetZoomResponse)
}
CMsgGetZoomResponse::CMsgGetZoomResponse(const CMsgGetZoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoom_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
  // @@protoc_insertion_point(copy_constructor:CMsgGetZoomResponse)
}

void CMsgGetZoomResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
}

CMsgGetZoomResponse::~CMsgGetZoomResponse() {
  // @@protoc_insertion_point(destructor:CMsgGetZoomResponse)
  SharedDtor();
}

void CMsgGetZoomResponse::SharedDtor() {
}

void CMsgGetZoomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGetZoomResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGetZoomResponse& CMsgGetZoomResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGetZoomResponse.base);
  return *internal_default_instance();
}


void CMsgGetZoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGetZoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&zoom_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGetZoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGetZoomResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float zoom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_zoom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGetZoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGetZoomResponse)
  return false;
#undef DO_
}

void CMsgGetZoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGetZoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional float zoom = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGetZoomResponse)
}

::google::protobuf::uint8* CMsgGetZoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGetZoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional float zoom = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGetZoomResponse)
  return target;
}

size_t CMsgGetZoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGetZoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional float zoom = 2;
    if (has_zoom()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGetZoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGetZoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGetZoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGetZoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGetZoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGetZoomResponse)
    MergeFrom(*source);
  }
}

void CMsgGetZoomResponse::MergeFrom(const CMsgGetZoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGetZoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      zoom_ = from.zoom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGetZoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGetZoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGetZoomResponse::CopyFrom(const CMsgGetZoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGetZoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGetZoomResponse::IsInitialized() const {
  return true;
}

void CMsgGetZoomResponse::Swap(CMsgGetZoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGetZoomResponse::InternalSwap(CMsgGetZoomResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(zoom_, other->zoom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGetZoomResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLinkAtPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLinkAtPosition::kBrowserHandleFieldNumber;
const int CMsgLinkAtPosition::kXFieldNumber;
const int CMsgLinkAtPosition::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLinkAtPosition::CMsgLinkAtPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgLinkAtPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLinkAtPosition)
}
CMsgLinkAtPosition::CMsgLinkAtPosition(const CMsgLinkAtPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgLinkAtPosition)
}

void CMsgLinkAtPosition::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
}

CMsgLinkAtPosition::~CMsgLinkAtPosition() {
  // @@protoc_insertion_point(destructor:CMsgLinkAtPosition)
  SharedDtor();
}

void CMsgLinkAtPosition::SharedDtor() {
}

void CMsgLinkAtPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgLinkAtPosition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLinkAtPosition& CMsgLinkAtPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgLinkAtPosition.base);
  return *internal_default_instance();
}


void CMsgLinkAtPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLinkAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLinkAtPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLinkAtPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLinkAtPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLinkAtPosition)
  return false;
#undef DO_
}

void CMsgLinkAtPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLinkAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLinkAtPosition)
}

::google::protobuf::uint8* CMsgLinkAtPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLinkAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLinkAtPosition)
  return target;
}

size_t CMsgLinkAtPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLinkAtPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLinkAtPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLinkAtPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLinkAtPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLinkAtPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLinkAtPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLinkAtPosition)
    MergeFrom(*source);
  }
}

void CMsgLinkAtPosition::MergeFrom(const CMsgLinkAtPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLinkAtPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLinkAtPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLinkAtPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLinkAtPosition::CopyFrom(const CMsgLinkAtPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLinkAtPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLinkAtPosition::IsInitialized() const {
  return true;
}

void CMsgLinkAtPosition::Swap(CMsgLinkAtPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLinkAtPosition::InternalSwap(CMsgLinkAtPosition* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgLinkAtPosition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLinkAtPositionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLinkAtPositionResponse::kBrowserHandleFieldNumber;
const int CMsgLinkAtPositionResponse::kXFieldNumber;
const int CMsgLinkAtPositionResponse::kYFieldNumber;
const int CMsgLinkAtPositionResponse::kUrlFieldNumber;
const int CMsgLinkAtPositionResponse::kBlivelinkFieldNumber;
const int CMsgLinkAtPositionResponse::kBinputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLinkAtPositionResponse::CMsgLinkAtPositionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgLinkAtPositionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLinkAtPositionResponse)
}
CMsgLinkAtPositionResponse::CMsgLinkAtPositionResponse(const CMsgLinkAtPositionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&binput_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(binput_));
  // @@protoc_insertion_point(copy_constructor:CMsgLinkAtPositionResponse)
}

void CMsgLinkAtPositionResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&binput_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(binput_));
}

CMsgLinkAtPositionResponse::~CMsgLinkAtPositionResponse() {
  // @@protoc_insertion_point(destructor:CMsgLinkAtPositionResponse)
  SharedDtor();
}

void CMsgLinkAtPositionResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLinkAtPositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgLinkAtPositionResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLinkAtPositionResponse& CMsgLinkAtPositionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgLinkAtPositionResponse.base);
  return *internal_default_instance();
}


void CMsgLinkAtPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLinkAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&binput_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(binput_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLinkAtPositionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLinkAtPositionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLinkAtPositionResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool blivelink = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_blivelink();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blivelink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool binput = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_binput();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &binput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLinkAtPositionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLinkAtPositionResponse)
  return false;
#undef DO_
}

void CMsgLinkAtPositionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLinkAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  // optional string url = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLinkAtPositionResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // optional bool blivelink = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->blivelink(), output);
  }

  // optional bool binput = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->binput(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLinkAtPositionResponse)
}

::google::protobuf::uint8* CMsgLinkAtPositionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLinkAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  // optional string url = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLinkAtPositionResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // optional bool blivelink = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->blivelink(), target);
  }

  // optional bool binput = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->binput(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLinkAtPositionResponse)
  return target;
}

size_t CMsgLinkAtPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLinkAtPositionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string url = 4;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

    // optional bool blivelink = 5;
    if (has_blivelink()) {
      total_size += 1 + 1;
    }

    // optional bool binput = 6;
    if (has_binput()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLinkAtPositionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLinkAtPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLinkAtPositionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLinkAtPositionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLinkAtPositionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLinkAtPositionResponse)
    MergeFrom(*source);
  }
}

void CMsgLinkAtPositionResponse::MergeFrom(const CMsgLinkAtPositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLinkAtPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      blivelink_ = from.blivelink_;
    }
    if (cached_has_bits & 0x00000020u) {
      binput_ = from.binput_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLinkAtPositionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLinkAtPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLinkAtPositionResponse::CopyFrom(const CMsgLinkAtPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLinkAtPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLinkAtPositionResponse::IsInitialized() const {
  return true;
}

void CMsgLinkAtPositionResponse::Swap(CMsgLinkAtPositionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLinkAtPositionResponse::InternalSwap(CMsgLinkAtPositionResponse* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(blivelink_, other->blivelink_);
  swap(binput_, other->binput_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgLinkAtPositionResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgZoomToElementAtPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgZoomToElementAtPosition::kBrowserHandleFieldNumber;
const int CMsgZoomToElementAtPosition::kXFieldNumber;
const int CMsgZoomToElementAtPosition::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgZoomToElementAtPosition::CMsgZoomToElementAtPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToElementAtPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgZoomToElementAtPosition)
}
CMsgZoomToElementAtPosition::CMsgZoomToElementAtPosition(const CMsgZoomToElementAtPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgZoomToElementAtPosition)
}

void CMsgZoomToElementAtPosition::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
}

CMsgZoomToElementAtPosition::~CMsgZoomToElementAtPosition() {
  // @@protoc_insertion_point(destructor:CMsgZoomToElementAtPosition)
  SharedDtor();
}

void CMsgZoomToElementAtPosition::SharedDtor() {
}

void CMsgZoomToElementAtPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgZoomToElementAtPosition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgZoomToElementAtPosition& CMsgZoomToElementAtPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToElementAtPosition.base);
  return *internal_default_instance();
}


void CMsgZoomToElementAtPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgZoomToElementAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgZoomToElementAtPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgZoomToElementAtPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgZoomToElementAtPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgZoomToElementAtPosition)
  return false;
#undef DO_
}

void CMsgZoomToElementAtPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgZoomToElementAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgZoomToElementAtPosition)
}

::google::protobuf::uint8* CMsgZoomToElementAtPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgZoomToElementAtPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgZoomToElementAtPosition)
  return target;
}

size_t CMsgZoomToElementAtPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgZoomToElementAtPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgZoomToElementAtPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgZoomToElementAtPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgZoomToElementAtPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgZoomToElementAtPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgZoomToElementAtPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgZoomToElementAtPosition)
    MergeFrom(*source);
  }
}

void CMsgZoomToElementAtPosition::MergeFrom(const CMsgZoomToElementAtPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgZoomToElementAtPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgZoomToElementAtPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgZoomToElementAtPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgZoomToElementAtPosition::CopyFrom(const CMsgZoomToElementAtPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgZoomToElementAtPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgZoomToElementAtPosition::IsInitialized() const {
  return true;
}

void CMsgZoomToElementAtPosition::Swap(CMsgZoomToElementAtPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgZoomToElementAtPosition::InternalSwap(CMsgZoomToElementAtPosition* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgZoomToElementAtPosition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgZoomToElementAtPositionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgZoomToElementAtPositionResponse::kBrowserHandleFieldNumber;
const int CMsgZoomToElementAtPositionResponse::kScaleFieldNumber;
const int CMsgZoomToElementAtPositionResponse::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgZoomToElementAtPositionResponse::CMsgZoomToElementAtPositionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToElementAtPositionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgZoomToElementAtPositionResponse)
}
CMsgZoomToElementAtPositionResponse::CMsgZoomToElementAtPositionResponse(const CMsgZoomToElementAtPositionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgZoomToElementAtPositionResponse)
}

void CMsgZoomToElementAtPositionResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(duration_));
}

CMsgZoomToElementAtPositionResponse::~CMsgZoomToElementAtPositionResponse() {
  // @@protoc_insertion_point(destructor:CMsgZoomToElementAtPositionResponse)
  SharedDtor();
}

void CMsgZoomToElementAtPositionResponse::SharedDtor() {
}

void CMsgZoomToElementAtPositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgZoomToElementAtPositionResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgZoomToElementAtPositionResponse& CMsgZoomToElementAtPositionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToElementAtPositionResponse.base);
  return *internal_default_instance();
}


void CMsgZoomToElementAtPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgZoomToElementAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgZoomToElementAtPositionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgZoomToElementAtPositionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float scale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgZoomToElementAtPositionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgZoomToElementAtPositionResponse)
  return false;
#undef DO_
}

void CMsgZoomToElementAtPositionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgZoomToElementAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->scale(), output);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgZoomToElementAtPositionResponse)
}

::google::protobuf::uint8* CMsgZoomToElementAtPositionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgZoomToElementAtPositionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->scale(), target);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgZoomToElementAtPositionResponse)
  return target;
}

size_t CMsgZoomToElementAtPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgZoomToElementAtPositionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional float scale = 2;
    if (has_scale()) {
      total_size += 1 + 4;
    }

    // optional float duration = 3;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgZoomToElementAtPositionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgZoomToElementAtPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgZoomToElementAtPositionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgZoomToElementAtPositionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgZoomToElementAtPositionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgZoomToElementAtPositionResponse)
    MergeFrom(*source);
  }
}

void CMsgZoomToElementAtPositionResponse::MergeFrom(const CMsgZoomToElementAtPositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgZoomToElementAtPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgZoomToElementAtPositionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgZoomToElementAtPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgZoomToElementAtPositionResponse::CopyFrom(const CMsgZoomToElementAtPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgZoomToElementAtPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgZoomToElementAtPositionResponse::IsInitialized() const {
  return true;
}

void CMsgZoomToElementAtPositionResponse::Swap(CMsgZoomToElementAtPositionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgZoomToElementAtPositionResponse::InternalSwap(CMsgZoomToElementAtPositionResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scale_, other->scale_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgZoomToElementAtPositionResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgScalePageToValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgScalePageToValue::kBrowserHandleFieldNumber;
const int CMsgScalePageToValue::kScaleFieldNumber;
const int CMsgScalePageToValue::kXFieldNumber;
const int CMsgScalePageToValue::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgScalePageToValue::CMsgScalePageToValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgScalePageToValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgScalePageToValue)
}
CMsgScalePageToValue::CMsgScalePageToValue(const CMsgScalePageToValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgScalePageToValue)
}

void CMsgScalePageToValue::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
}

CMsgScalePageToValue::~CMsgScalePageToValue() {
  // @@protoc_insertion_point(destructor:CMsgScalePageToValue)
  SharedDtor();
}

void CMsgScalePageToValue::SharedDtor() {
}

void CMsgScalePageToValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgScalePageToValue::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgScalePageToValue& CMsgScalePageToValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgScalePageToValue.base);
  return *internal_default_instance();
}


void CMsgScalePageToValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgScalePageToValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgScalePageToValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgScalePageToValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float scale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgScalePageToValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgScalePageToValue)
  return false;
#undef DO_
}

void CMsgScalePageToValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgScalePageToValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->scale(), output);
  }

  // optional float x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // optional float y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgScalePageToValue)
}

::google::protobuf::uint8* CMsgScalePageToValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgScalePageToValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->scale(), target);
  }

  // optional float x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // optional float y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgScalePageToValue)
  return target;
}

size_t CMsgScalePageToValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgScalePageToValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional float scale = 2;
    if (has_scale()) {
      total_size += 1 + 4;
    }

    // optional float x = 3;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 4;
    if (has_y()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgScalePageToValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgScalePageToValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgScalePageToValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgScalePageToValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgScalePageToValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgScalePageToValue)
    MergeFrom(*source);
  }
}

void CMsgScalePageToValue::MergeFrom(const CMsgScalePageToValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgScalePageToValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgScalePageToValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgScalePageToValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgScalePageToValue::CopyFrom(const CMsgScalePageToValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgScalePageToValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgScalePageToValue::IsInitialized() const {
  return true;
}

void CMsgScalePageToValue::Swap(CMsgScalePageToValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgScalePageToValue::InternalSwap(CMsgScalePageToValue* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(scale_, other->scale_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgScalePageToValue::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgScalePageToValueResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgScalePageToValueResponse::kBrowserHandleFieldNumber;
const int CMsgScalePageToValueResponse::kZoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgScalePageToValueResponse::CMsgScalePageToValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgScalePageToValueResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgScalePageToValueResponse)
}
CMsgScalePageToValueResponse::CMsgScalePageToValueResponse(const CMsgScalePageToValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoom_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
  // @@protoc_insertion_point(copy_constructor:CMsgScalePageToValueResponse)
}

void CMsgScalePageToValueResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoom_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
}

CMsgScalePageToValueResponse::~CMsgScalePageToValueResponse() {
  // @@protoc_insertion_point(destructor:CMsgScalePageToValueResponse)
  SharedDtor();
}

void CMsgScalePageToValueResponse::SharedDtor() {
}

void CMsgScalePageToValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgScalePageToValueResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgScalePageToValueResponse& CMsgScalePageToValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgScalePageToValueResponse.base);
  return *internal_default_instance();
}


void CMsgScalePageToValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgScalePageToValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&zoom_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(zoom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgScalePageToValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgScalePageToValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float zoom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_zoom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zoom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgScalePageToValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgScalePageToValueResponse)
  return false;
#undef DO_
}

void CMsgScalePageToValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgScalePageToValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional float zoom = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->zoom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgScalePageToValueResponse)
}

::google::protobuf::uint8* CMsgScalePageToValueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgScalePageToValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional float zoom = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->zoom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgScalePageToValueResponse)
  return target;
}

size_t CMsgScalePageToValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgScalePageToValueResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional float zoom = 2;
    if (has_zoom()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgScalePageToValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgScalePageToValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgScalePageToValueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgScalePageToValueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgScalePageToValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgScalePageToValueResponse)
    MergeFrom(*source);
  }
}

void CMsgScalePageToValueResponse::MergeFrom(const CMsgScalePageToValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgScalePageToValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      zoom_ = from.zoom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgScalePageToValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgScalePageToValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgScalePageToValueResponse::CopyFrom(const CMsgScalePageToValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgScalePageToValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgScalePageToValueResponse::IsInitialized() const {
  return true;
}

void CMsgScalePageToValueResponse::Swap(CMsgScalePageToValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgScalePageToValueResponse::InternalSwap(CMsgScalePageToValueResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(zoom_, other->zoom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgScalePageToValueResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSavePageToJPEG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSavePageToJPEG::kBrowserHandleFieldNumber;
const int CMsgSavePageToJPEG::kUrlFieldNumber;
const int CMsgSavePageToJPEG::kFilenameFieldNumber;
const int CMsgSavePageToJPEG::kWidthFieldNumber;
const int CMsgSavePageToJPEG::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSavePageToJPEG::CMsgSavePageToJPEG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSavePageToJPEG.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSavePageToJPEG)
}
CMsgSavePageToJPEG::CMsgSavePageToJPEG(const CMsgSavePageToJPEG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgSavePageToJPEG)
}

void CMsgSavePageToJPEG::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgSavePageToJPEG::~CMsgSavePageToJPEG() {
  // @@protoc_insertion_point(destructor:CMsgSavePageToJPEG)
  SharedDtor();
}

void CMsgSavePageToJPEG::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSavePageToJPEG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSavePageToJPEG::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSavePageToJPEG& CMsgSavePageToJPEG::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSavePageToJPEG.base);
  return *internal_default_instance();
}


void CMsgSavePageToJPEG::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSavePageToJPEG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSavePageToJPEG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSavePageToJPEG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSavePageToJPEG.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSavePageToJPEG.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSavePageToJPEG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSavePageToJPEG)
  return false;
#undef DO_
}

void CMsgSavePageToJPEG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSavePageToJPEG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEG.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEG.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // optional uint32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSavePageToJPEG)
}

::google::protobuf::uint8* CMsgSavePageToJPEG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSavePageToJPEG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEG.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEG.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // optional uint32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSavePageToJPEG)
  return target;
}

size_t CMsgSavePageToJPEG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSavePageToJPEG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 width = 4;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSavePageToJPEG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSavePageToJPEG)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSavePageToJPEG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSavePageToJPEG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSavePageToJPEG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSavePageToJPEG)
    MergeFrom(*source);
  }
}

void CMsgSavePageToJPEG::MergeFrom(const CMsgSavePageToJPEG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSavePageToJPEG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSavePageToJPEG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSavePageToJPEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSavePageToJPEG::CopyFrom(const CMsgSavePageToJPEG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSavePageToJPEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSavePageToJPEG::IsInitialized() const {
  return true;
}

void CMsgSavePageToJPEG::Swap(CMsgSavePageToJPEG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSavePageToJPEG::InternalSwap(CMsgSavePageToJPEG* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSavePageToJPEG::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSavePageToJPEGResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSavePageToJPEGResponse::kBrowserHandleFieldNumber;
const int CMsgSavePageToJPEGResponse::kUrlFieldNumber;
const int CMsgSavePageToJPEGResponse::kFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSavePageToJPEGResponse::CMsgSavePageToJPEGResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSavePageToJPEGResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSavePageToJPEGResponse)
}
CMsgSavePageToJPEGResponse::CMsgSavePageToJPEGResponse(const CMsgSavePageToJPEGResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgSavePageToJPEGResponse)
}

void CMsgSavePageToJPEGResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgSavePageToJPEGResponse::~CMsgSavePageToJPEGResponse() {
  // @@protoc_insertion_point(destructor:CMsgSavePageToJPEGResponse)
  SharedDtor();
}

void CMsgSavePageToJPEGResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSavePageToJPEGResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSavePageToJPEGResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSavePageToJPEGResponse& CMsgSavePageToJPEGResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSavePageToJPEGResponse.base);
  return *internal_default_instance();
}


void CMsgSavePageToJPEGResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSavePageToJPEGResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSavePageToJPEGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSavePageToJPEGResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSavePageToJPEGResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSavePageToJPEGResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSavePageToJPEGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSavePageToJPEGResponse)
  return false;
#undef DO_
}

void CMsgSavePageToJPEGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSavePageToJPEGResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEGResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEGResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSavePageToJPEGResponse)
}

::google::protobuf::uint8* CMsgSavePageToJPEGResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSavePageToJPEGResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEGResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSavePageToJPEGResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSavePageToJPEGResponse)
  return target;
}

size_t CMsgSavePageToJPEGResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSavePageToJPEGResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSavePageToJPEGResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSavePageToJPEGResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSavePageToJPEGResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSavePageToJPEGResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSavePageToJPEGResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSavePageToJPEGResponse)
    MergeFrom(*source);
  }
}

void CMsgSavePageToJPEGResponse::MergeFrom(const CMsgSavePageToJPEGResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSavePageToJPEGResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSavePageToJPEGResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSavePageToJPEGResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSavePageToJPEGResponse::CopyFrom(const CMsgSavePageToJPEGResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSavePageToJPEGResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSavePageToJPEGResponse::IsInitialized() const {
  return true;
}

void CMsgSavePageToJPEGResponse::Swap(CMsgSavePageToJPEGResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSavePageToJPEGResponse::InternalSwap(CMsgSavePageToJPEGResponse* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSavePageToJPEGResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSAlert::kBrowserHandleFieldNumber;
const int CMsgJSAlert::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSAlert::CMsgJSAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSAlert)
}
CMsgJSAlert::CMsgJSAlert(const CMsgJSAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgJSAlert)
}

void CMsgJSAlert::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgJSAlert::~CMsgJSAlert() {
  // @@protoc_insertion_point(destructor:CMsgJSAlert)
  SharedDtor();
}

void CMsgJSAlert::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSAlert::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSAlert& CMsgJSAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSAlert.base);
  return *internal_default_instance();
}


void CMsgJSAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSAlert.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSAlert)
  return false;
#undef DO_
}

void CMsgJSAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSAlert.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSAlert)
}

::google::protobuf::uint8* CMsgJSAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSAlert.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSAlert)
  return target;
}

size_t CMsgJSAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSAlert)
    MergeFrom(*source);
  }
}

void CMsgJSAlert::MergeFrom(const CMsgJSAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSAlert::CopyFrom(const CMsgJSAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSAlert::IsInitialized() const {
  return true;
}

void CMsgJSAlert::Swap(CMsgJSAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSAlert::InternalSwap(CMsgJSAlert* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSAlert::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSConfirm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSConfirm::kBrowserHandleFieldNumber;
const int CMsgJSConfirm::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSConfirm::CMsgJSConfirm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSConfirm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSConfirm)
}
CMsgJSConfirm::CMsgJSConfirm(const CMsgJSConfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgJSConfirm)
}

void CMsgJSConfirm::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgJSConfirm::~CMsgJSConfirm() {
  // @@protoc_insertion_point(destructor:CMsgJSConfirm)
  SharedDtor();
}

void CMsgJSConfirm::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSConfirm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSConfirm::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSConfirm& CMsgJSConfirm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSConfirm.base);
  return *internal_default_instance();
}


void CMsgJSConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSConfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSConfirm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSConfirm.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSConfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSConfirm)
  return false;
#undef DO_
}

void CMsgJSConfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSConfirm.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSConfirm)
}

::google::protobuf::uint8* CMsgJSConfirm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSConfirm.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSConfirm)
  return target;
}

size_t CMsgJSConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSConfirm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSConfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSConfirm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSConfirm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSConfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSConfirm)
    MergeFrom(*source);
  }
}

void CMsgJSConfirm::MergeFrom(const CMsgJSConfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSConfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSConfirm::CopyFrom(const CMsgJSConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSConfirm::IsInitialized() const {
  return true;
}

void CMsgJSConfirm::Swap(CMsgJSConfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSConfirm::InternalSwap(CMsgJSConfirm* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSConfirm::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSDialogResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSDialogResponse::kBrowserHandleFieldNumber;
const int CMsgJSDialogResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSDialogResponse::CMsgJSDialogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSDialogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSDialogResponse)
}
CMsgJSDialogResponse::CMsgJSDialogResponse(const CMsgJSDialogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CMsgJSDialogResponse)
}

void CMsgJSDialogResponse::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(result_));
}

CMsgJSDialogResponse::~CMsgJSDialogResponse() {
  // @@protoc_insertion_point(destructor:CMsgJSDialogResponse)
  SharedDtor();
}

void CMsgJSDialogResponse::SharedDtor() {
}

void CMsgJSDialogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSDialogResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSDialogResponse& CMsgJSDialogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSDialogResponse.base);
  return *internal_default_instance();
}


void CMsgJSDialogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSDialogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSDialogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSDialogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSDialogResponse)
  return false;
#undef DO_
}

void CMsgJSDialogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSDialogResponse)
}

::google::protobuf::uint8* CMsgJSDialogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSDialogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSDialogResponse)
  return target;
}

size_t CMsgJSDialogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSDialogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool result = 2;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSDialogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSDialogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSDialogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSDialogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSDialogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSDialogResponse)
    MergeFrom(*source);
  }
}

void CMsgJSDialogResponse::MergeFrom(const CMsgJSDialogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSDialogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSDialogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSDialogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSDialogResponse::CopyFrom(const CMsgJSDialogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSDialogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSDialogResponse::IsInitialized() const {
  return true;
}

void CMsgJSDialogResponse::Swap(CMsgJSDialogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSDialogResponse::InternalSwap(CMsgJSDialogResponse* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSDialogResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCanGoBackAndForward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCanGoBackAndForward::kBrowserHandleFieldNumber;
const int CMsgCanGoBackAndForward::kBgobackFieldNumber;
const int CMsgCanGoBackAndForward::kBgoforwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCanGoBackAndForward::CMsgCanGoBackAndForward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgCanGoBackAndForward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCanGoBackAndForward)
}
CMsgCanGoBackAndForward::CMsgCanGoBackAndForward(const CMsgCanGoBackAndForward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&bgoforward_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(bgoforward_));
  // @@protoc_insertion_point(copy_constructor:CMsgCanGoBackAndForward)
}

void CMsgCanGoBackAndForward::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgoforward_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(bgoforward_));
}

CMsgCanGoBackAndForward::~CMsgCanGoBackAndForward() {
  // @@protoc_insertion_point(destructor:CMsgCanGoBackAndForward)
  SharedDtor();
}

void CMsgCanGoBackAndForward::SharedDtor() {
}

void CMsgCanGoBackAndForward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCanGoBackAndForward::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCanGoBackAndForward& CMsgCanGoBackAndForward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgCanGoBackAndForward.base);
  return *internal_default_instance();
}


void CMsgCanGoBackAndForward::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCanGoBackAndForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bgoforward_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(bgoforward_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCanGoBackAndForward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCanGoBackAndForward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bgoback = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bgoback();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgoback_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bgoforward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bgoforward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgoforward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCanGoBackAndForward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCanGoBackAndForward)
  return false;
#undef DO_
}

void CMsgCanGoBackAndForward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCanGoBackAndForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool bgoback = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bgoback(), output);
  }

  // optional bool bgoforward = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bgoforward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCanGoBackAndForward)
}

::google::protobuf::uint8* CMsgCanGoBackAndForward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCanGoBackAndForward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool bgoback = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bgoback(), target);
  }

  // optional bool bgoforward = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bgoforward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCanGoBackAndForward)
  return target;
}

size_t CMsgCanGoBackAndForward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCanGoBackAndForward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bgoback = 2;
    if (has_bgoback()) {
      total_size += 1 + 1;
    }

    // optional bool bgoforward = 3;
    if (has_bgoforward()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCanGoBackAndForward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCanGoBackAndForward)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCanGoBackAndForward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCanGoBackAndForward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCanGoBackAndForward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCanGoBackAndForward)
    MergeFrom(*source);
  }
}

void CMsgCanGoBackAndForward::MergeFrom(const CMsgCanGoBackAndForward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCanGoBackAndForward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      bgoback_ = from.bgoback_;
    }
    if (cached_has_bits & 0x00000004u) {
      bgoforward_ = from.bgoforward_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCanGoBackAndForward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCanGoBackAndForward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCanGoBackAndForward::CopyFrom(const CMsgCanGoBackAndForward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCanGoBackAndForward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCanGoBackAndForward::IsInitialized() const {
  return true;
}

void CMsgCanGoBackAndForward::Swap(CMsgCanGoBackAndForward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCanGoBackAndForward::InternalSwap(CMsgCanGoBackAndForward* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(bgoback_, other->bgoback_);
  swap(bgoforward_, other->bgoforward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCanGoBackAndForward::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgOpenSteamURL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgOpenSteamURL::kBrowserHandleFieldNumber;
const int CMsgOpenSteamURL::kUrlFieldNumber;
const int CMsgOpenSteamURL::kReferrerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgOpenSteamURL::CMsgOpenSteamURL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgOpenSteamURL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgOpenSteamURL)
}
CMsgOpenSteamURL::CMsgOpenSteamURL(const CMsgOpenSteamURL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_referrer()) {
    referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgOpenSteamURL)
}

void CMsgOpenSteamURL::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgOpenSteamURL::~CMsgOpenSteamURL() {
  // @@protoc_insertion_point(destructor:CMsgOpenSteamURL)
  SharedDtor();
}

void CMsgOpenSteamURL::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgOpenSteamURL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgOpenSteamURL::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgOpenSteamURL& CMsgOpenSteamURL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgOpenSteamURL.base);
  return *internal_default_instance();
}


void CMsgOpenSteamURL::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgOpenSteamURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      referrer_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgOpenSteamURL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgOpenSteamURL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgOpenSteamURL.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string referrer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referrer().data(), static_cast<int>(this->referrer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgOpenSteamURL.referrer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgOpenSteamURL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgOpenSteamURL)
  return false;
#undef DO_
}

void CMsgOpenSteamURL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgOpenSteamURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenSteamURL.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string referrer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer().data(), static_cast<int>(this->referrer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenSteamURL.referrer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->referrer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgOpenSteamURL)
}

::google::protobuf::uint8* CMsgOpenSteamURL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgOpenSteamURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenSteamURL.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string referrer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer().data(), static_cast<int>(this->referrer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgOpenSteamURL.referrer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->referrer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgOpenSteamURL)
  return target;
}

size_t CMsgOpenSteamURL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgOpenSteamURL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string referrer = 3;
    if (has_referrer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referrer());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgOpenSteamURL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgOpenSteamURL)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgOpenSteamURL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgOpenSteamURL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgOpenSteamURL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgOpenSteamURL)
    MergeFrom(*source);
  }
}

void CMsgOpenSteamURL::MergeFrom(const CMsgOpenSteamURL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgOpenSteamURL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_referrer();
      referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgOpenSteamURL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgOpenSteamURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenSteamURL::CopyFrom(const CMsgOpenSteamURL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgOpenSteamURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenSteamURL::IsInitialized() const {
  return true;
}

void CMsgOpenSteamURL::Swap(CMsgOpenSteamURL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgOpenSteamURL::InternalSwap(CMsgOpenSteamURL* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  referrer_.Swap(&other->referrer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgOpenSteamURL::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetCookie::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetCookie::kKeyFieldNumber;
const int CMsgSetCookie::kValueFieldNumber;
const int CMsgSetCookie::kPathFieldNumber;
const int CMsgSetCookie::kHostFieldNumber;
const int CMsgSetCookie::kExpiresFieldNumber;
const int CMsgSetCookie::kSecureFieldNumber;
const int CMsgSetCookie::kHttponlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetCookie::CMsgSetCookie()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetCookie.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetCookie)
}
CMsgSetCookie::CMsgSetCookie(const CMsgSetCookie& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&expires_, &from.expires_,
    static_cast<size_t>(reinterpret_cast<char*>(&httponly_) -
    reinterpret_cast<char*>(&expires_)) + sizeof(httponly_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetCookie)
}

void CMsgSetCookie::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&expires_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&httponly_) -
      reinterpret_cast<char*>(&expires_)) + sizeof(httponly_));
}

CMsgSetCookie::~CMsgSetCookie() {
  // @@protoc_insertion_point(destructor:CMsgSetCookie)
  SharedDtor();
}

void CMsgSetCookie::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetCookie::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetCookie::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetCookie& CMsgSetCookie::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetCookie.base);
  return *internal_default_instance();
}


void CMsgSetCookie::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      host_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&expires_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&httponly_) -
        reinterpret_cast<char*>(&expires_)) + sizeof(httponly_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetCookie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetCookie)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetCookie.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetCookie.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetCookie.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetCookie.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expires = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_expires();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expires_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool secure = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_secure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool httponly = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_httponly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &httponly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetCookie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetCookie)
  return false;
#undef DO_
}

void CMsgSetCookie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional string path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string host = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->host(), output);
  }

  // optional uint32 expires = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->expires(), output);
  }

  // optional bool secure = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->secure(), output);
  }

  // optional bool httponly = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->httponly(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetCookie)
}

::google::protobuf::uint8* CMsgSetCookie::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional string path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string host = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetCookie.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->host(), target);
  }

  // optional uint32 expires = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->expires(), target);
  }

  // optional bool secure = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->secure(), target);
  }

  // optional bool httponly = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->httponly(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetCookie)
  return target;
}

size_t CMsgSetCookie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetCookie)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional string path = 3;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string host = 4;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional uint32 expires = 5;
    if (has_expires()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expires());
    }

    // optional bool secure = 6;
    if (has_secure()) {
      total_size += 1 + 1;
    }

    // optional bool httponly = 7;
    if (has_httponly()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetCookie::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetCookie)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetCookie* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetCookie>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetCookie)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetCookie)
    MergeFrom(*source);
  }
}

void CMsgSetCookie::MergeFrom(const CMsgSetCookie& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetCookie)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000010u) {
      expires_ = from.expires_;
    }
    if (cached_has_bits & 0x00000020u) {
      secure_ = from.secure_;
    }
    if (cached_has_bits & 0x00000040u) {
      httponly_ = from.httponly_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetCookie::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetCookie::CopyFrom(const CMsgSetCookie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetCookie::IsInitialized() const {
  return true;
}

void CMsgSetCookie::Swap(CMsgSetCookie* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetCookie::InternalSwap(CMsgSetCookie* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expires_, other->expires_);
  swap(secure_, other->secure_);
  swap(httponly_, other->httponly_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetCookie::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetTargetFrameRate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetTargetFrameRate::kBrowserHandleFieldNumber;
const int CMsgSetTargetFrameRate::kNTargetFrameRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetTargetFrameRate::CMsgSetTargetFrameRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetTargetFrameRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetTargetFrameRate)
}
CMsgSetTargetFrameRate::CMsgSetTargetFrameRate(const CMsgSetTargetFrameRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&ntargetframerate_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(ntargetframerate_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetTargetFrameRate)
}

void CMsgSetTargetFrameRate::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntargetframerate_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(ntargetframerate_));
}

CMsgSetTargetFrameRate::~CMsgSetTargetFrameRate() {
  // @@protoc_insertion_point(destructor:CMsgSetTargetFrameRate)
  SharedDtor();
}

void CMsgSetTargetFrameRate::SharedDtor() {
}

void CMsgSetTargetFrameRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetTargetFrameRate::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetTargetFrameRate& CMsgSetTargetFrameRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetTargetFrameRate.base);
  return *internal_default_instance();
}


void CMsgSetTargetFrameRate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetTargetFrameRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ntargetframerate_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(ntargetframerate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetTargetFrameRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetTargetFrameRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 nTargetFrameRate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ntargetframerate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntargetframerate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetTargetFrameRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetTargetFrameRate)
  return false;
#undef DO_
}

void CMsgSetTargetFrameRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetTargetFrameRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 nTargetFrameRate = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ntargetframerate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetTargetFrameRate)
}

::google::protobuf::uint8* CMsgSetTargetFrameRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetTargetFrameRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 nTargetFrameRate = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ntargetframerate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetTargetFrameRate)
  return target;
}

size_t CMsgSetTargetFrameRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetTargetFrameRate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 nTargetFrameRate = 2;
    if (has_ntargetframerate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ntargetframerate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetTargetFrameRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetTargetFrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetTargetFrameRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetTargetFrameRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetTargetFrameRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetTargetFrameRate)
    MergeFrom(*source);
  }
}

void CMsgSetTargetFrameRate::MergeFrom(const CMsgSetTargetFrameRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetTargetFrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      ntargetframerate_ = from.ntargetframerate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetTargetFrameRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetTargetFrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetTargetFrameRate::CopyFrom(const CMsgSetTargetFrameRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetTargetFrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetTargetFrameRate::IsInitialized() const {
  return true;
}

void CMsgSetTargetFrameRate::Swap(CMsgSetTargetFrameRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetTargetFrameRate::InternalSwap(CMsgSetTargetFrameRate* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(ntargetframerate_, other->ntargetframerate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetTargetFrameRate::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPauseRepaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPauseRepaint::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPauseRepaint::CMsgPauseRepaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPauseRepaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPauseRepaint)
}
CMsgPauseRepaint::CMsgPauseRepaint(const CMsgPauseRepaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgPauseRepaint)
}

void CMsgPauseRepaint::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgPauseRepaint::~CMsgPauseRepaint() {
  // @@protoc_insertion_point(destructor:CMsgPauseRepaint)
  SharedDtor();
}

void CMsgPauseRepaint::SharedDtor() {
}

void CMsgPauseRepaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPauseRepaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPauseRepaint& CMsgPauseRepaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPauseRepaint.base);
  return *internal_default_instance();
}


void CMsgPauseRepaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPauseRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPauseRepaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPauseRepaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPauseRepaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPauseRepaint)
  return false;
#undef DO_
}

void CMsgPauseRepaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPauseRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPauseRepaint)
}

::google::protobuf::uint8* CMsgPauseRepaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPauseRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPauseRepaint)
  return target;
}

size_t CMsgPauseRepaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPauseRepaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPauseRepaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPauseRepaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPauseRepaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPauseRepaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPauseRepaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPauseRepaint)
    MergeFrom(*source);
  }
}

void CMsgPauseRepaint::MergeFrom(const CMsgPauseRepaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPauseRepaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgPauseRepaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPauseRepaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPauseRepaint::CopyFrom(const CMsgPauseRepaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPauseRepaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPauseRepaint::IsInitialized() const {
  return true;
}

void CMsgPauseRepaint::Swap(CMsgPauseRepaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPauseRepaint::InternalSwap(CMsgPauseRepaint* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPauseRepaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFullRepaint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFullRepaint::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFullRepaint::CMsgFullRepaint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFullRepaint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFullRepaint)
}
CMsgFullRepaint::CMsgFullRepaint(const CMsgFullRepaint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFullRepaint)
}

void CMsgFullRepaint::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgFullRepaint::~CMsgFullRepaint() {
  // @@protoc_insertion_point(destructor:CMsgFullRepaint)
  SharedDtor();
}

void CMsgFullRepaint::SharedDtor() {
}

void CMsgFullRepaint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFullRepaint::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFullRepaint& CMsgFullRepaint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFullRepaint.base);
  return *internal_default_instance();
}


void CMsgFullRepaint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFullRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFullRepaint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFullRepaint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFullRepaint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFullRepaint)
  return false;
#undef DO_
}

void CMsgFullRepaint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFullRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFullRepaint)
}

::google::protobuf::uint8* CMsgFullRepaint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFullRepaint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFullRepaint)
  return target;
}

size_t CMsgFullRepaint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFullRepaint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFullRepaint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFullRepaint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFullRepaint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFullRepaint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFullRepaint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFullRepaint)
    MergeFrom(*source);
  }
}

void CMsgFullRepaint::MergeFrom(const CMsgFullRepaint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFullRepaint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgFullRepaint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFullRepaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFullRepaint::CopyFrom(const CMsgFullRepaint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFullRepaint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFullRepaint::IsInitialized() const {
  return true;
}

void CMsgFullRepaint::Swap(CMsgFullRepaint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFullRepaint::InternalSwap(CMsgFullRepaint* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFullRepaint::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestFullScreen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestFullScreen::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestFullScreen::CMsgRequestFullScreen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgRequestFullScreen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestFullScreen)
}
CMsgRequestFullScreen::CMsgRequestFullScreen(const CMsgRequestFullScreen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgRequestFullScreen)
}

void CMsgRequestFullScreen::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgRequestFullScreen::~CMsgRequestFullScreen() {
  // @@protoc_insertion_point(destructor:CMsgRequestFullScreen)
  SharedDtor();
}

void CMsgRequestFullScreen::SharedDtor() {
}

void CMsgRequestFullScreen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgRequestFullScreen::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestFullScreen& CMsgRequestFullScreen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgRequestFullScreen.base);
  return *internal_default_instance();
}


void CMsgRequestFullScreen::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestFullScreen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestFullScreen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestFullScreen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestFullScreen)
  return false;
#undef DO_
}

void CMsgRequestFullScreen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestFullScreen)
}

::google::protobuf::uint8* CMsgRequestFullScreen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestFullScreen)
  return target;
}

size_t CMsgRequestFullScreen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestFullScreen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestFullScreen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestFullScreen)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestFullScreen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestFullScreen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestFullScreen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestFullScreen)
    MergeFrom(*source);
  }
}

void CMsgRequestFullScreen::MergeFrom(const CMsgRequestFullScreen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestFullScreen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgRequestFullScreen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestFullScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestFullScreen::CopyFrom(const CMsgRequestFullScreen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestFullScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestFullScreen::IsInitialized() const {
  return true;
}

void CMsgRequestFullScreen::Swap(CMsgRequestFullScreen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestFullScreen::InternalSwap(CMsgRequestFullScreen* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgRequestFullScreen::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgExitFullScreen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgExitFullScreen::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgExitFullScreen::CMsgExitFullScreen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgExitFullScreen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgExitFullScreen)
}
CMsgExitFullScreen::CMsgExitFullScreen(const CMsgExitFullScreen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgExitFullScreen)
}

void CMsgExitFullScreen::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgExitFullScreen::~CMsgExitFullScreen() {
  // @@protoc_insertion_point(destructor:CMsgExitFullScreen)
  SharedDtor();
}

void CMsgExitFullScreen::SharedDtor() {
}

void CMsgExitFullScreen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgExitFullScreen::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgExitFullScreen& CMsgExitFullScreen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgExitFullScreen.base);
  return *internal_default_instance();
}


void CMsgExitFullScreen::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgExitFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgExitFullScreen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgExitFullScreen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgExitFullScreen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgExitFullScreen)
  return false;
#undef DO_
}

void CMsgExitFullScreen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgExitFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgExitFullScreen)
}

::google::protobuf::uint8* CMsgExitFullScreen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgExitFullScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgExitFullScreen)
  return target;
}

size_t CMsgExitFullScreen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgExitFullScreen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgExitFullScreen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgExitFullScreen)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgExitFullScreen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgExitFullScreen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgExitFullScreen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgExitFullScreen)
    MergeFrom(*source);
  }
}

void CMsgExitFullScreen::MergeFrom(const CMsgExitFullScreen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgExitFullScreen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgExitFullScreen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgExitFullScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExitFullScreen::CopyFrom(const CMsgExitFullScreen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgExitFullScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExitFullScreen::IsInitialized() const {
  return true;
}

void CMsgExitFullScreen::Swap(CMsgExitFullScreen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgExitFullScreen::InternalSwap(CMsgExitFullScreen* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgExitFullScreen::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgToggleFindInPageDialog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgToggleFindInPageDialog::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgToggleFindInPageDialog::CMsgToggleFindInPageDialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgToggleFindInPageDialog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgToggleFindInPageDialog)
}
CMsgToggleFindInPageDialog::CMsgToggleFindInPageDialog(const CMsgToggleFindInPageDialog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgToggleFindInPageDialog)
}

void CMsgToggleFindInPageDialog::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgToggleFindInPageDialog::~CMsgToggleFindInPageDialog() {
  // @@protoc_insertion_point(destructor:CMsgToggleFindInPageDialog)
  SharedDtor();
}

void CMsgToggleFindInPageDialog::SharedDtor() {
}

void CMsgToggleFindInPageDialog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgToggleFindInPageDialog::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgToggleFindInPageDialog& CMsgToggleFindInPageDialog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgToggleFindInPageDialog.base);
  return *internal_default_instance();
}


void CMsgToggleFindInPageDialog::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgToggleFindInPageDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgToggleFindInPageDialog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgToggleFindInPageDialog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgToggleFindInPageDialog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgToggleFindInPageDialog)
  return false;
#undef DO_
}

void CMsgToggleFindInPageDialog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgToggleFindInPageDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgToggleFindInPageDialog)
}

::google::protobuf::uint8* CMsgToggleFindInPageDialog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgToggleFindInPageDialog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgToggleFindInPageDialog)
  return target;
}

size_t CMsgToggleFindInPageDialog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgToggleFindInPageDialog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgToggleFindInPageDialog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgToggleFindInPageDialog)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgToggleFindInPageDialog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgToggleFindInPageDialog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgToggleFindInPageDialog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgToggleFindInPageDialog)
    MergeFrom(*source);
  }
}

void CMsgToggleFindInPageDialog::MergeFrom(const CMsgToggleFindInPageDialog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgToggleFindInPageDialog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgToggleFindInPageDialog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgToggleFindInPageDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgToggleFindInPageDialog::CopyFrom(const CMsgToggleFindInPageDialog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgToggleFindInPageDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgToggleFindInPageDialog::IsInitialized() const {
  return true;
}

void CMsgToggleFindInPageDialog::Swap(CMsgToggleFindInPageDialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgToggleFindInPageDialog::InternalSwap(CMsgToggleFindInPageDialog* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgToggleFindInPageDialog::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetPIDShuttingDown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetPIDShuttingDown::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetPIDShuttingDown::CMsgSetPIDShuttingDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetPIDShuttingDown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetPIDShuttingDown)
}
CMsgSetPIDShuttingDown::CMsgSetPIDShuttingDown(const CMsgSetPIDShuttingDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgSetPIDShuttingDown)
}

void CMsgSetPIDShuttingDown::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgSetPIDShuttingDown::~CMsgSetPIDShuttingDown() {
  // @@protoc_insertion_point(destructor:CMsgSetPIDShuttingDown)
  SharedDtor();
}

void CMsgSetPIDShuttingDown::SharedDtor() {
}

void CMsgSetPIDShuttingDown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetPIDShuttingDown::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetPIDShuttingDown& CMsgSetPIDShuttingDown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetPIDShuttingDown.base);
  return *internal_default_instance();
}


void CMsgSetPIDShuttingDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetPIDShuttingDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetPIDShuttingDown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetPIDShuttingDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetPIDShuttingDown)
  return false;
#undef DO_
}

void CMsgSetPIDShuttingDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetPIDShuttingDown)
}

::google::protobuf::uint8* CMsgSetPIDShuttingDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetPIDShuttingDown)
  return target;
}

size_t CMsgSetPIDShuttingDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetPIDShuttingDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetPIDShuttingDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetPIDShuttingDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetPIDShuttingDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetPIDShuttingDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetPIDShuttingDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetPIDShuttingDown)
    MergeFrom(*source);
  }
}

void CMsgSetPIDShuttingDown::MergeFrom(const CMsgSetPIDShuttingDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetPIDShuttingDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgSetPIDShuttingDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetPIDShuttingDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetPIDShuttingDown::CopyFrom(const CMsgSetPIDShuttingDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetPIDShuttingDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetPIDShuttingDown::IsInitialized() const {
  return true;
}

void CMsgSetPIDShuttingDown::Swap(CMsgSetPIDShuttingDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetPIDShuttingDown::InternalSwap(CMsgSetPIDShuttingDown* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetPIDShuttingDown::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDisableBackgroundThrottling::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDisableBackgroundThrottling::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDisableBackgroundThrottling::CMsgDisableBackgroundThrottling()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgDisableBackgroundThrottling.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDisableBackgroundThrottling)
}
CMsgDisableBackgroundThrottling::CMsgDisableBackgroundThrottling(const CMsgDisableBackgroundThrottling& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgDisableBackgroundThrottling)
}

void CMsgDisableBackgroundThrottling::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgDisableBackgroundThrottling::~CMsgDisableBackgroundThrottling() {
  // @@protoc_insertion_point(destructor:CMsgDisableBackgroundThrottling)
  SharedDtor();
}

void CMsgDisableBackgroundThrottling::SharedDtor() {
}

void CMsgDisableBackgroundThrottling::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDisableBackgroundThrottling::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDisableBackgroundThrottling& CMsgDisableBackgroundThrottling::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgDisableBackgroundThrottling.base);
  return *internal_default_instance();
}


void CMsgDisableBackgroundThrottling::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDisableBackgroundThrottling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDisableBackgroundThrottling::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDisableBackgroundThrottling)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDisableBackgroundThrottling)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDisableBackgroundThrottling)
  return false;
#undef DO_
}

void CMsgDisableBackgroundThrottling::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDisableBackgroundThrottling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDisableBackgroundThrottling)
}

::google::protobuf::uint8* CMsgDisableBackgroundThrottling::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDisableBackgroundThrottling)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDisableBackgroundThrottling)
  return target;
}

size_t CMsgDisableBackgroundThrottling::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDisableBackgroundThrottling)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDisableBackgroundThrottling::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDisableBackgroundThrottling)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDisableBackgroundThrottling* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDisableBackgroundThrottling>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDisableBackgroundThrottling)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDisableBackgroundThrottling)
    MergeFrom(*source);
  }
}

void CMsgDisableBackgroundThrottling::MergeFrom(const CMsgDisableBackgroundThrottling& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDisableBackgroundThrottling)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgDisableBackgroundThrottling::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDisableBackgroundThrottling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDisableBackgroundThrottling::CopyFrom(const CMsgDisableBackgroundThrottling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDisableBackgroundThrottling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDisableBackgroundThrottling::IsInitialized() const {
  return true;
}

void CMsgDisableBackgroundThrottling::Swap(CMsgDisableBackgroundThrottling* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDisableBackgroundThrottling::InternalSwap(CMsgDisableBackgroundThrottling* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDisableBackgroundThrottling::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAckPIDShuttingDown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAckPIDShuttingDown::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAckPIDShuttingDown::CMsgAckPIDShuttingDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgAckPIDShuttingDown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAckPIDShuttingDown)
}
CMsgAckPIDShuttingDown::CMsgAckPIDShuttingDown(const CMsgAckPIDShuttingDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgAckPIDShuttingDown)
}

void CMsgAckPIDShuttingDown::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgAckPIDShuttingDown::~CMsgAckPIDShuttingDown() {
  // @@protoc_insertion_point(destructor:CMsgAckPIDShuttingDown)
  SharedDtor();
}

void CMsgAckPIDShuttingDown::SharedDtor() {
}

void CMsgAckPIDShuttingDown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAckPIDShuttingDown::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAckPIDShuttingDown& CMsgAckPIDShuttingDown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgAckPIDShuttingDown.base);
  return *internal_default_instance();
}


void CMsgAckPIDShuttingDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAckPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAckPIDShuttingDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAckPIDShuttingDown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAckPIDShuttingDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAckPIDShuttingDown)
  return false;
#undef DO_
}

void CMsgAckPIDShuttingDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAckPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAckPIDShuttingDown)
}

::google::protobuf::uint8* CMsgAckPIDShuttingDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAckPIDShuttingDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAckPIDShuttingDown)
  return target;
}

size_t CMsgAckPIDShuttingDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAckPIDShuttingDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAckPIDShuttingDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAckPIDShuttingDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAckPIDShuttingDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAckPIDShuttingDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAckPIDShuttingDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAckPIDShuttingDown)
    MergeFrom(*source);
  }
}

void CMsgAckPIDShuttingDown::MergeFrom(const CMsgAckPIDShuttingDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAckPIDShuttingDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgAckPIDShuttingDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAckPIDShuttingDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAckPIDShuttingDown::CopyFrom(const CMsgAckPIDShuttingDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAckPIDShuttingDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAckPIDShuttingDown::IsInitialized() const {
  return true;
}

void CMsgAckPIDShuttingDown::Swap(CMsgAckPIDShuttingDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAckPIDShuttingDown::InternalSwap(CMsgAckPIDShuttingDown* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAckPIDShuttingDown::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGetCookiesForURL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGetCookiesForURL::kBrowserHandleFieldNumber;
const int CMsgGetCookiesForURL::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGetCookiesForURL::CMsgGetCookiesForURL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGetCookiesForURL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGetCookiesForURL)
}
CMsgGetCookiesForURL::CMsgGetCookiesForURL(const CMsgGetCookiesForURL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgGetCookiesForURL)
}

void CMsgGetCookiesForURL::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgGetCookiesForURL::~CMsgGetCookiesForURL() {
  // @@protoc_insertion_point(destructor:CMsgGetCookiesForURL)
  SharedDtor();
}

void CMsgGetCookiesForURL::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGetCookiesForURL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGetCookiesForURL::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGetCookiesForURL& CMsgGetCookiesForURL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGetCookiesForURL.base);
  return *internal_default_instance();
}


void CMsgGetCookiesForURL::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGetCookiesForURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGetCookiesForURL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGetCookiesForURL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGetCookiesForURL.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGetCookiesForURL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGetCookiesForURL)
  return false;
#undef DO_
}

void CMsgGetCookiesForURL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGetCookiesForURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGetCookiesForURL.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGetCookiesForURL)
}

::google::protobuf::uint8* CMsgGetCookiesForURL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGetCookiesForURL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGetCookiesForURL.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGetCookiesForURL)
  return target;
}

size_t CMsgGetCookiesForURL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGetCookiesForURL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGetCookiesForURL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGetCookiesForURL)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGetCookiesForURL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGetCookiesForURL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGetCookiesForURL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGetCookiesForURL)
    MergeFrom(*source);
  }
}

void CMsgGetCookiesForURL::MergeFrom(const CMsgGetCookiesForURL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGetCookiesForURL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGetCookiesForURL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGetCookiesForURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGetCookiesForURL::CopyFrom(const CMsgGetCookiesForURL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGetCookiesForURL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGetCookiesForURL::IsInitialized() const {
  return true;
}

void CMsgGetCookiesForURL::Swap(CMsgGetCookiesForURL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGetCookiesForURL::InternalSwap(CMsgGetCookiesForURL* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGetCookiesForURL::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCookie::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCookie::kNameFieldNumber;
const int CCookie::kValueFieldNumber;
const int CCookie::kDomainFieldNumber;
const int CCookie::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCookie::CCookie()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CCookie.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCookie)
}
CCookie::CCookie(const CCookie& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:CCookie)
}

void CCookie::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCookie::~CCookie() {
  // @@protoc_insertion_point(destructor:CCookie)
  SharedDtor();
}

void CCookie::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCookie::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCookie::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCookie& CCookie::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CCookie.base);
  return *internal_default_instance();
}


void CCookie::Clear() {
// @@protoc_insertion_point(message_clear_start:CCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      domain_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCookie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCookie)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCookie.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCookie.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCookie.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCookie.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCookie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCookie)
  return false;
#undef DO_
}

void CCookie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional string domain = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->domain(), output);
  }

  // optional string path = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCookie)
}

::google::protobuf::uint8* CCookie::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional string domain = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->domain(), target);
  }

  // optional string path = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCookie.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCookie)
  return target;
}

size_t CCookie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCookie)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional string domain = 3;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string path = 4;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCookie::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCookie)
  GOOGLE_DCHECK_NE(&from, this);
  const CCookie* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCookie>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCookie)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCookie)
    MergeFrom(*source);
  }
}

void CCookie::MergeFrom(const CCookie& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCookie)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void CCookie::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCookie::CopyFrom(const CCookie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCookie::IsInitialized() const {
  return true;
}

void CCookie::Swap(CCookie* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCookie::InternalSwap(CCookie* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCookie::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGetCookiesForURLResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGetCookiesForURLResponse::kBrowserHandleFieldNumber;
const int CMsgGetCookiesForURLResponse::kUrlFieldNumber;
const int CMsgGetCookiesForURLResponse::kCookiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGetCookiesForURLResponse::CMsgGetCookiesForURLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGetCookiesForURLResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGetCookiesForURLResponse)
}
CMsgGetCookiesForURLResponse::CMsgGetCookiesForURLResponse(const CMsgGetCookiesForURLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cookies_(from.cookies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgGetCookiesForURLResponse)
}

void CMsgGetCookiesForURLResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgGetCookiesForURLResponse::~CMsgGetCookiesForURLResponse() {
  // @@protoc_insertion_point(destructor:CMsgGetCookiesForURLResponse)
  SharedDtor();
}

void CMsgGetCookiesForURLResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGetCookiesForURLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGetCookiesForURLResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGetCookiesForURLResponse& CMsgGetCookiesForURLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGetCookiesForURLResponse.base);
  return *internal_default_instance();
}


void CMsgGetCookiesForURLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGetCookiesForURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cookies_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGetCookiesForURLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGetCookiesForURLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGetCookiesForURLResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCookie cookies = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cookies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGetCookiesForURLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGetCookiesForURLResponse)
  return false;
#undef DO_
}

void CMsgGetCookiesForURLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGetCookiesForURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGetCookiesForURLResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // repeated .CCookie cookies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cookies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->cookies(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGetCookiesForURLResponse)
}

::google::protobuf::uint8* CMsgGetCookiesForURLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGetCookiesForURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGetCookiesForURLResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // repeated .CCookie cookies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cookies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cookies(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGetCookiesForURLResponse)
  return target;
}

size_t CMsgGetCookiesForURLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGetCookiesForURLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCookie cookies = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cookies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cookies(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGetCookiesForURLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGetCookiesForURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGetCookiesForURLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGetCookiesForURLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGetCookiesForURLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGetCookiesForURLResponse)
    MergeFrom(*source);
  }
}

void CMsgGetCookiesForURLResponse::MergeFrom(const CMsgGetCookiesForURLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGetCookiesForURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cookies_.MergeFrom(from.cookies_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGetCookiesForURLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGetCookiesForURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGetCookiesForURLResponse::CopyFrom(const CMsgGetCookiesForURLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGetCookiesForURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGetCookiesForURLResponse::IsInitialized() const {
  return true;
}

void CMsgGetCookiesForURLResponse::Swap(CMsgGetCookiesForURLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGetCookiesForURLResponse::InternalSwap(CMsgGetCookiesForURLResponse* other) {
  using std::swap;
  CastToBase(&cookies_)->InternalSwap(CastToBase(&other->cookies_));
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGetCookiesForURLResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNodeHasFocus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNodeHasFocus::kBrowserHandleFieldNumber;
const int CMsgNodeHasFocus::kBInputFieldNumber;
const int CMsgNodeHasFocus::kNameFieldNumber;
const int CMsgNodeHasFocus::kElementtagnameFieldNumber;
const int CMsgNodeHasFocus::kSearchbuttontextFieldNumber;
const int CMsgNodeHasFocus::kBHasMultipleInputsFieldNumber;
const int CMsgNodeHasFocus::kInputTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNodeHasFocus::CMsgNodeHasFocus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgNodeHasFocus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNodeHasFocus)
}
CMsgNodeHasFocus::CMsgNodeHasFocus(const CMsgNodeHasFocus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  elementtagname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_elementtagname()) {
    elementtagname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.elementtagname_);
  }
  searchbuttontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_searchbuttontext()) {
    searchbuttontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.searchbuttontext_);
  }
  input_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input_type()) {
    input_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_type_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&bhasmultipleinputs_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(bhasmultipleinputs_));
  // @@protoc_insertion_point(copy_constructor:CMsgNodeHasFocus)
}

void CMsgNodeHasFocus::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  elementtagname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  searchbuttontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bhasmultipleinputs_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(bhasmultipleinputs_));
}

CMsgNodeHasFocus::~CMsgNodeHasFocus() {
  // @@protoc_insertion_point(destructor:CMsgNodeHasFocus)
  SharedDtor();
}

void CMsgNodeHasFocus::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  elementtagname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  searchbuttontext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgNodeHasFocus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgNodeHasFocus::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNodeHasFocus& CMsgNodeHasFocus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgNodeHasFocus.base);
  return *internal_default_instance();
}


void CMsgNodeHasFocus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNodeHasFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      elementtagname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      searchbuttontext_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      input_type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bhasmultipleinputs_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(bhasmultipleinputs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNodeHasFocus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNodeHasFocus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bInput = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_binput();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &binput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNodeHasFocus.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string elementtagname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_elementtagname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->elementtagname().data(), static_cast<int>(this->elementtagname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNodeHasFocus.elementtagname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string searchbuttontext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_searchbuttontext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->searchbuttontext().data(), static_cast<int>(this->searchbuttontext().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNodeHasFocus.searchbuttontext");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bHasMultipleInputs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_bhasmultipleinputs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bhasmultipleinputs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string input_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_type().data(), static_cast<int>(this->input_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNodeHasFocus.input_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNodeHasFocus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNodeHasFocus)
  return false;
#undef DO_
}

void CMsgNodeHasFocus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNodeHasFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional bool bInput = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->binput(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string elementtagname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->elementtagname().data(), static_cast<int>(this->elementtagname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.elementtagname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->elementtagname(), output);
  }

  // optional string searchbuttontext = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->searchbuttontext().data(), static_cast<int>(this->searchbuttontext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.searchbuttontext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->searchbuttontext(), output);
  }

  // optional bool bHasMultipleInputs = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bhasmultipleinputs(), output);
  }

  // optional string input_type = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_type().data(), static_cast<int>(this->input_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.input_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->input_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNodeHasFocus)
}

::google::protobuf::uint8* CMsgNodeHasFocus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNodeHasFocus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional bool bInput = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->binput(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string elementtagname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->elementtagname().data(), static_cast<int>(this->elementtagname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.elementtagname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->elementtagname(), target);
  }

  // optional string searchbuttontext = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->searchbuttontext().data(), static_cast<int>(this->searchbuttontext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.searchbuttontext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->searchbuttontext(), target);
  }

  // optional bool bHasMultipleInputs = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bhasmultipleinputs(), target);
  }

  // optional string input_type = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_type().data(), static_cast<int>(this->input_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNodeHasFocus.input_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->input_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNodeHasFocus)
  return target;
}

size_t CMsgNodeHasFocus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNodeHasFocus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string elementtagname = 4;
    if (has_elementtagname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->elementtagname());
    }

    // optional string searchbuttontext = 5;
    if (has_searchbuttontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->searchbuttontext());
    }

    // optional string input_type = 7;
    if (has_input_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->input_type());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional bool bInput = 2;
    if (has_binput()) {
      total_size += 1 + 1;
    }

    // optional bool bHasMultipleInputs = 6;
    if (has_bhasmultipleinputs()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgNodeHasFocus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNodeHasFocus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNodeHasFocus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNodeHasFocus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNodeHasFocus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNodeHasFocus)
    MergeFrom(*source);
  }
}

void CMsgNodeHasFocus::MergeFrom(const CMsgNodeHasFocus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNodeHasFocus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_elementtagname();
      elementtagname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.elementtagname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_searchbuttontext();
      searchbuttontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.searchbuttontext_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_input_type();
      input_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000020u) {
      binput_ = from.binput_;
    }
    if (cached_has_bits & 0x00000040u) {
      bhasmultipleinputs_ = from.bhasmultipleinputs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgNodeHasFocus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNodeHasFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNodeHasFocus::CopyFrom(const CMsgNodeHasFocus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNodeHasFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNodeHasFocus::IsInitialized() const {
  return true;
}

void CMsgNodeHasFocus::Swap(CMsgNodeHasFocus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNodeHasFocus::InternalSwap(CMsgNodeHasFocus* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  elementtagname_.Swap(&other->elementtagname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  searchbuttontext_.Swap(&other->searchbuttontext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_type_.Swap(&other->input_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(binput_, other->binput_);
  swap(bhasmultipleinputs_, other->bhasmultipleinputs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgNodeHasFocus::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgZoomToFocusedElement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgZoomToFocusedElement::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgZoomToFocusedElement::CMsgZoomToFocusedElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToFocusedElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgZoomToFocusedElement)
}
CMsgZoomToFocusedElement::CMsgZoomToFocusedElement(const CMsgZoomToFocusedElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgZoomToFocusedElement)
}

void CMsgZoomToFocusedElement::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgZoomToFocusedElement::~CMsgZoomToFocusedElement() {
  // @@protoc_insertion_point(destructor:CMsgZoomToFocusedElement)
  SharedDtor();
}

void CMsgZoomToFocusedElement::SharedDtor() {
}

void CMsgZoomToFocusedElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgZoomToFocusedElement::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgZoomToFocusedElement& CMsgZoomToFocusedElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgZoomToFocusedElement.base);
  return *internal_default_instance();
}


void CMsgZoomToFocusedElement::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgZoomToFocusedElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgZoomToFocusedElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgZoomToFocusedElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgZoomToFocusedElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgZoomToFocusedElement)
  return false;
#undef DO_
}

void CMsgZoomToFocusedElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgZoomToFocusedElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgZoomToFocusedElement)
}

::google::protobuf::uint8* CMsgZoomToFocusedElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgZoomToFocusedElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgZoomToFocusedElement)
  return target;
}

size_t CMsgZoomToFocusedElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgZoomToFocusedElement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgZoomToFocusedElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgZoomToFocusedElement)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgZoomToFocusedElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgZoomToFocusedElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgZoomToFocusedElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgZoomToFocusedElement)
    MergeFrom(*source);
  }
}

void CMsgZoomToFocusedElement::MergeFrom(const CMsgZoomToFocusedElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgZoomToFocusedElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgZoomToFocusedElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgZoomToFocusedElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgZoomToFocusedElement::CopyFrom(const CMsgZoomToFocusedElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgZoomToFocusedElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgZoomToFocusedElement::IsInitialized() const {
  return true;
}

void CMsgZoomToFocusedElement::Swap(CMsgZoomToFocusedElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgZoomToFocusedElement::InternalSwap(CMsgZoomToFocusedElement* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgZoomToFocusedElement::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCloseFullScreenFlashIfOpen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCloseFullScreenFlashIfOpen::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCloseFullScreenFlashIfOpen::CMsgCloseFullScreenFlashIfOpen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgCloseFullScreenFlashIfOpen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCloseFullScreenFlashIfOpen)
}
CMsgCloseFullScreenFlashIfOpen::CMsgCloseFullScreenFlashIfOpen(const CMsgCloseFullScreenFlashIfOpen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgCloseFullScreenFlashIfOpen)
}

void CMsgCloseFullScreenFlashIfOpen::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgCloseFullScreenFlashIfOpen::~CMsgCloseFullScreenFlashIfOpen() {
  // @@protoc_insertion_point(destructor:CMsgCloseFullScreenFlashIfOpen)
  SharedDtor();
}

void CMsgCloseFullScreenFlashIfOpen::SharedDtor() {
}

void CMsgCloseFullScreenFlashIfOpen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCloseFullScreenFlashIfOpen::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCloseFullScreenFlashIfOpen& CMsgCloseFullScreenFlashIfOpen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgCloseFullScreenFlashIfOpen.base);
  return *internal_default_instance();
}


void CMsgCloseFullScreenFlashIfOpen::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCloseFullScreenFlashIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCloseFullScreenFlashIfOpen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCloseFullScreenFlashIfOpen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCloseFullScreenFlashIfOpen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCloseFullScreenFlashIfOpen)
  return false;
#undef DO_
}

void CMsgCloseFullScreenFlashIfOpen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCloseFullScreenFlashIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCloseFullScreenFlashIfOpen)
}

::google::protobuf::uint8* CMsgCloseFullScreenFlashIfOpen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCloseFullScreenFlashIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCloseFullScreenFlashIfOpen)
  return target;
}

size_t CMsgCloseFullScreenFlashIfOpen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCloseFullScreenFlashIfOpen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCloseFullScreenFlashIfOpen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCloseFullScreenFlashIfOpen)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCloseFullScreenFlashIfOpen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCloseFullScreenFlashIfOpen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCloseFullScreenFlashIfOpen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCloseFullScreenFlashIfOpen)
    MergeFrom(*source);
  }
}

void CMsgCloseFullScreenFlashIfOpen::MergeFrom(const CMsgCloseFullScreenFlashIfOpen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCloseFullScreenFlashIfOpen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgCloseFullScreenFlashIfOpen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCloseFullScreenFlashIfOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCloseFullScreenFlashIfOpen::CopyFrom(const CMsgCloseFullScreenFlashIfOpen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCloseFullScreenFlashIfOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCloseFullScreenFlashIfOpen::IsInitialized() const {
  return true;
}

void CMsgCloseFullScreenFlashIfOpen::Swap(CMsgCloseFullScreenFlashIfOpen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCloseFullScreenFlashIfOpen::InternalSwap(CMsgCloseFullScreenFlashIfOpen* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCloseFullScreenFlashIfOpen::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPauseFullScreenFlashMovieIfOpen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPauseFullScreenFlashMovieIfOpen::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPauseFullScreenFlashMovieIfOpen::CMsgPauseFullScreenFlashMovieIfOpen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgPauseFullScreenFlashMovieIfOpen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPauseFullScreenFlashMovieIfOpen)
}
CMsgPauseFullScreenFlashMovieIfOpen::CMsgPauseFullScreenFlashMovieIfOpen(const CMsgPauseFullScreenFlashMovieIfOpen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgPauseFullScreenFlashMovieIfOpen)
}

void CMsgPauseFullScreenFlashMovieIfOpen::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgPauseFullScreenFlashMovieIfOpen::~CMsgPauseFullScreenFlashMovieIfOpen() {
  // @@protoc_insertion_point(destructor:CMsgPauseFullScreenFlashMovieIfOpen)
  SharedDtor();
}

void CMsgPauseFullScreenFlashMovieIfOpen::SharedDtor() {
}

void CMsgPauseFullScreenFlashMovieIfOpen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPauseFullScreenFlashMovieIfOpen::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPauseFullScreenFlashMovieIfOpen& CMsgPauseFullScreenFlashMovieIfOpen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgPauseFullScreenFlashMovieIfOpen.base);
  return *internal_default_instance();
}


void CMsgPauseFullScreenFlashMovieIfOpen::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPauseFullScreenFlashMovieIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPauseFullScreenFlashMovieIfOpen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPauseFullScreenFlashMovieIfOpen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPauseFullScreenFlashMovieIfOpen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPauseFullScreenFlashMovieIfOpen)
  return false;
#undef DO_
}

void CMsgPauseFullScreenFlashMovieIfOpen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPauseFullScreenFlashMovieIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPauseFullScreenFlashMovieIfOpen)
}

::google::protobuf::uint8* CMsgPauseFullScreenFlashMovieIfOpen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPauseFullScreenFlashMovieIfOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPauseFullScreenFlashMovieIfOpen)
  return target;
}

size_t CMsgPauseFullScreenFlashMovieIfOpen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPauseFullScreenFlashMovieIfOpen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPauseFullScreenFlashMovieIfOpen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPauseFullScreenFlashMovieIfOpen)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPauseFullScreenFlashMovieIfOpen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPauseFullScreenFlashMovieIfOpen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPauseFullScreenFlashMovieIfOpen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPauseFullScreenFlashMovieIfOpen)
    MergeFrom(*source);
  }
}

void CMsgPauseFullScreenFlashMovieIfOpen::MergeFrom(const CMsgPauseFullScreenFlashMovieIfOpen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPauseFullScreenFlashMovieIfOpen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgPauseFullScreenFlashMovieIfOpen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPauseFullScreenFlashMovieIfOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPauseFullScreenFlashMovieIfOpen::CopyFrom(const CMsgPauseFullScreenFlashMovieIfOpen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPauseFullScreenFlashMovieIfOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPauseFullScreenFlashMovieIfOpen::IsInitialized() const {
  return true;
}

void CMsgPauseFullScreenFlashMovieIfOpen::Swap(CMsgPauseFullScreenFlashMovieIfOpen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPauseFullScreenFlashMovieIfOpen::InternalSwap(CMsgPauseFullScreenFlashMovieIfOpen* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPauseFullScreenFlashMovieIfOpen::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFocusedNodeText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFocusedNodeText::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFocusedNodeText::CMsgFocusedNodeText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFocusedNodeText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFocusedNodeText)
}
CMsgFocusedNodeText::CMsgFocusedNodeText(const CMsgFocusedNodeText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFocusedNodeText)
}

void CMsgFocusedNodeText::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgFocusedNodeText::~CMsgFocusedNodeText() {
  // @@protoc_insertion_point(destructor:CMsgFocusedNodeText)
  SharedDtor();
}

void CMsgFocusedNodeText::SharedDtor() {
}

void CMsgFocusedNodeText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFocusedNodeText::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFocusedNodeText& CMsgFocusedNodeText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFocusedNodeText.base);
  return *internal_default_instance();
}


void CMsgFocusedNodeText::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFocusedNodeText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFocusedNodeText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFocusedNodeText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFocusedNodeText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFocusedNodeText)
  return false;
#undef DO_
}

void CMsgFocusedNodeText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFocusedNodeText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFocusedNodeText)
}

::google::protobuf::uint8* CMsgFocusedNodeText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFocusedNodeText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFocusedNodeText)
  return target;
}

size_t CMsgFocusedNodeText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFocusedNodeText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFocusedNodeText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFocusedNodeText)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFocusedNodeText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFocusedNodeText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFocusedNodeText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFocusedNodeText)
    MergeFrom(*source);
  }
}

void CMsgFocusedNodeText::MergeFrom(const CMsgFocusedNodeText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFocusedNodeText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgFocusedNodeText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFocusedNodeText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFocusedNodeText::CopyFrom(const CMsgFocusedNodeText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFocusedNodeText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFocusedNodeText::IsInitialized() const {
  return true;
}

void CMsgFocusedNodeText::Swap(CMsgFocusedNodeText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFocusedNodeText::InternalSwap(CMsgFocusedNodeText* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFocusedNodeText::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgFocusedNodeTextResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFocusedNodeTextResponse::kBrowserHandleFieldNumber;
const int CMsgFocusedNodeTextResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFocusedNodeTextResponse::CMsgFocusedNodeTextResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgFocusedNodeTextResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgFocusedNodeTextResponse)
}
CMsgFocusedNodeTextResponse::CMsgFocusedNodeTextResponse(const CMsgFocusedNodeTextResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgFocusedNodeTextResponse)
}

void CMsgFocusedNodeTextResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgFocusedNodeTextResponse::~CMsgFocusedNodeTextResponse() {
  // @@protoc_insertion_point(destructor:CMsgFocusedNodeTextResponse)
  SharedDtor();
}

void CMsgFocusedNodeTextResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgFocusedNodeTextResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgFocusedNodeTextResponse::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFocusedNodeTextResponse& CMsgFocusedNodeTextResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgFocusedNodeTextResponse.base);
  return *internal_default_instance();
}


void CMsgFocusedNodeTextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFocusedNodeTextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFocusedNodeTextResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgFocusedNodeTextResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgFocusedNodeTextResponse.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgFocusedNodeTextResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgFocusedNodeTextResponse)
  return false;
#undef DO_
}

void CMsgFocusedNodeTextResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgFocusedNodeTextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFocusedNodeTextResponse.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgFocusedNodeTextResponse)
}

::google::protobuf::uint8* CMsgFocusedNodeTextResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFocusedNodeTextResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgFocusedNodeTextResponse.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFocusedNodeTextResponse)
  return target;
}

size_t CMsgFocusedNodeTextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFocusedNodeTextResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFocusedNodeTextResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFocusedNodeTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFocusedNodeTextResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFocusedNodeTextResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFocusedNodeTextResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFocusedNodeTextResponse)
    MergeFrom(*source);
  }
}

void CMsgFocusedNodeTextResponse::MergeFrom(const CMsgFocusedNodeTextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFocusedNodeTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFocusedNodeTextResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFocusedNodeTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFocusedNodeTextResponse::CopyFrom(const CMsgFocusedNodeTextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFocusedNodeTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFocusedNodeTextResponse::IsInitialized() const {
  return true;
}

void CMsgFocusedNodeTextResponse::Swap(CMsgFocusedNodeTextResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFocusedNodeTextResponse::InternalSwap(CMsgFocusedNodeTextResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgFocusedNodeTextResponse::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBuildID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBuildID::kBuildIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBuildID::CMsgBuildID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBuildID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBuildID)
}
CMsgBuildID::CMsgBuildID(const CMsgBuildID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_id_ = from.build_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgBuildID)
}

void CMsgBuildID::SharedCtor() {
  build_id_ = GOOGLE_ULONGLONG(0);
}

CMsgBuildID::~CMsgBuildID() {
  // @@protoc_insertion_point(destructor:CMsgBuildID)
  SharedDtor();
}

void CMsgBuildID::SharedDtor() {
}

void CMsgBuildID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBuildID::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBuildID& CMsgBuildID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBuildID.base);
  return *internal_default_instance();
}


void CMsgBuildID::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBuildID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  build_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBuildID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBuildID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 build_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_build_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &build_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBuildID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBuildID)
  return false;
#undef DO_
}

void CMsgBuildID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBuildID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 build_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->build_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBuildID)
}

::google::protobuf::uint8* CMsgBuildID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBuildID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 build_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->build_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBuildID)
  return target;
}

size_t CMsgBuildID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBuildID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 build_id = 1;
  if (has_build_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->build_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBuildID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBuildID)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBuildID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBuildID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBuildID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBuildID)
    MergeFrom(*source);
  }
}

void CMsgBuildID::MergeFrom(const CMsgBuildID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBuildID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_build_id()) {
    set_build_id(from.build_id());
  }
}

void CMsgBuildID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBuildID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuildID::CopyFrom(const CMsgBuildID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBuildID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuildID::IsInitialized() const {
  return true;
}

void CMsgBuildID::Swap(CMsgBuildID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBuildID::InternalSwap(CMsgBuildID* other) {
  using std::swap;
  swap(build_id_, other->build_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBuildID::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgOpenDevTools::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgOpenDevTools::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgOpenDevTools::CMsgOpenDevTools()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgOpenDevTools.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgOpenDevTools)
}
CMsgOpenDevTools::CMsgOpenDevTools(const CMsgOpenDevTools& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgOpenDevTools)
}

void CMsgOpenDevTools::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgOpenDevTools::~CMsgOpenDevTools() {
  // @@protoc_insertion_point(destructor:CMsgOpenDevTools)
  SharedDtor();
}

void CMsgOpenDevTools::SharedDtor() {
}

void CMsgOpenDevTools::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgOpenDevTools::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgOpenDevTools& CMsgOpenDevTools::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgOpenDevTools.base);
  return *internal_default_instance();
}


void CMsgOpenDevTools::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgOpenDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgOpenDevTools::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgOpenDevTools)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgOpenDevTools)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgOpenDevTools)
  return false;
#undef DO_
}

void CMsgOpenDevTools::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgOpenDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgOpenDevTools)
}

::google::protobuf::uint8* CMsgOpenDevTools::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgOpenDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgOpenDevTools)
  return target;
}

size_t CMsgOpenDevTools::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgOpenDevTools)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgOpenDevTools::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgOpenDevTools)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgOpenDevTools* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgOpenDevTools>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgOpenDevTools)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgOpenDevTools)
    MergeFrom(*source);
  }
}

void CMsgOpenDevTools::MergeFrom(const CMsgOpenDevTools& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgOpenDevTools)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgOpenDevTools::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgOpenDevTools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenDevTools::CopyFrom(const CMsgOpenDevTools& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgOpenDevTools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenDevTools::IsInitialized() const {
  return true;
}

void CMsgOpenDevTools::Swap(CMsgOpenDevTools* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgOpenDevTools::InternalSwap(CMsgOpenDevTools* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgOpenDevTools::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCloseDevTools::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCloseDevTools::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCloseDevTools::CMsgCloseDevTools()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgCloseDevTools.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCloseDevTools)
}
CMsgCloseDevTools::CMsgCloseDevTools(const CMsgCloseDevTools& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgCloseDevTools)
}

void CMsgCloseDevTools::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgCloseDevTools::~CMsgCloseDevTools() {
  // @@protoc_insertion_point(destructor:CMsgCloseDevTools)
  SharedDtor();
}

void CMsgCloseDevTools::SharedDtor() {
}

void CMsgCloseDevTools::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCloseDevTools::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCloseDevTools& CMsgCloseDevTools::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgCloseDevTools.base);
  return *internal_default_instance();
}


void CMsgCloseDevTools::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCloseDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCloseDevTools::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCloseDevTools)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCloseDevTools)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCloseDevTools)
  return false;
#undef DO_
}

void CMsgCloseDevTools::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCloseDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCloseDevTools)
}

::google::protobuf::uint8* CMsgCloseDevTools::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCloseDevTools)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCloseDevTools)
  return target;
}

size_t CMsgCloseDevTools::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCloseDevTools)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCloseDevTools::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCloseDevTools)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCloseDevTools* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCloseDevTools>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCloseDevTools)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCloseDevTools)
    MergeFrom(*source);
  }
}

void CMsgCloseDevTools::MergeFrom(const CMsgCloseDevTools& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCloseDevTools)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgCloseDevTools::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCloseDevTools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCloseDevTools::CopyFrom(const CMsgCloseDevTools& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCloseDevTools)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCloseDevTools::IsInitialized() const {
  return true;
}

void CMsgCloseDevTools::Swap(CMsgCloseDevTools* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCloseDevTools::InternalSwap(CMsgCloseDevTools* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCloseDevTools::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgUnlockH264::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUnlockH264::kBrowserHandleFieldNumber;
const int CMsgUnlockH264::kUnlockCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUnlockH264::CMsgUnlockH264()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgUnlockH264.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUnlockH264)
}
CMsgUnlockH264::CMsgUnlockH264(const CMsgUnlockH264& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unlock_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unlock_code()) {
    unlock_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_code_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgUnlockH264)
}

void CMsgUnlockH264::SharedCtor() {
  unlock_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgUnlockH264::~CMsgUnlockH264() {
  // @@protoc_insertion_point(destructor:CMsgUnlockH264)
  SharedDtor();
}

void CMsgUnlockH264::SharedDtor() {
  unlock_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgUnlockH264::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgUnlockH264::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUnlockH264& CMsgUnlockH264::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgUnlockH264.base);
  return *internal_default_instance();
}


void CMsgUnlockH264::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgUnlockH264)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    unlock_code_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUnlockH264::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUnlockH264)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string unlock_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlock_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unlock_code().data(), static_cast<int>(this->unlock_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgUnlockH264.unlock_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUnlockH264)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUnlockH264)
  return false;
#undef DO_
}

void CMsgUnlockH264::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUnlockH264)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string unlock_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_code().data(), static_cast<int>(this->unlock_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUnlockH264.unlock_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unlock_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUnlockH264)
}

::google::protobuf::uint8* CMsgUnlockH264::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUnlockH264)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string unlock_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_code().data(), static_cast<int>(this->unlock_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUnlockH264.unlock_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unlock_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUnlockH264)
  return target;
}

size_t CMsgUnlockH264::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgUnlockH264)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string unlock_code = 2;
    if (has_unlock_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unlock_code());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgUnlockH264::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgUnlockH264)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUnlockH264* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUnlockH264>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgUnlockH264)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgUnlockH264)
    MergeFrom(*source);
  }
}

void CMsgUnlockH264::MergeFrom(const CMsgUnlockH264& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgUnlockH264)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unlock_code();
      unlock_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUnlockH264::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgUnlockH264)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUnlockH264::CopyFrom(const CMsgUnlockH264& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgUnlockH264)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUnlockH264::IsInitialized() const {
  return true;
}

void CMsgUnlockH264::Swap(CMsgUnlockH264* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUnlockH264::InternalSwap(CMsgUnlockH264* other) {
  using std::swap;
  unlock_code_.Swap(&other->unlock_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgUnlockH264::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgScreenInformationChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgScreenInformationChanged::kBrowserHandleFieldNumber;
const int CMsgScreenInformationChanged::kOverrideWidthFieldNumber;
const int CMsgScreenInformationChanged::kOverrideHeightFieldNumber;
const int CMsgScreenInformationChanged::kMonitorLeftFieldNumber;
const int CMsgScreenInformationChanged::kMonitorTopFieldNumber;
const int CMsgScreenInformationChanged::kMonitorRightFieldNumber;
const int CMsgScreenInformationChanged::kMonitorBottomFieldNumber;
const int CMsgScreenInformationChanged::kUsableLeftFieldNumber;
const int CMsgScreenInformationChanged::kUsableTopFieldNumber;
const int CMsgScreenInformationChanged::kUsableRightFieldNumber;
const int CMsgScreenInformationChanged::kUsableBottomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgScreenInformationChanged::CMsgScreenInformationChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgScreenInformationChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgScreenInformationChanged)
}
CMsgScreenInformationChanged::CMsgScreenInformationChanged(const CMsgScreenInformationChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&usable_bottom_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(usable_bottom_));
  // @@protoc_insertion_point(copy_constructor:CMsgScreenInformationChanged)
}

void CMsgScreenInformationChanged::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usable_bottom_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(usable_bottom_));
}

CMsgScreenInformationChanged::~CMsgScreenInformationChanged() {
  // @@protoc_insertion_point(destructor:CMsgScreenInformationChanged)
  SharedDtor();
}

void CMsgScreenInformationChanged::SharedDtor() {
}

void CMsgScreenInformationChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgScreenInformationChanged::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgScreenInformationChanged& CMsgScreenInformationChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgScreenInformationChanged.base);
  return *internal_default_instance();
}


void CMsgScreenInformationChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgScreenInformationChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usable_left_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(usable_left_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&usable_top_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usable_bottom_) -
        reinterpret_cast<char*>(&usable_top_)) + sizeof(usable_bottom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgScreenInformationChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgScreenInformationChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 override_width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_override_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &override_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 override_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_override_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &override_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 monitor_left = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_monitor_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monitor_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 monitor_top = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_monitor_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monitor_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 monitor_right = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_monitor_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monitor_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 monitor_bottom = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_monitor_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monitor_bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 usable_left = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_usable_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usable_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 usable_top = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_usable_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usable_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 usable_right = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_usable_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usable_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 usable_bottom = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_usable_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usable_bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgScreenInformationChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgScreenInformationChanged)
  return false;
#undef DO_
}

void CMsgScreenInformationChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgScreenInformationChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 override_width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->override_width(), output);
  }

  // optional uint32 override_height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->override_height(), output);
  }

  // optional uint32 monitor_left = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->monitor_left(), output);
  }

  // optional uint32 monitor_top = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->monitor_top(), output);
  }

  // optional uint32 monitor_right = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->monitor_right(), output);
  }

  // optional uint32 monitor_bottom = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->monitor_bottom(), output);
  }

  // optional uint32 usable_left = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->usable_left(), output);
  }

  // optional uint32 usable_top = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->usable_top(), output);
  }

  // optional uint32 usable_right = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->usable_right(), output);
  }

  // optional uint32 usable_bottom = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->usable_bottom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgScreenInformationChanged)
}

::google::protobuf::uint8* CMsgScreenInformationChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgScreenInformationChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 override_width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->override_width(), target);
  }

  // optional uint32 override_height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->override_height(), target);
  }

  // optional uint32 monitor_left = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->monitor_left(), target);
  }

  // optional uint32 monitor_top = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->monitor_top(), target);
  }

  // optional uint32 monitor_right = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->monitor_right(), target);
  }

  // optional uint32 monitor_bottom = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->monitor_bottom(), target);
  }

  // optional uint32 usable_left = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->usable_left(), target);
  }

  // optional uint32 usable_top = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->usable_top(), target);
  }

  // optional uint32 usable_right = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->usable_right(), target);
  }

  // optional uint32 usable_bottom = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->usable_bottom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgScreenInformationChanged)
  return target;
}

size_t CMsgScreenInformationChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgScreenInformationChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 override_width = 2;
    if (has_override_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->override_width());
    }

    // optional uint32 override_height = 3;
    if (has_override_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->override_height());
    }

    // optional uint32 monitor_left = 4;
    if (has_monitor_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monitor_left());
    }

    // optional uint32 monitor_top = 5;
    if (has_monitor_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monitor_top());
    }

    // optional uint32 monitor_right = 6;
    if (has_monitor_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monitor_right());
    }

    // optional uint32 monitor_bottom = 7;
    if (has_monitor_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monitor_bottom());
    }

    // optional uint32 usable_left = 8;
    if (has_usable_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usable_left());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 usable_top = 9;
    if (has_usable_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usable_top());
    }

    // optional uint32 usable_right = 10;
    if (has_usable_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usable_right());
    }

    // optional uint32 usable_bottom = 11;
    if (has_usable_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usable_bottom());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgScreenInformationChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgScreenInformationChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgScreenInformationChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgScreenInformationChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgScreenInformationChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgScreenInformationChanged)
    MergeFrom(*source);
  }
}

void CMsgScreenInformationChanged::MergeFrom(const CMsgScreenInformationChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgScreenInformationChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      override_width_ = from.override_width_;
    }
    if (cached_has_bits & 0x00000004u) {
      override_height_ = from.override_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      monitor_left_ = from.monitor_left_;
    }
    if (cached_has_bits & 0x00000010u) {
      monitor_top_ = from.monitor_top_;
    }
    if (cached_has_bits & 0x00000020u) {
      monitor_right_ = from.monitor_right_;
    }
    if (cached_has_bits & 0x00000040u) {
      monitor_bottom_ = from.monitor_bottom_;
    }
    if (cached_has_bits & 0x00000080u) {
      usable_left_ = from.usable_left_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      usable_top_ = from.usable_top_;
    }
    if (cached_has_bits & 0x00000200u) {
      usable_right_ = from.usable_right_;
    }
    if (cached_has_bits & 0x00000400u) {
      usable_bottom_ = from.usable_bottom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgScreenInformationChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgScreenInformationChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgScreenInformationChanged::CopyFrom(const CMsgScreenInformationChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgScreenInformationChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgScreenInformationChanged::IsInitialized() const {
  return true;
}

void CMsgScreenInformationChanged::Swap(CMsgScreenInformationChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgScreenInformationChanged::InternalSwap(CMsgScreenInformationChanged* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(override_width_, other->override_width_);
  swap(override_height_, other->override_height_);
  swap(monitor_left_, other->monitor_left_);
  swap(monitor_top_, other->monitor_top_);
  swap(monitor_right_, other->monitor_right_);
  swap(monitor_bottom_, other->monitor_bottom_);
  swap(usable_left_, other->usable_left_);
  swap(usable_top_, other->usable_top_);
  swap(usable_right_, other->usable_right_);
  swap(usable_bottom_, other->usable_bottom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgScreenInformationChanged::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearAllCookies::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearAllCookies::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearAllCookies::CMsgClearAllCookies()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgClearAllCookies.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClearAllCookies)
}
CMsgClearAllCookies::CMsgClearAllCookies(const CMsgClearAllCookies& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgClearAllCookies)
}

void CMsgClearAllCookies::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgClearAllCookies::~CMsgClearAllCookies() {
  // @@protoc_insertion_point(destructor:CMsgClearAllCookies)
  SharedDtor();
}

void CMsgClearAllCookies::SharedDtor() {
}

void CMsgClearAllCookies::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgClearAllCookies::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClearAllCookies& CMsgClearAllCookies::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgClearAllCookies.base);
  return *internal_default_instance();
}


void CMsgClearAllCookies::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClearAllCookies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClearAllCookies::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClearAllCookies)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClearAllCookies)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClearAllCookies)
  return false;
#undef DO_
}

void CMsgClearAllCookies::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClearAllCookies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClearAllCookies)
}

::google::protobuf::uint8* CMsgClearAllCookies::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClearAllCookies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClearAllCookies)
  return target;
}

size_t CMsgClearAllCookies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClearAllCookies)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearAllCookies::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClearAllCookies)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearAllCookies* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClearAllCookies>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClearAllCookies)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClearAllCookies)
    MergeFrom(*source);
  }
}

void CMsgClearAllCookies::MergeFrom(const CMsgClearAllCookies& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClearAllCookies)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgClearAllCookies::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClearAllCookies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearAllCookies::CopyFrom(const CMsgClearAllCookies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClearAllCookies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearAllCookies::IsInitialized() const {
  return true;
}

void CMsgClearAllCookies::Swap(CMsgClearAllCookies* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearAllCookies::InternalSwap(CMsgClearAllCookies* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgClearAllCookies::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgScreenDPI::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgScreenDPI::kBrowserHandleFieldNumber;
const int CMsgScreenDPI::kDpiScalingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgScreenDPI::CMsgScreenDPI()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgScreenDPI.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgScreenDPI)
}
CMsgScreenDPI::CMsgScreenDPI(const CMsgScreenDPI& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&dpi_scaling_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(dpi_scaling_));
  // @@protoc_insertion_point(copy_constructor:CMsgScreenDPI)
}

void CMsgScreenDPI::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dpi_scaling_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(dpi_scaling_));
}

CMsgScreenDPI::~CMsgScreenDPI() {
  // @@protoc_insertion_point(destructor:CMsgScreenDPI)
  SharedDtor();
}

void CMsgScreenDPI::SharedDtor() {
}

void CMsgScreenDPI::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgScreenDPI::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgScreenDPI& CMsgScreenDPI::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgScreenDPI.base);
  return *internal_default_instance();
}


void CMsgScreenDPI::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgScreenDPI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dpi_scaling_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(dpi_scaling_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgScreenDPI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgScreenDPI)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float dpi_scaling = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_dpi_scaling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dpi_scaling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgScreenDPI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgScreenDPI)
  return false;
#undef DO_
}

void CMsgScreenDPI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgScreenDPI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional float dpi_scaling = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->dpi_scaling(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgScreenDPI)
}

::google::protobuf::uint8* CMsgScreenDPI::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgScreenDPI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional float dpi_scaling = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->dpi_scaling(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgScreenDPI)
  return target;
}

size_t CMsgScreenDPI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgScreenDPI)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional float dpi_scaling = 2;
    if (has_dpi_scaling()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgScreenDPI::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgScreenDPI)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgScreenDPI* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgScreenDPI>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgScreenDPI)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgScreenDPI)
    MergeFrom(*source);
  }
}

void CMsgScreenDPI::MergeFrom(const CMsgScreenDPI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgScreenDPI)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      dpi_scaling_ = from.dpi_scaling_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgScreenDPI::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgScreenDPI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgScreenDPI::CopyFrom(const CMsgScreenDPI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgScreenDPI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgScreenDPI::IsInitialized() const {
  return true;
}

void CMsgScreenDPI::Swap(CMsgScreenDPI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgScreenDPI::InternalSwap(CMsgScreenDPI* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(dpi_scaling_, other->dpi_scaling_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgScreenDPI::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAuthedSteamDomains::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAuthedSteamDomains::kDomainsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAuthedSteamDomains::CMsgAuthedSteamDomains()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgAuthedSteamDomains.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAuthedSteamDomains)
}
CMsgAuthedSteamDomains::CMsgAuthedSteamDomains(const CMsgAuthedSteamDomains& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      domains_(from.domains_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAuthedSteamDomains)
}

void CMsgAuthedSteamDomains::SharedCtor() {
}

CMsgAuthedSteamDomains::~CMsgAuthedSteamDomains() {
  // @@protoc_insertion_point(destructor:CMsgAuthedSteamDomains)
  SharedDtor();
}

void CMsgAuthedSteamDomains::SharedDtor() {
}

void CMsgAuthedSteamDomains::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgAuthedSteamDomains::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAuthedSteamDomains& CMsgAuthedSteamDomains::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgAuthedSteamDomains.base);
  return *internal_default_instance();
}


void CMsgAuthedSteamDomains::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAuthedSteamDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domains_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAuthedSteamDomains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAuthedSteamDomains)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string domains = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_domains()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domains(this->domains_size() - 1).data(),
            static_cast<int>(this->domains(this->domains_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAuthedSteamDomains.domains");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAuthedSteamDomains)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAuthedSteamDomains)
  return false;
#undef DO_
}

void CMsgAuthedSteamDomains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAuthedSteamDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string domains = 1;
  for (int i = 0, n = this->domains_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domains(i).data(), static_cast<int>(this->domains(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAuthedSteamDomains.domains");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->domains(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAuthedSteamDomains)
}

::google::protobuf::uint8* CMsgAuthedSteamDomains::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAuthedSteamDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string domains = 1;
  for (int i = 0, n = this->domains_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domains(i).data(), static_cast<int>(this->domains(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAuthedSteamDomains.domains");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->domains(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAuthedSteamDomains)
  return target;
}

size_t CMsgAuthedSteamDomains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAuthedSteamDomains)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string domains = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->domains_size());
  for (int i = 0, n = this->domains_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->domains(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAuthedSteamDomains::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAuthedSteamDomains)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAuthedSteamDomains* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAuthedSteamDomains>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAuthedSteamDomains)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAuthedSteamDomains)
    MergeFrom(*source);
  }
}

void CMsgAuthedSteamDomains::MergeFrom(const CMsgAuthedSteamDomains& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAuthedSteamDomains)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  domains_.MergeFrom(from.domains_);
}

void CMsgAuthedSteamDomains::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAuthedSteamDomains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAuthedSteamDomains::CopyFrom(const CMsgAuthedSteamDomains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAuthedSteamDomains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAuthedSteamDomains::IsInitialized() const {
  return true;
}

void CMsgAuthedSteamDomains::Swap(CMsgAuthedSteamDomains* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAuthedSteamDomains::InternalSwap(CMsgAuthedSteamDomains* other) {
  using std::swap;
  domains_.InternalSwap(CastToBase(&other->domains_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgAuthedSteamDomains::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSteamAuthNeeded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSteamAuthNeeded::kFillerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSteamAuthNeeded::CMsgSteamAuthNeeded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSteamAuthNeeded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSteamAuthNeeded)
}
CMsgSteamAuthNeeded::CMsgSteamAuthNeeded(const CMsgSteamAuthNeeded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filler_ = from.filler_;
  // @@protoc_insertion_point(copy_constructor:CMsgSteamAuthNeeded)
}

void CMsgSteamAuthNeeded::SharedCtor() {
  filler_ = false;
}

CMsgSteamAuthNeeded::~CMsgSteamAuthNeeded() {
  // @@protoc_insertion_point(destructor:CMsgSteamAuthNeeded)
  SharedDtor();
}

void CMsgSteamAuthNeeded::SharedDtor() {
}

void CMsgSteamAuthNeeded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSteamAuthNeeded::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSteamAuthNeeded& CMsgSteamAuthNeeded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSteamAuthNeeded.base);
  return *internal_default_instance();
}


void CMsgSteamAuthNeeded::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamAuthNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filler_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSteamAuthNeeded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSteamAuthNeeded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool filler = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_filler();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSteamAuthNeeded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSteamAuthNeeded)
  return false;
#undef DO_
}

void CMsgSteamAuthNeeded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSteamAuthNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool filler = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->filler(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSteamAuthNeeded)
}

::google::protobuf::uint8* CMsgSteamAuthNeeded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamAuthNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool filler = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->filler(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamAuthNeeded)
  return target;
}

size_t CMsgSteamAuthNeeded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSteamAuthNeeded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool filler = 1;
  if (has_filler()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSteamAuthNeeded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSteamAuthNeeded)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSteamAuthNeeded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSteamAuthNeeded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSteamAuthNeeded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSteamAuthNeeded)
    MergeFrom(*source);
  }
}

void CMsgSteamAuthNeeded::MergeFrom(const CMsgSteamAuthNeeded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamAuthNeeded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filler()) {
    set_filler(from.filler());
  }
}

void CMsgSteamAuthNeeded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSteamAuthNeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSteamAuthNeeded::CopyFrom(const CMsgSteamAuthNeeded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamAuthNeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSteamAuthNeeded::IsInitialized() const {
  return true;
}

void CMsgSteamAuthNeeded::Swap(CMsgSteamAuthNeeded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSteamAuthNeeded::InternalSwap(CMsgSteamAuthNeeded* other) {
  using std::swap;
  swap(filler_, other->filler_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSteamAuthNeeded::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSteamAuthCookiesSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSteamAuthCookiesSet::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSteamAuthCookiesSet::CMsgSteamAuthCookiesSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSteamAuthCookiesSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSteamAuthCookiesSet)
}
CMsgSteamAuthCookiesSet::CMsgSteamAuthCookiesSet(const CMsgSteamAuthCookiesSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CMsgSteamAuthCookiesSet)
}

void CMsgSteamAuthCookiesSet::SharedCtor() {
  success_ = false;
}

CMsgSteamAuthCookiesSet::~CMsgSteamAuthCookiesSet() {
  // @@protoc_insertion_point(destructor:CMsgSteamAuthCookiesSet)
  SharedDtor();
}

void CMsgSteamAuthCookiesSet::SharedDtor() {
}

void CMsgSteamAuthCookiesSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSteamAuthCookiesSet::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSteamAuthCookiesSet& CMsgSteamAuthCookiesSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSteamAuthCookiesSet.base);
  return *internal_default_instance();
}


void CMsgSteamAuthCookiesSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamAuthCookiesSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSteamAuthCookiesSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSteamAuthCookiesSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSteamAuthCookiesSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSteamAuthCookiesSet)
  return false;
#undef DO_
}

void CMsgSteamAuthCookiesSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSteamAuthCookiesSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSteamAuthCookiesSet)
}

::google::protobuf::uint8* CMsgSteamAuthCookiesSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamAuthCookiesSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamAuthCookiesSet)
  return target;
}

size_t CMsgSteamAuthCookiesSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSteamAuthCookiesSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSteamAuthCookiesSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSteamAuthCookiesSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSteamAuthCookiesSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSteamAuthCookiesSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSteamAuthCookiesSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSteamAuthCookiesSet)
    MergeFrom(*source);
  }
}

void CMsgSteamAuthCookiesSet::MergeFrom(const CMsgSteamAuthCookiesSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamAuthCookiesSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgSteamAuthCookiesSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSteamAuthCookiesSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSteamAuthCookiesSet::CopyFrom(const CMsgSteamAuthCookiesSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamAuthCookiesSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSteamAuthCookiesSet::IsInitialized() const {
  return true;
}

void CMsgSteamAuthCookiesSet::Swap(CMsgSteamAuthCookiesSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSteamAuthCookiesSet::InternalSwap(CMsgSteamAuthCookiesSet* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSteamAuthCookiesSet::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSRegisterMethod::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSRegisterMethod::kBrowserHandleFieldNumber;
const int CMsgJSRegisterMethod::kNameFieldNumber;
const int CMsgJSRegisterMethod::kMethodTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSRegisterMethod::CMsgJSRegisterMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSRegisterMethod.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSRegisterMethod)
}
CMsgJSRegisterMethod::CMsgJSRegisterMethod(const CMsgJSRegisterMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&method_type_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(method_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgJSRegisterMethod)
}

void CMsgJSRegisterMethod::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&method_type_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(method_type_));
}

CMsgJSRegisterMethod::~CMsgJSRegisterMethod() {
  // @@protoc_insertion_point(destructor:CMsgJSRegisterMethod)
  SharedDtor();
}

void CMsgJSRegisterMethod::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSRegisterMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSRegisterMethod::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSRegisterMethod& CMsgJSRegisterMethod::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSRegisterMethod.base);
  return *internal_default_instance();
}


void CMsgJSRegisterMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSRegisterMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&method_type_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(method_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSRegisterMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSRegisterMethod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSRegisterMethod.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EJSRegisterMethodType_IsValid(value)) {
            set_method_type(static_cast< ::EJSRegisterMethodType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSRegisterMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSRegisterMethod)
  return false;
#undef DO_
}

void CMsgJSRegisterMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSRegisterMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSRegisterMethod.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->method_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSRegisterMethod)
}

::google::protobuf::uint8* CMsgJSRegisterMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSRegisterMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSRegisterMethod.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->method_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSRegisterMethod)
  return target;
}

size_t CMsgJSRegisterMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSRegisterMethod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional .EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
    if (has_method_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSRegisterMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSRegisterMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSRegisterMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSRegisterMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSRegisterMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSRegisterMethod)
    MergeFrom(*source);
  }
}

void CMsgJSRegisterMethod::MergeFrom(const CMsgJSRegisterMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSRegisterMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      method_type_ = from.method_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSRegisterMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSRegisterMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSRegisterMethod::CopyFrom(const CMsgJSRegisterMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSRegisterMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSRegisterMethod::IsInitialized() const {
  return true;
}

void CMsgJSRegisterMethod::Swap(CMsgJSRegisterMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSRegisterMethod::InternalSwap(CMsgJSRegisterMethod* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(method_type_, other->method_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSRegisterMethod::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CJSMethodArgument::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CJSMethodArgument::kJsonDataFieldNumber;
const int CJSMethodArgument::kFunctionHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CJSMethodArgument::CJSMethodArgument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CJSMethodArgument.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CJSMethodArgument)
}
CJSMethodArgument::CJSMethodArgument(const CJSMethodArgument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_json_data()) {
    json_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_data_);
  }
  function_handle_ = from.function_handle_;
  // @@protoc_insertion_point(copy_constructor:CJSMethodArgument)
}

void CJSMethodArgument::SharedCtor() {
  json_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_handle_ = GOOGLE_ULONGLONG(0);
}

CJSMethodArgument::~CJSMethodArgument() {
  // @@protoc_insertion_point(destructor:CJSMethodArgument)
  SharedDtor();
}

void CJSMethodArgument::SharedDtor() {
  json_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CJSMethodArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CJSMethodArgument::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CJSMethodArgument& CJSMethodArgument::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CJSMethodArgument.base);
  return *internal_default_instance();
}


void CJSMethodArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:CJSMethodArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    json_data_.ClearNonDefaultToEmptyNoArena();
  }
  function_handle_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CJSMethodArgument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CJSMethodArgument)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string json_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->json_data().data(), static_cast<int>(this->json_data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CJSMethodArgument.json_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 function_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_function_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &function_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CJSMethodArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CJSMethodArgument)
  return false;
#undef DO_
}

void CJSMethodArgument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CJSMethodArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string json_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->json_data().data(), static_cast<int>(this->json_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CJSMethodArgument.json_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json_data(), output);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->function_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CJSMethodArgument)
}

::google::protobuf::uint8* CJSMethodArgument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CJSMethodArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string json_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->json_data().data(), static_cast<int>(this->json_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CJSMethodArgument.json_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json_data(), target);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->function_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CJSMethodArgument)
  return target;
}

size_t CJSMethodArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CJSMethodArgument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string json_data = 1;
    if (has_json_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->json_data());
    }

    // optional uint64 function_handle = 2;
    if (has_function_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->function_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CJSMethodArgument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CJSMethodArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const CJSMethodArgument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CJSMethodArgument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CJSMethodArgument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CJSMethodArgument)
    MergeFrom(*source);
  }
}

void CJSMethodArgument::MergeFrom(const CJSMethodArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CJSMethodArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_json_data();
      json_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      function_handle_ = from.function_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CJSMethodArgument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CJSMethodArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CJSMethodArgument::CopyFrom(const CJSMethodArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CJSMethodArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CJSMethodArgument::IsInitialized() const {
  return true;
}

void CJSMethodArgument::Swap(CJSMethodArgument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CJSMethodArgument::InternalSwap(CJSMethodArgument* other) {
  using std::swap;
  json_data_.Swap(&other->json_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(function_handle_, other->function_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CJSMethodArgument::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSValue_JSObjectProperty::InitAsDefaultInstance() {
  ::_CMsgJSValue_JSObjectProperty_default_instance_._instance.get_mutable()->value_ = const_cast< ::CMsgJSValue*>(
      ::CMsgJSValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSValue_JSObjectProperty::kNameFieldNumber;
const int CMsgJSValue_JSObjectProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSValue_JSObjectProperty::CMsgJSValue_JSObjectProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSValue.JSObjectProperty)
}
CMsgJSValue_JSObjectProperty::CMsgJSValue_JSObjectProperty(const CMsgJSValue_JSObjectProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    value_ = new ::CMsgJSValue(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgJSValue.JSObjectProperty)
}

void CMsgJSValue_JSObjectProperty::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

CMsgJSValue_JSObjectProperty::~CMsgJSValue_JSObjectProperty() {
  // @@protoc_insertion_point(destructor:CMsgJSValue.JSObjectProperty)
  SharedDtor();
}

void CMsgJSValue_JSObjectProperty::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void CMsgJSValue_JSObjectProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSValue_JSObjectProperty::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSValue_JSObjectProperty& CMsgJSValue_JSObjectProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base);
  return *internal_default_instance();
}


void CMsgJSValue_JSObjectProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSValue.JSObjectProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSValue_JSObjectProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSValue.JSObjectProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSValue.JSObjectProperty.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgJSValue value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSValue.JSObjectProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSValue.JSObjectProperty)
  return false;
#undef DO_
}

void CMsgJSValue_JSObjectProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSValue.JSObjectProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSValue.JSObjectProperty.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .CMsgJSValue value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSValue.JSObjectProperty)
}

::google::protobuf::uint8* CMsgJSValue_JSObjectProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSValue.JSObjectProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSValue.JSObjectProperty.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .CMsgJSValue value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSValue.JSObjectProperty)
  return target;
}

size_t CMsgJSValue_JSObjectProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSValue.JSObjectProperty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .CMsgJSValue value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSValue_JSObjectProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSValue.JSObjectProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSValue_JSObjectProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSValue_JSObjectProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSValue.JSObjectProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSValue.JSObjectProperty)
    MergeFrom(*source);
  }
}

void CMsgJSValue_JSObjectProperty::MergeFrom(const CMsgJSValue_JSObjectProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSValue.JSObjectProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::CMsgJSValue::MergeFrom(from.value());
    }
  }
}

void CMsgJSValue_JSObjectProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSValue.JSObjectProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSValue_JSObjectProperty::CopyFrom(const CMsgJSValue_JSObjectProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSValue.JSObjectProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSValue_JSObjectProperty::IsInitialized() const {
  return true;
}

void CMsgJSValue_JSObjectProperty::Swap(CMsgJSValue_JSObjectProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSValue_JSObjectProperty::InternalSwap(CMsgJSValue_JSObjectProperty* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSValue_JSObjectProperty::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSValue::kBoolValueFieldNumber;
const int CMsgJSValue::kIntValueFieldNumber;
const int CMsgJSValue::kUintValueFieldNumber;
const int CMsgJSValue::kDoubleValueFieldNumber;
const int CMsgJSValue::kStringValueFieldNumber;
const int CMsgJSValue::kFunctionHandleFieldNumber;
const int CMsgJSValue::kIsArrayFieldNumber;
const int CMsgJSValue::kArrayValuesFieldNumber;
const int CMsgJSValue::kIsObjectFieldNumber;
const int CMsgJSValue::kObjectPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSValue::CMsgJSValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSValue)
}
CMsgJSValue::CMsgJSValue(const CMsgJSValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      array_values_(from.array_values_),
      object_properties_(from.object_properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  ::memcpy(&int_value_, &from.int_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_object_) -
    reinterpret_cast<char*>(&int_value_)) + sizeof(is_object_));
  // @@protoc_insertion_point(copy_constructor:CMsgJSValue)
}

void CMsgJSValue::SharedCtor() {
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&int_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_object_) -
      reinterpret_cast<char*>(&int_value_)) + sizeof(is_object_));
}

CMsgJSValue::~CMsgJSValue() {
  // @@protoc_insertion_point(destructor:CMsgJSValue)
  SharedDtor();
}

void CMsgJSValue::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSValue::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSValue& CMsgJSValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSValue.base);
  return *internal_default_instance();
}


void CMsgJSValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_values_.Clear();
  object_properties_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    string_value_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&int_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_object_) -
        reinterpret_cast<char*>(&int_value_)) + sizeof(is_object_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bool_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bool_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_int_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_uint_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_double_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSValue.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 function_handle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_function_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &function_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_array = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_is_array();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_array_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgJSValue array_values = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_array_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_object = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_object();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_object_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgJSValue.JSObjectProperty object_properties = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSValue)
  return false;
#undef DO_
}

void CMsgJSValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bool_value = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_value(), output);
  }

  // optional int32 int_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int_value(), output);
  }

  // optional uint32 uint_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uint_value(), output);
  }

  // optional double double_value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_value(), output);
  }

  // optional string string_value = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->string_value(), output);
  }

  // optional uint64 function_handle = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->function_handle(), output);
  }

  // optional bool is_array = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_array(), output);
  }

  // repeated .CMsgJSValue array_values = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->array_values(static_cast<int>(i)),
      output);
  }

  // optional bool is_object = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_object(), output);
  }

  // repeated .CMsgJSValue.JSObjectProperty object_properties = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->object_properties(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSValue)
}

::google::protobuf::uint8* CMsgJSValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bool_value = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_value(), target);
  }

  // optional int32 int_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int_value(), target);
  }

  // optional uint32 uint_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uint_value(), target);
  }

  // optional double double_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_value(), target);
  }

  // optional string string_value = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->string_value(), target);
  }

  // optional uint64 function_handle = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->function_handle(), target);
  }

  // optional bool is_array = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_array(), target);
  }

  // repeated .CMsgJSValue array_values = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->array_values(static_cast<int>(i)), deterministic, target);
  }

  // optional bool is_object = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_object(), target);
  }

  // repeated .CMsgJSValue.JSObjectProperty object_properties = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->object_properties(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSValue)
  return target;
}

size_t CMsgJSValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgJSValue array_values = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->array_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->array_values(static_cast<int>(i)));
    }
  }

  // repeated .CMsgJSValue.JSObjectProperty object_properties = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->object_properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object_properties(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string string_value = 5;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional int32 int_value = 2;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
    }

    // optional uint32 uint_value = 3;
    if (has_uint_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint_value());
    }

    // optional double double_value = 4;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional uint64 function_handle = 6;
    if (has_function_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->function_handle());
    }

    // optional bool bool_value = 1;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }

    // optional bool is_array = 8;
    if (has_is_array()) {
      total_size += 1 + 1;
    }

    // optional bool is_object = 10;
    if (has_is_object()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSValue)
    MergeFrom(*source);
  }
}

void CMsgJSValue::MergeFrom(const CMsgJSValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_values_.MergeFrom(from.array_values_);
  object_properties_.MergeFrom(from.object_properties_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000002u) {
      int_value_ = from.int_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      uint_value_ = from.uint_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      double_value_ = from.double_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      function_handle_ = from.function_handle_;
    }
    if (cached_has_bits & 0x00000020u) {
      bool_value_ = from.bool_value_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_array_ = from.is_array_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_object_ = from.is_object_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSValue::CopyFrom(const CMsgJSValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSValue::IsInitialized() const {
  return true;
}

void CMsgJSValue::Swap(CMsgJSValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSValue::InternalSwap(CMsgJSValue* other) {
  using std::swap;
  CastToBase(&array_values_)->InternalSwap(CastToBase(&other->array_values_));
  CastToBase(&object_properties_)->InternalSwap(CastToBase(&other->object_properties_));
  string_value_.Swap(&other->string_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(int_value_, other->int_value_);
  swap(uint_value_, other->uint_value_);
  swap(double_value_, other->double_value_);
  swap(function_handle_, other->function_handle_);
  swap(bool_value_, other->bool_value_);
  swap(is_array_, other->is_array_);
  swap(is_object_, other->is_object_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSValue::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSMethodCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSMethodCall::kBrowserHandleFieldNumber;
const int CMsgJSMethodCall::kNameFieldNumber;
const int CMsgJSMethodCall::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSMethodCall::CMsgJSMethodCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSMethodCall.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSMethodCall)
}
CMsgJSMethodCall::CMsgJSMethodCall(const CMsgJSMethodCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgJSMethodCall)
}

void CMsgJSMethodCall::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgJSMethodCall::~CMsgJSMethodCall() {
  // @@protoc_insertion_point(destructor:CMsgJSMethodCall)
  SharedDtor();
}

void CMsgJSMethodCall::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSMethodCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSMethodCall::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSMethodCall& CMsgJSMethodCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSMethodCall.base);
  return *internal_default_instance();
}


void CMsgJSMethodCall::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSMethodCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSMethodCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSMethodCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSMethodCall.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgJSValue arguments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSMethodCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSMethodCall)
  return false;
#undef DO_
}

void CMsgJSMethodCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSMethodCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSMethodCall.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .CMsgJSValue arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->arguments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSMethodCall)
}

::google::protobuf::uint8* CMsgJSMethodCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSMethodCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSMethodCall.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .CMsgJSValue arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSMethodCall)
  return target;
}

size_t CMsgJSMethodCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSMethodCall)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgJSValue arguments = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSMethodCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSMethodCall)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSMethodCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSMethodCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSMethodCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSMethodCall)
    MergeFrom(*source);
  }
}

void CMsgJSMethodCall::MergeFrom(const CMsgJSMethodCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSMethodCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSMethodCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSMethodCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSMethodCall::CopyFrom(const CMsgJSMethodCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSMethodCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSMethodCall::IsInitialized() const {
  return true;
}

void CMsgJSMethodCall::Swap(CMsgJSMethodCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSMethodCall::InternalSwap(CMsgJSMethodCall* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSMethodCall::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSExecuteCallback::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSExecuteCallback::kBrowserHandleFieldNumber;
const int CMsgJSExecuteCallback::kFunctionHandleFieldNumber;
const int CMsgJSExecuteCallback::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSExecuteCallback::CMsgJSExecuteCallback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSExecuteCallback.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSExecuteCallback)
}
CMsgJSExecuteCallback::CMsgJSExecuteCallback(const CMsgJSExecuteCallback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&function_handle_, &from.function_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_handle_) -
    reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgJSExecuteCallback)
}

void CMsgJSExecuteCallback::SharedCtor() {
  ::memset(&function_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_handle_) -
      reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
}

CMsgJSExecuteCallback::~CMsgJSExecuteCallback() {
  // @@protoc_insertion_point(destructor:CMsgJSExecuteCallback)
  SharedDtor();
}

void CMsgJSExecuteCallback::SharedDtor() {
}

void CMsgJSExecuteCallback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSExecuteCallback::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSExecuteCallback& CMsgJSExecuteCallback::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSExecuteCallback.base);
  return *internal_default_instance();
}


void CMsgJSExecuteCallback::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSExecuteCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&function_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&browser_handle_) -
        reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSExecuteCallback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSExecuteCallback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 function_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_function_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &function_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgJSValue arguments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSExecuteCallback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSExecuteCallback)
  return false;
#undef DO_
}

void CMsgJSExecuteCallback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSExecuteCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->function_handle(), output);
  }

  // repeated .CMsgJSValue arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->arguments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSExecuteCallback)
}

::google::protobuf::uint8* CMsgJSExecuteCallback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSExecuteCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->function_handle(), target);
  }

  // repeated .CMsgJSValue arguments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSExecuteCallback)
  return target;
}

size_t CMsgJSExecuteCallback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSExecuteCallback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgJSValue arguments = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 function_handle = 2;
    if (has_function_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->function_handle());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSExecuteCallback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSExecuteCallback)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSExecuteCallback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSExecuteCallback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSExecuteCallback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSExecuteCallback)
    MergeFrom(*source);
  }
}

void CMsgJSExecuteCallback::MergeFrom(const CMsgJSExecuteCallback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSExecuteCallback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      function_handle_ = from.function_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSExecuteCallback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSExecuteCallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSExecuteCallback::CopyFrom(const CMsgJSExecuteCallback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSExecuteCallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSExecuteCallback::IsInitialized() const {
  return true;
}

void CMsgJSExecuteCallback::Swap(CMsgJSExecuteCallback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSExecuteCallback::InternalSwap(CMsgJSExecuteCallback* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  swap(function_handle_, other->function_handle_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSExecuteCallback::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSReleaseCallback::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSReleaseCallback::kBrowserHandleFieldNumber;
const int CMsgJSReleaseCallback::kFunctionHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSReleaseCallback::CMsgJSReleaseCallback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSReleaseCallback.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSReleaseCallback)
}
CMsgJSReleaseCallback::CMsgJSReleaseCallback(const CMsgJSReleaseCallback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&function_handle_, &from.function_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_handle_) -
    reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgJSReleaseCallback)
}

void CMsgJSReleaseCallback::SharedCtor() {
  ::memset(&function_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_handle_) -
      reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
}

CMsgJSReleaseCallback::~CMsgJSReleaseCallback() {
  // @@protoc_insertion_point(destructor:CMsgJSReleaseCallback)
  SharedDtor();
}

void CMsgJSReleaseCallback::SharedDtor() {
}

void CMsgJSReleaseCallback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSReleaseCallback::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSReleaseCallback& CMsgJSReleaseCallback::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSReleaseCallback.base);
  return *internal_default_instance();
}


void CMsgJSReleaseCallback::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSReleaseCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&function_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&browser_handle_) -
        reinterpret_cast<char*>(&function_handle_)) + sizeof(browser_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSReleaseCallback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSReleaseCallback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 function_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_function_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &function_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSReleaseCallback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSReleaseCallback)
  return false;
#undef DO_
}

void CMsgJSReleaseCallback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSReleaseCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->function_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSReleaseCallback)
}

::google::protobuf::uint8* CMsgJSReleaseCallback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSReleaseCallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint64 function_handle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->function_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSReleaseCallback)
  return target;
}

size_t CMsgJSReleaseCallback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSReleaseCallback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 function_handle = 2;
    if (has_function_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->function_handle());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSReleaseCallback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSReleaseCallback)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSReleaseCallback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSReleaseCallback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSReleaseCallback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSReleaseCallback)
    MergeFrom(*source);
  }
}

void CMsgJSReleaseCallback::MergeFrom(const CMsgJSReleaseCallback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSReleaseCallback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      function_handle_ = from.function_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSReleaseCallback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSReleaseCallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSReleaseCallback::CopyFrom(const CMsgJSReleaseCallback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSReleaseCallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSReleaseCallback::IsInitialized() const {
  return true;
}

void CMsgJSReleaseCallback::Swap(CMsgJSReleaseCallback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSReleaseCallback::InternalSwap(CMsgJSReleaseCallback* other) {
  using std::swap;
  swap(function_handle_, other->function_handle_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSReleaseCallback::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJSRaiseException::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJSRaiseException::kBrowserHandleFieldNumber;
const int CMsgJSRaiseException::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJSRaiseException::CMsgJSRaiseException()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJSRaiseException.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJSRaiseException)
}
CMsgJSRaiseException::CMsgJSRaiseException(const CMsgJSRaiseException& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exception_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exception()) {
    exception_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgJSRaiseException)
}

void CMsgJSRaiseException::SharedCtor() {
  exception_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgJSRaiseException::~CMsgJSRaiseException() {
  // @@protoc_insertion_point(destructor:CMsgJSRaiseException)
  SharedDtor();
}

void CMsgJSRaiseException::SharedDtor() {
  exception_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJSRaiseException::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJSRaiseException::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJSRaiseException& CMsgJSRaiseException::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJSRaiseException.base);
  return *internal_default_instance();
}


void CMsgJSRaiseException::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJSRaiseException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    exception_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJSRaiseException::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJSRaiseException)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string exception = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exception()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->exception().data(), static_cast<int>(this->exception().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJSRaiseException.exception");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJSRaiseException)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJSRaiseException)
  return false;
#undef DO_
}

void CMsgJSRaiseException::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJSRaiseException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string exception = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exception().data(), static_cast<int>(this->exception().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSRaiseException.exception");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exception(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJSRaiseException)
}

::google::protobuf::uint8* CMsgJSRaiseException::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJSRaiseException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string exception = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exception().data(), static_cast<int>(this->exception().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJSRaiseException.exception");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exception(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJSRaiseException)
  return target;
}

size_t CMsgJSRaiseException::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJSRaiseException)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string exception = 2;
    if (has_exception()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exception());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJSRaiseException::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJSRaiseException)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJSRaiseException* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJSRaiseException>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJSRaiseException)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJSRaiseException)
    MergeFrom(*source);
  }
}

void CMsgJSRaiseException::MergeFrom(const CMsgJSRaiseException& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJSRaiseException)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_exception();
      exception_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgJSRaiseException::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJSRaiseException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJSRaiseException::CopyFrom(const CMsgJSRaiseException& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJSRaiseException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJSRaiseException::IsInitialized() const {
  return true;
}

void CMsgJSRaiseException::Swap(CMsgJSRaiseException* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJSRaiseException::InternalSwap(CMsgJSRaiseException* other) {
  using std::swap;
  exception_.Swap(&other->exception_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJSRaiseException::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLoadLocalization::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLoadLocalization::kBrowserHandleFieldNumber;
const int CMsgLoadLocalization::kLocalizationPathFieldNumber;
const int CMsgLoadLocalization::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLoadLocalization::CMsgLoadLocalization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgLoadLocalization.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLoadLocalization)
}
CMsgLoadLocalization::CMsgLoadLocalization(const CMsgLoadLocalization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  localization_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localization_path()) {
    localization_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_path_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgLoadLocalization)
}

void CMsgLoadLocalization::SharedCtor() {
  localization_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgLoadLocalization::~CMsgLoadLocalization() {
  // @@protoc_insertion_point(destructor:CMsgLoadLocalization)
  SharedDtor();
}

void CMsgLoadLocalization::SharedDtor() {
  localization_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLoadLocalization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgLoadLocalization::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLoadLocalization& CMsgLoadLocalization::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgLoadLocalization.base);
  return *internal_default_instance();
}


void CMsgLoadLocalization::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLoadLocalization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      localization_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      language_.ClearNonDefaultToEmptyNoArena();
    }
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLoadLocalization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLoadLocalization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localization_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localization_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localization_path().data(), static_cast<int>(this->localization_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLoadLocalization.localization_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgLoadLocalization.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLoadLocalization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLoadLocalization)
  return false;
#undef DO_
}

void CMsgLoadLocalization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLoadLocalization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string localization_path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_path().data(), static_cast<int>(this->localization_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadLocalization.localization_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->localization_path(), output);
  }

  // optional string language = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadLocalization.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLoadLocalization)
}

::google::protobuf::uint8* CMsgLoadLocalization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLoadLocalization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string localization_path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localization_path().data(), static_cast<int>(this->localization_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadLocalization.localization_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localization_path(), target);
  }

  // optional string language = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgLoadLocalization.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLoadLocalization)
  return target;
}

size_t CMsgLoadLocalization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLoadLocalization)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string localization_path = 2;
    if (has_localization_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localization_path());
    }

    // optional string language = 3;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLoadLocalization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLoadLocalization)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLoadLocalization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLoadLocalization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLoadLocalization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLoadLocalization)
    MergeFrom(*source);
  }
}

void CMsgLoadLocalization::MergeFrom(const CMsgLoadLocalization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLoadLocalization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_localization_path();
      localization_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localization_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000004u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLoadLocalization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLoadLocalization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLoadLocalization::CopyFrom(const CMsgLoadLocalization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLoadLocalization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLoadLocalization::IsInitialized() const {
  return true;
}

void CMsgLoadLocalization::Swap(CMsgLoadLocalization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLoadLocalization::InternalSwap(CMsgLoadLocalization* other) {
  using std::swap;
  localization_path_.Swap(&other->localization_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgLoadLocalization::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgJumpListLink::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgJumpListLink::kDisplayNameFieldNumber;
const int CMsgJumpListLink::kUrlLinkFieldNumber;
const int CMsgJumpListLink::kIconPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgJumpListLink::CMsgJumpListLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgJumpListLink.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgJumpListLink)
}
CMsgJumpListLink::CMsgJumpListLink(const CMsgJumpListLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_display_name()) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  url_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url_link()) {
    url_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_link_);
  }
  icon_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_path()) {
    icon_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_path_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgJumpListLink)
}

void CMsgJumpListLink::SharedCtor() {
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgJumpListLink::~CMsgJumpListLink() {
  // @@protoc_insertion_point(destructor:CMsgJumpListLink)
  SharedDtor();
}

void CMsgJumpListLink::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgJumpListLink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgJumpListLink::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgJumpListLink& CMsgJumpListLink::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgJumpListLink.base);
  return *internal_default_instance();
}


void CMsgJumpListLink::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgJumpListLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      display_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      url_link_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      icon_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgJumpListLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgJumpListLink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string display_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJumpListLink.display_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url_link().data(), static_cast<int>(this->url_link().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJumpListLink.url_link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_path().data(), static_cast<int>(this->icon_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgJumpListLink.icon_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgJumpListLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgJumpListLink)
  return false;
#undef DO_
}

void CMsgJumpListLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgJumpListLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string display_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->display_name(), output);
  }

  // optional string url_link = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_link().data(), static_cast<int>(this->url_link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.url_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url_link(), output);
  }

  // optional string icon_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_path().data(), static_cast<int>(this->icon_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.icon_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->icon_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgJumpListLink)
}

::google::protobuf::uint8* CMsgJumpListLink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgJumpListLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string display_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->display_name(), target);
  }

  // optional string url_link = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_link().data(), static_cast<int>(this->url_link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.url_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url_link(), target);
  }

  // optional string icon_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_path().data(), static_cast<int>(this->icon_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgJumpListLink.icon_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->icon_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgJumpListLink)
  return target;
}

size_t CMsgJumpListLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgJumpListLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string display_name = 1;
    if (has_display_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->display_name());
    }

    // optional string url_link = 2;
    if (has_url_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url_link());
    }

    // optional string icon_path = 3;
    if (has_icon_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgJumpListLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgJumpListLink)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgJumpListLink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgJumpListLink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgJumpListLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgJumpListLink)
    MergeFrom(*source);
  }
}

void CMsgJumpListLink::MergeFrom(const CMsgJumpListLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgJumpListLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_display_name();
      display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url_link();
      url_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_link_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon_path();
      icon_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_path_);
    }
  }
}

void CMsgJumpListLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgJumpListLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgJumpListLink::CopyFrom(const CMsgJumpListLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgJumpListLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgJumpListLink::IsInitialized() const {
  return true;
}

void CMsgJumpListLink::Swap(CMsgJumpListLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgJumpListLink::InternalSwap(CMsgJumpListLink* other) {
  using std::swap;
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_link_.Swap(&other->url_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_path_.Swap(&other->icon_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgJumpListLink::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMSgJumpListMRUApp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMSgJumpListMRUApp::kAppidFieldNumber;
const int CMSgJumpListMRUApp::kDisplayNameFieldNumber;
const int CMSgJumpListMRUApp::kUrlLinkFieldNumber;
const int CMSgJumpListMRUApp::kIconPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMSgJumpListMRUApp::CMSgJumpListMRUApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMSgJumpListMRUApp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMSgJumpListMRUApp)
}
CMSgJumpListMRUApp::CMSgJumpListMRUApp(const CMSgJumpListMRUApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_display_name()) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  url_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url_link()) {
    url_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_link_);
  }
  icon_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon_path()) {
    icon_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_path_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CMSgJumpListMRUApp)
}

void CMSgJumpListMRUApp::SharedCtor() {
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = 0u;
}

CMSgJumpListMRUApp::~CMSgJumpListMRUApp() {
  // @@protoc_insertion_point(destructor:CMSgJumpListMRUApp)
  SharedDtor();
}

void CMSgJumpListMRUApp::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMSgJumpListMRUApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMSgJumpListMRUApp::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMSgJumpListMRUApp& CMSgJumpListMRUApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMSgJumpListMRUApp.base);
  return *internal_default_instance();
}


void CMSgJumpListMRUApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMSgJumpListMRUApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      display_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      url_link_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      icon_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMSgJumpListMRUApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMSgJumpListMRUApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMSgJumpListMRUApp.display_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url_link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url_link().data(), static_cast<int>(this->url_link().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMSgJumpListMRUApp.url_link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_path().data(), static_cast<int>(this->icon_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMSgJumpListMRUApp.icon_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMSgJumpListMRUApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMSgJumpListMRUApp)
  return false;
#undef DO_
}

void CMSgJumpListMRUApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMSgJumpListMRUApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string display_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // optional string url_link = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_link().data(), static_cast<int>(this->url_link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.url_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url_link(), output);
  }

  // optional string icon_path = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_path().data(), static_cast<int>(this->icon_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.icon_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMSgJumpListMRUApp)
}

::google::protobuf::uint8* CMSgJumpListMRUApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMSgJumpListMRUApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string display_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // optional string url_link = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url_link().data(), static_cast<int>(this->url_link().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.url_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url_link(), target);
  }

  // optional string icon_path = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_path().data(), static_cast<int>(this->icon_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSgJumpListMRUApp.icon_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMSgJumpListMRUApp)
  return target;
}

size_t CMSgJumpListMRUApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMSgJumpListMRUApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string display_name = 2;
    if (has_display_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->display_name());
    }

    // optional string url_link = 3;
    if (has_url_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url_link());
    }

    // optional string icon_path = 4;
    if (has_icon_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_path());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMSgJumpListMRUApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMSgJumpListMRUApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMSgJumpListMRUApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMSgJumpListMRUApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMSgJumpListMRUApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMSgJumpListMRUApp)
    MergeFrom(*source);
  }
}

void CMSgJumpListMRUApp::MergeFrom(const CMSgJumpListMRUApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMSgJumpListMRUApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_display_name();
      display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url_link();
      url_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_link_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon_path();
      icon_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMSgJumpListMRUApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMSgJumpListMRUApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMSgJumpListMRUApp::CopyFrom(const CMSgJumpListMRUApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMSgJumpListMRUApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMSgJumpListMRUApp::IsInitialized() const {
  return true;
}

void CMSgJumpListMRUApp::Swap(CMSgJumpListMRUApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMSgJumpListMRUApp::InternalSwap(CMSgJumpListMRUApp* other) {
  using std::swap;
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_link_.Swap(&other->url_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_path_.Swap(&other->icon_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMSgJumpListMRUApp::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetJumpList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetJumpList::kSteamPathFieldNumber;
const int CMsgSetJumpList::kMruTitleFieldNumber;
const int CMsgSetJumpList::kAppsFieldNumber;
const int CMsgSetJumpList::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetJumpList::CMsgSetJumpList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetJumpList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetJumpList)
}
CMsgSetJumpList::CMsgSetJumpList(const CMsgSetJumpList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      apps_(from.apps_),
      links_(from.links_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_steam_path()) {
    steam_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.steam_path_);
  }
  mru_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mru_title()) {
    mru_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mru_title_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSetJumpList)
}

void CMsgSetJumpList::SharedCtor() {
  steam_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mru_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgSetJumpList::~CMsgSetJumpList() {
  // @@protoc_insertion_point(destructor:CMsgSetJumpList)
  SharedDtor();
}

void CMsgSetJumpList::SharedDtor() {
  steam_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mru_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSetJumpList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetJumpList::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetJumpList& CMsgSetJumpList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetJumpList.base);
  return *internal_default_instance();
}


void CMsgSetJumpList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetJumpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  links_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mru_title_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetJumpList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetJumpList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string steam_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_steam_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->steam_path().data(), static_cast<int>(this->steam_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetJumpList.steam_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mru_title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mru_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mru_title().data(), static_cast<int>(this->mru_title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSetJumpList.mru_title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMSgJumpListMRUApp apps = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgJumpListLink links = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetJumpList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetJumpList)
  return false;
#undef DO_
}

void CMsgSetJumpList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetJumpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string steam_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->steam_path().data(), static_cast<int>(this->steam_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetJumpList.steam_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->steam_path(), output);
  }

  // optional string mru_title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mru_title().data(), static_cast<int>(this->mru_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetJumpList.mru_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mru_title(), output);
  }

  // repeated .CMSgJumpListMRUApp apps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->apps(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgJumpListLink links = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->links(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetJumpList)
}

::google::protobuf::uint8* CMsgSetJumpList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetJumpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string steam_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->steam_path().data(), static_cast<int>(this->steam_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetJumpList.steam_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->steam_path(), target);
  }

  // optional string mru_title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mru_title().data(), static_cast<int>(this->mru_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSetJumpList.mru_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mru_title(), target);
  }

  // repeated .CMSgJumpListMRUApp apps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->apps(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgJumpListLink links = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->links_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->links(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetJumpList)
  return target;
}

size_t CMsgSetJumpList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetJumpList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMSgJumpListMRUApp apps = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apps(static_cast<int>(i)));
    }
  }

  // repeated .CMsgJumpListLink links = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->links_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->links(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string steam_path = 1;
    if (has_steam_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->steam_path());
    }

    // optional string mru_title = 2;
    if (has_mru_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mru_title());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetJumpList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetJumpList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetJumpList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetJumpList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetJumpList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetJumpList)
    MergeFrom(*source);
  }
}

void CMsgSetJumpList::MergeFrom(const CMsgSetJumpList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetJumpList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  links_.MergeFrom(from.links_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_steam_path();
      steam_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.steam_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mru_title();
      mru_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mru_title_);
    }
  }
}

void CMsgSetJumpList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetJumpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetJumpList::CopyFrom(const CMsgSetJumpList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetJumpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetJumpList::IsInitialized() const {
  return true;
}

void CMsgSetJumpList::Swap(CMsgSetJumpList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetJumpList::InternalSwap(CMsgSetJumpList* other) {
  using std::swap;
  CastToBase(&apps_)->InternalSwap(CastToBase(&other->apps_));
  CastToBase(&links_)->InternalSwap(CastToBase(&other->links_));
  steam_path_.Swap(&other->steam_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mru_title_.Swap(&other->mru_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetJumpList::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetGameOverlayTargetPIDs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetGameOverlayTargetPIDs::kBrowserHandleFieldNumber;
const int CMsgSetGameOverlayTargetPIDs::kTargetPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetGameOverlayTargetPIDs::CMsgSetGameOverlayTargetPIDs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetGameOverlayTargetPIDs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetGameOverlayTargetPIDs)
}
CMsgSetGameOverlayTargetPIDs::CMsgSetGameOverlayTargetPIDs(const CMsgSetGameOverlayTargetPIDs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      target_pid_(from.target_pid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgSetGameOverlayTargetPIDs)
}

void CMsgSetGameOverlayTargetPIDs::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgSetGameOverlayTargetPIDs::~CMsgSetGameOverlayTargetPIDs() {
  // @@protoc_insertion_point(destructor:CMsgSetGameOverlayTargetPIDs)
  SharedDtor();
}

void CMsgSetGameOverlayTargetPIDs::SharedDtor() {
}

void CMsgSetGameOverlayTargetPIDs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetGameOverlayTargetPIDs::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetGameOverlayTargetPIDs& CMsgSetGameOverlayTargetPIDs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetGameOverlayTargetPIDs.base);
  return *internal_default_instance();
}


void CMsgSetGameOverlayTargetPIDs::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetGameOverlayTargetPIDs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_pid_.Clear();
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetGameOverlayTargetPIDs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetGameOverlayTargetPIDs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 target_pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_target_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_target_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetGameOverlayTargetPIDs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetGameOverlayTargetPIDs)
  return false;
#undef DO_
}

void CMsgSetGameOverlayTargetPIDs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetGameOverlayTargetPIDs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // repeated uint32 target_pid = 2;
  for (int i = 0, n = this->target_pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->target_pid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetGameOverlayTargetPIDs)
}

::google::protobuf::uint8* CMsgSetGameOverlayTargetPIDs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetGameOverlayTargetPIDs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // repeated uint32 target_pid = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->target_pid_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetGameOverlayTargetPIDs)
  return target;
}

size_t CMsgSetGameOverlayTargetPIDs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetGameOverlayTargetPIDs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 target_pid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->target_pid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->target_pid_size());
    total_size += data_size;
  }

  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetGameOverlayTargetPIDs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetGameOverlayTargetPIDs)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetGameOverlayTargetPIDs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetGameOverlayTargetPIDs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetGameOverlayTargetPIDs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetGameOverlayTargetPIDs)
    MergeFrom(*source);
  }
}

void CMsgSetGameOverlayTargetPIDs::MergeFrom(const CMsgSetGameOverlayTargetPIDs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetGameOverlayTargetPIDs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_pid_.MergeFrom(from.target_pid_);
  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgSetGameOverlayTargetPIDs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetGameOverlayTargetPIDs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetGameOverlayTargetPIDs::CopyFrom(const CMsgSetGameOverlayTargetPIDs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetGameOverlayTargetPIDs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetGameOverlayTargetPIDs::IsInitialized() const {
  return true;
}

void CMsgSetGameOverlayTargetPIDs::Swap(CMsgSetGameOverlayTargetPIDs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetGameOverlayTargetPIDs::InternalSwap(CMsgSetGameOverlayTargetPIDs* other) {
  using std::swap;
  target_pid_.InternalSwap(&other->target_pid_);
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetGameOverlayTargetPIDs::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameOverlayTargetTextureID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameOverlayTargetTextureID::kBrowserHandleFieldNumber;
const int CMsgGameOverlayTargetTextureID::kTargetPidFieldNumber;
const int CMsgGameOverlayTargetTextureID::kTextureHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameOverlayTargetTextureID::CMsgGameOverlayTargetTextureID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgGameOverlayTargetTextureID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameOverlayTargetTextureID)
}
CMsgGameOverlayTargetTextureID::CMsgGameOverlayTargetTextureID(const CMsgGameOverlayTargetTextureID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&texture_handle_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(texture_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameOverlayTargetTextureID)
}

void CMsgGameOverlayTargetTextureID::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&texture_handle_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(texture_handle_));
}

CMsgGameOverlayTargetTextureID::~CMsgGameOverlayTargetTextureID() {
  // @@protoc_insertion_point(destructor:CMsgGameOverlayTargetTextureID)
  SharedDtor();
}

void CMsgGameOverlayTargetTextureID::SharedDtor() {
}

void CMsgGameOverlayTargetTextureID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgGameOverlayTargetTextureID::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameOverlayTargetTextureID& CMsgGameOverlayTargetTextureID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgGameOverlayTargetTextureID.base);
  return *internal_default_instance();
}


void CMsgGameOverlayTargetTextureID::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameOverlayTargetTextureID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&texture_handle_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(texture_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameOverlayTargetTextureID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameOverlayTargetTextureID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 texture_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_texture_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &texture_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameOverlayTargetTextureID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameOverlayTargetTextureID)
  return false;
#undef DO_
}

void CMsgGameOverlayTargetTextureID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameOverlayTargetTextureID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 target_pid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_pid(), output);
  }

  // optional uint32 texture_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->texture_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameOverlayTargetTextureID)
}

::google::protobuf::uint8* CMsgGameOverlayTargetTextureID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameOverlayTargetTextureID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 target_pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_pid(), target);
  }

  // optional uint32 texture_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->texture_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameOverlayTargetTextureID)
  return target;
}

size_t CMsgGameOverlayTargetTextureID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameOverlayTargetTextureID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 target_pid = 2;
    if (has_target_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_pid());
    }

    // optional uint32 texture_handle = 3;
    if (has_texture_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->texture_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameOverlayTargetTextureID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameOverlayTargetTextureID)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameOverlayTargetTextureID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameOverlayTargetTextureID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameOverlayTargetTextureID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameOverlayTargetTextureID)
    MergeFrom(*source);
  }
}

void CMsgGameOverlayTargetTextureID::MergeFrom(const CMsgGameOverlayTargetTextureID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameOverlayTargetTextureID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_pid_ = from.target_pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      texture_handle_ = from.texture_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameOverlayTargetTextureID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameOverlayTargetTextureID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameOverlayTargetTextureID::CopyFrom(const CMsgGameOverlayTargetTextureID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameOverlayTargetTextureID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameOverlayTargetTextureID::IsInitialized() const {
  return true;
}

void CMsgGameOverlayTargetTextureID::Swap(CMsgGameOverlayTargetTextureID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameOverlayTargetTextureID::InternalSwap(CMsgGameOverlayTargetTextureID* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(target_pid_, other->target_pid_);
  swap(texture_handle_, other->texture_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgGameOverlayTargetTextureID::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDraggableRegionsChanged_DraggableRects::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDraggableRegionsChanged_DraggableRects::kXFieldNumber;
const int CMsgDraggableRegionsChanged_DraggableRects::kYFieldNumber;
const int CMsgDraggableRegionsChanged_DraggableRects::kWidthFieldNumber;
const int CMsgDraggableRegionsChanged_DraggableRects::kHeightFieldNumber;
const int CMsgDraggableRegionsChanged_DraggableRects::kDraggableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDraggableRegionsChanged_DraggableRects::CMsgDraggableRegionsChanged_DraggableRects()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgDraggableRegionsChanged_DraggableRects.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDraggableRegionsChanged.DraggableRects)
}
CMsgDraggableRegionsChanged_DraggableRects::CMsgDraggableRegionsChanged_DraggableRects(const CMsgDraggableRegionsChanged_DraggableRects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&draggable_) -
    reinterpret_cast<char*>(&x_)) + sizeof(draggable_));
  // @@protoc_insertion_point(copy_constructor:CMsgDraggableRegionsChanged.DraggableRects)
}

void CMsgDraggableRegionsChanged_DraggableRects::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draggable_) -
      reinterpret_cast<char*>(&x_)) + sizeof(draggable_));
}

CMsgDraggableRegionsChanged_DraggableRects::~CMsgDraggableRegionsChanged_DraggableRects() {
  // @@protoc_insertion_point(destructor:CMsgDraggableRegionsChanged.DraggableRects)
  SharedDtor();
}

void CMsgDraggableRegionsChanged_DraggableRects::SharedDtor() {
}

void CMsgDraggableRegionsChanged_DraggableRects::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDraggableRegionsChanged_DraggableRects::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDraggableRegionsChanged_DraggableRects& CMsgDraggableRegionsChanged_DraggableRects::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgDraggableRegionsChanged_DraggableRects.base);
  return *internal_default_instance();
}


void CMsgDraggableRegionsChanged_DraggableRects::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDraggableRegionsChanged.DraggableRects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&draggable_) -
        reinterpret_cast<char*>(&x_)) + sizeof(draggable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDraggableRegionsChanged_DraggableRects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDraggableRegionsChanged.DraggableRects)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool draggable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_draggable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &draggable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDraggableRegionsChanged.DraggableRects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDraggableRegionsChanged.DraggableRects)
  return false;
#undef DO_
}

void CMsgDraggableRegionsChanged_DraggableRects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDraggableRegionsChanged.DraggableRects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // optional int32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  // optional bool draggable = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->draggable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDraggableRegionsChanged.DraggableRects)
}

::google::protobuf::uint8* CMsgDraggableRegionsChanged_DraggableRects::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDraggableRegionsChanged.DraggableRects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // optional int32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  // optional bool draggable = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->draggable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDraggableRegionsChanged.DraggableRects)
  return target;
}

size_t CMsgDraggableRegionsChanged_DraggableRects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDraggableRegionsChanged.DraggableRects)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional bool draggable = 5;
    if (has_draggable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDraggableRegionsChanged_DraggableRects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDraggableRegionsChanged.DraggableRects)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDraggableRegionsChanged_DraggableRects* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDraggableRegionsChanged_DraggableRects>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDraggableRegionsChanged.DraggableRects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDraggableRegionsChanged.DraggableRects)
    MergeFrom(*source);
  }
}

void CMsgDraggableRegionsChanged_DraggableRects::MergeFrom(const CMsgDraggableRegionsChanged_DraggableRects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDraggableRegionsChanged.DraggableRects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000010u) {
      draggable_ = from.draggable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDraggableRegionsChanged_DraggableRects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDraggableRegionsChanged.DraggableRects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDraggableRegionsChanged_DraggableRects::CopyFrom(const CMsgDraggableRegionsChanged_DraggableRects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDraggableRegionsChanged.DraggableRects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDraggableRegionsChanged_DraggableRects::IsInitialized() const {
  return true;
}

void CMsgDraggableRegionsChanged_DraggableRects::Swap(CMsgDraggableRegionsChanged_DraggableRects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDraggableRegionsChanged_DraggableRects::InternalSwap(CMsgDraggableRegionsChanged_DraggableRects* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(draggable_, other->draggable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDraggableRegionsChanged_DraggableRects::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDraggableRegionsChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDraggableRegionsChanged::kBrowserHandleFieldNumber;
const int CMsgDraggableRegionsChanged::kRectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDraggableRegionsChanged::CMsgDraggableRegionsChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgDraggableRegionsChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDraggableRegionsChanged)
}
CMsgDraggableRegionsChanged::CMsgDraggableRegionsChanged(const CMsgDraggableRegionsChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rects_(from.rects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgDraggableRegionsChanged)
}

void CMsgDraggableRegionsChanged::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgDraggableRegionsChanged::~CMsgDraggableRegionsChanged() {
  // @@protoc_insertion_point(destructor:CMsgDraggableRegionsChanged)
  SharedDtor();
}

void CMsgDraggableRegionsChanged::SharedDtor() {
}

void CMsgDraggableRegionsChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgDraggableRegionsChanged::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDraggableRegionsChanged& CMsgDraggableRegionsChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgDraggableRegionsChanged.base);
  return *internal_default_instance();
}


void CMsgDraggableRegionsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDraggableRegionsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rects_.Clear();
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDraggableRegionsChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDraggableRegionsChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgDraggableRegionsChanged.DraggableRects rects = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDraggableRegionsChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDraggableRegionsChanged)
  return false;
#undef DO_
}

void CMsgDraggableRegionsChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDraggableRegionsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // repeated .CMsgDraggableRegionsChanged.DraggableRects rects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->rects(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDraggableRegionsChanged)
}

::google::protobuf::uint8* CMsgDraggableRegionsChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDraggableRegionsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // repeated .CMsgDraggableRegionsChanged.DraggableRects rects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rects(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDraggableRegionsChanged)
  return target;
}

size_t CMsgDraggableRegionsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDraggableRegionsChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgDraggableRegionsChanged.DraggableRects rects = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rects(static_cast<int>(i)));
    }
  }

  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDraggableRegionsChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDraggableRegionsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDraggableRegionsChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDraggableRegionsChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDraggableRegionsChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDraggableRegionsChanged)
    MergeFrom(*source);
  }
}

void CMsgDraggableRegionsChanged::MergeFrom(const CMsgDraggableRegionsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDraggableRegionsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rects_.MergeFrom(from.rects_);
  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgDraggableRegionsChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDraggableRegionsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDraggableRegionsChanged::CopyFrom(const CMsgDraggableRegionsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDraggableRegionsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDraggableRegionsChanged::IsInitialized() const {
  return true;
}

void CMsgDraggableRegionsChanged::Swap(CMsgDraggableRegionsChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDraggableRegionsChanged::InternalSwap(CMsgDraggableRegionsChanged* other) {
  using std::swap;
  CastToBase(&rects_)->InternalSwap(CastToBase(&other->rects_));
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgDraggableRegionsChanged::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgResizeGripChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgResizeGripChanged::kBrowserHandleFieldNumber;
const int CMsgResizeGripChanged::kWidthFieldNumber;
const int CMsgResizeGripChanged::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgResizeGripChanged::CMsgResizeGripChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgResizeGripChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgResizeGripChanged)
}
CMsgResizeGripChanged::CMsgResizeGripChanged(const CMsgResizeGripChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgResizeGripChanged)
}

void CMsgResizeGripChanged::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgResizeGripChanged::~CMsgResizeGripChanged() {
  // @@protoc_insertion_point(destructor:CMsgResizeGripChanged)
  SharedDtor();
}

void CMsgResizeGripChanged::SharedDtor() {
}

void CMsgResizeGripChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgResizeGripChanged::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgResizeGripChanged& CMsgResizeGripChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgResizeGripChanged.base);
  return *internal_default_instance();
}


void CMsgResizeGripChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgResizeGripChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgResizeGripChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgResizeGripChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgResizeGripChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgResizeGripChanged)
  return false;
#undef DO_
}

void CMsgResizeGripChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgResizeGripChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // optional int32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgResizeGripChanged)
}

::google::protobuf::uint8* CMsgResizeGripChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgResizeGripChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // optional int32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgResizeGripChanged)
  return target;
}

size_t CMsgResizeGripChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgResizeGripChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgResizeGripChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgResizeGripChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgResizeGripChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgResizeGripChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgResizeGripChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgResizeGripChanged)
    MergeFrom(*source);
  }
}

void CMsgResizeGripChanged::MergeFrom(const CMsgResizeGripChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgResizeGripChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgResizeGripChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgResizeGripChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgResizeGripChanged::CopyFrom(const CMsgResizeGripChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgResizeGripChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgResizeGripChanged::IsInitialized() const {
  return true;
}

void CMsgResizeGripChanged::Swap(CMsgResizeGripChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgResizeGripChanged::InternalSwap(CMsgResizeGripChanged* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgResizeGripChanged::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetWindowPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetWindowPosition::kBrowserHandleFieldNumber;
const int CMsgSetWindowPosition::kXFieldNumber;
const int CMsgSetWindowPosition::kYFieldNumber;
const int CMsgSetWindowPosition::kWidthFieldNumber;
const int CMsgSetWindowPosition::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetWindowPosition::CMsgSetWindowPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgSetWindowPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetWindowPosition)
}
CMsgSetWindowPosition::CMsgSetWindowPosition(const CMsgSetWindowPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetWindowPosition)
}

void CMsgSetWindowPosition::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
}

CMsgSetWindowPosition::~CMsgSetWindowPosition() {
  // @@protoc_insertion_point(destructor:CMsgSetWindowPosition)
  SharedDtor();
}

void CMsgSetWindowPosition::SharedDtor() {
}

void CMsgSetWindowPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgSetWindowPosition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetWindowPosition& CMsgSetWindowPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgSetWindowPosition.base);
  return *internal_default_instance();
}


void CMsgSetWindowPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetWindowPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetWindowPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetWindowPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetWindowPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetWindowPosition)
  return false;
#undef DO_
}

void CMsgSetWindowPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetWindowPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional int32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->width(), output);
  }

  // optional int32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetWindowPosition)
}

::google::protobuf::uint8* CMsgSetWindowPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetWindowPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional int32 width = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->width(), target);
  }

  // optional int32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetWindowPosition)
  return target;
}

size_t CMsgSetWindowPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetWindowPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 width = 4;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSetWindowPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetWindowPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetWindowPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetWindowPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetWindowPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetWindowPosition)
    MergeFrom(*source);
  }
}

void CMsgSetWindowPosition::MergeFrom(const CMsgSetWindowPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetWindowPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetWindowPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetWindowPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetWindowPosition::CopyFrom(const CMsgSetWindowPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetWindowPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetWindowPosition::IsInitialized() const {
  return true;
}

void CMsgSetWindowPosition::Swap(CMsgSetWindowPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetWindowPosition::InternalSwap(CMsgSetWindowPosition* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgSetWindowPosition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgShowWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgShowWindow::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgShowWindow::CMsgShowWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgShowWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgShowWindow)
}
CMsgShowWindow::CMsgShowWindow(const CMsgShowWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgShowWindow)
}

void CMsgShowWindow::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgShowWindow::~CMsgShowWindow() {
  // @@protoc_insertion_point(destructor:CMsgShowWindow)
  SharedDtor();
}

void CMsgShowWindow::SharedDtor() {
}

void CMsgShowWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgShowWindow::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgShowWindow& CMsgShowWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgShowWindow.base);
  return *internal_default_instance();
}


void CMsgShowWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgShowWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgShowWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgShowWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgShowWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgShowWindow)
  return false;
#undef DO_
}

void CMsgShowWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgShowWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgShowWindow)
}

::google::protobuf::uint8* CMsgShowWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgShowWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgShowWindow)
  return target;
}

size_t CMsgShowWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgShowWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgShowWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgShowWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgShowWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgShowWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgShowWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgShowWindow)
    MergeFrom(*source);
  }
}

void CMsgShowWindow::MergeFrom(const CMsgShowWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgShowWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgShowWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgShowWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShowWindow::CopyFrom(const CMsgShowWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgShowWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShowWindow::IsInitialized() const {
  return true;
}

void CMsgShowWindow::Swap(CMsgShowWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgShowWindow::InternalSwap(CMsgShowWindow* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgShowWindow::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHideWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHideWindow::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHideWindow::CMsgHideWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgHideWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHideWindow)
}
CMsgHideWindow::CMsgHideWindow(const CMsgHideWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgHideWindow)
}

void CMsgHideWindow::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgHideWindow::~CMsgHideWindow() {
  // @@protoc_insertion_point(destructor:CMsgHideWindow)
  SharedDtor();
}

void CMsgHideWindow::SharedDtor() {
}

void CMsgHideWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHideWindow::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHideWindow& CMsgHideWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgHideWindow.base);
  return *internal_default_instance();
}


void CMsgHideWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHideWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHideWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHideWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHideWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHideWindow)
  return false;
#undef DO_
}

void CMsgHideWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHideWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHideWindow)
}

::google::protobuf::uint8* CMsgHideWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHideWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHideWindow)
  return target;
}

size_t CMsgHideWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHideWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHideWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHideWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHideWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHideWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHideWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHideWindow)
    MergeFrom(*source);
  }
}

void CMsgHideWindow::MergeFrom(const CMsgHideWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHideWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgHideWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHideWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHideWindow::CopyFrom(const CMsgHideWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHideWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHideWindow::IsInitialized() const {
  return true;
}

void CMsgHideWindow::Swap(CMsgHideWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHideWindow::InternalSwap(CMsgHideWindow* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHideWindow::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBringWindowToFront::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBringWindowToFront::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBringWindowToFront::CMsgBringWindowToFront()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgBringWindowToFront.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBringWindowToFront)
}
CMsgBringWindowToFront::CMsgBringWindowToFront(const CMsgBringWindowToFront& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgBringWindowToFront)
}

void CMsgBringWindowToFront::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgBringWindowToFront::~CMsgBringWindowToFront() {
  // @@protoc_insertion_point(destructor:CMsgBringWindowToFront)
  SharedDtor();
}

void CMsgBringWindowToFront::SharedDtor() {
}

void CMsgBringWindowToFront::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBringWindowToFront::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBringWindowToFront& CMsgBringWindowToFront::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgBringWindowToFront.base);
  return *internal_default_instance();
}


void CMsgBringWindowToFront::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBringWindowToFront)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBringWindowToFront::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBringWindowToFront)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBringWindowToFront)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBringWindowToFront)
  return false;
#undef DO_
}

void CMsgBringWindowToFront::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBringWindowToFront)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBringWindowToFront)
}

::google::protobuf::uint8* CMsgBringWindowToFront::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBringWindowToFront)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBringWindowToFront)
  return target;
}

size_t CMsgBringWindowToFront::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBringWindowToFront)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBringWindowToFront::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBringWindowToFront)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBringWindowToFront* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBringWindowToFront>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBringWindowToFront)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBringWindowToFront)
    MergeFrom(*source);
  }
}

void CMsgBringWindowToFront::MergeFrom(const CMsgBringWindowToFront& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBringWindowToFront)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgBringWindowToFront::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBringWindowToFront)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBringWindowToFront::CopyFrom(const CMsgBringWindowToFront& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBringWindowToFront)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBringWindowToFront::IsInitialized() const {
  return true;
}

void CMsgBringWindowToFront::Swap(CMsgBringWindowToFront* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBringWindowToFront::InternalSwap(CMsgBringWindowToFront* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBringWindowToFront::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMaximizeRestoreWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMaximizeRestoreWindow::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMaximizeRestoreWindow::CMsgMaximizeRestoreWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMaximizeRestoreWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMaximizeRestoreWindow)
}
CMsgMaximizeRestoreWindow::CMsgMaximizeRestoreWindow(const CMsgMaximizeRestoreWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgMaximizeRestoreWindow)
}

void CMsgMaximizeRestoreWindow::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgMaximizeRestoreWindow::~CMsgMaximizeRestoreWindow() {
  // @@protoc_insertion_point(destructor:CMsgMaximizeRestoreWindow)
  SharedDtor();
}

void CMsgMaximizeRestoreWindow::SharedDtor() {
}

void CMsgMaximizeRestoreWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMaximizeRestoreWindow::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMaximizeRestoreWindow& CMsgMaximizeRestoreWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMaximizeRestoreWindow.base);
  return *internal_default_instance();
}


void CMsgMaximizeRestoreWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMaximizeRestoreWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMaximizeRestoreWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMaximizeRestoreWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMaximizeRestoreWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMaximizeRestoreWindow)
  return false;
#undef DO_
}

void CMsgMaximizeRestoreWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMaximizeRestoreWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMaximizeRestoreWindow)
}

::google::protobuf::uint8* CMsgMaximizeRestoreWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMaximizeRestoreWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMaximizeRestoreWindow)
  return target;
}

size_t CMsgMaximizeRestoreWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMaximizeRestoreWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMaximizeRestoreWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMaximizeRestoreWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMaximizeRestoreWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMaximizeRestoreWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMaximizeRestoreWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMaximizeRestoreWindow)
    MergeFrom(*source);
  }
}

void CMsgMaximizeRestoreWindow::MergeFrom(const CMsgMaximizeRestoreWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMaximizeRestoreWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgMaximizeRestoreWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMaximizeRestoreWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMaximizeRestoreWindow::CopyFrom(const CMsgMaximizeRestoreWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMaximizeRestoreWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMaximizeRestoreWindow::IsInitialized() const {
  return true;
}

void CMsgMaximizeRestoreWindow::Swap(CMsgMaximizeRestoreWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMaximizeRestoreWindow::InternalSwap(CMsgMaximizeRestoreWindow* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMaximizeRestoreWindow::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgMinimizeWindow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgMinimizeWindow::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgMinimizeWindow::CMsgMinimizeWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgMinimizeWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgMinimizeWindow)
}
CMsgMinimizeWindow::CMsgMinimizeWindow(const CMsgMinimizeWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgMinimizeWindow)
}

void CMsgMinimizeWindow::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgMinimizeWindow::~CMsgMinimizeWindow() {
  // @@protoc_insertion_point(destructor:CMsgMinimizeWindow)
  SharedDtor();
}

void CMsgMinimizeWindow::SharedDtor() {
}

void CMsgMinimizeWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgMinimizeWindow::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgMinimizeWindow& CMsgMinimizeWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgMinimizeWindow.base);
  return *internal_default_instance();
}


void CMsgMinimizeWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgMinimizeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgMinimizeWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgMinimizeWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgMinimizeWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgMinimizeWindow)
  return false;
#undef DO_
}

void CMsgMinimizeWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgMinimizeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgMinimizeWindow)
}

::google::protobuf::uint8* CMsgMinimizeWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgMinimizeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgMinimizeWindow)
  return target;
}

size_t CMsgMinimizeWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgMinimizeWindow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgMinimizeWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgMinimizeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgMinimizeWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgMinimizeWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgMinimizeWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgMinimizeWindow)
    MergeFrom(*source);
  }
}

void CMsgMinimizeWindow::MergeFrom(const CMsgMinimizeWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgMinimizeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgMinimizeWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgMinimizeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgMinimizeWindow::CopyFrom(const CMsgMinimizeWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgMinimizeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgMinimizeWindow::IsInitialized() const {
  return true;
}

void CMsgMinimizeWindow::Swap(CMsgMinimizeWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgMinimizeWindow::InternalSwap(CMsgMinimizeWindow* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgMinimizeWindow::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgShowBrowserContextMenu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgShowBrowserContextMenu::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgShowBrowserContextMenu::CMsgShowBrowserContextMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgShowBrowserContextMenu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgShowBrowserContextMenu)
}
CMsgShowBrowserContextMenu::CMsgShowBrowserContextMenu(const CMsgShowBrowserContextMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgShowBrowserContextMenu)
}

void CMsgShowBrowserContextMenu::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgShowBrowserContextMenu::~CMsgShowBrowserContextMenu() {
  // @@protoc_insertion_point(destructor:CMsgShowBrowserContextMenu)
  SharedDtor();
}

void CMsgShowBrowserContextMenu::SharedDtor() {
}

void CMsgShowBrowserContextMenu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgShowBrowserContextMenu::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgShowBrowserContextMenu& CMsgShowBrowserContextMenu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgShowBrowserContextMenu.base);
  return *internal_default_instance();
}


void CMsgShowBrowserContextMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgShowBrowserContextMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgShowBrowserContextMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgShowBrowserContextMenu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgShowBrowserContextMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgShowBrowserContextMenu)
  return false;
#undef DO_
}

void CMsgShowBrowserContextMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgShowBrowserContextMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgShowBrowserContextMenu)
}

::google::protobuf::uint8* CMsgShowBrowserContextMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgShowBrowserContextMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgShowBrowserContextMenu)
  return target;
}

size_t CMsgShowBrowserContextMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgShowBrowserContextMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgShowBrowserContextMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgShowBrowserContextMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgShowBrowserContextMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgShowBrowserContextMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgShowBrowserContextMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgShowBrowserContextMenu)
    MergeFrom(*source);
  }
}

void CMsgShowBrowserContextMenu::MergeFrom(const CMsgShowBrowserContextMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgShowBrowserContextMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgShowBrowserContextMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgShowBrowserContextMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShowBrowserContextMenu::CopyFrom(const CMsgShowBrowserContextMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgShowBrowserContextMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShowBrowserContextMenu::IsInitialized() const {
  return true;
}

void CMsgShowBrowserContextMenu::Swap(CMsgShowBrowserContextMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgShowBrowserContextMenu::InternalSwap(CMsgShowBrowserContextMenu* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgShowBrowserContextMenu::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgImeSetComposition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgImeSetComposition::kBrowserHandleFieldNumber;
const int CMsgImeSetComposition::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgImeSetComposition::CMsgImeSetComposition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgImeSetComposition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgImeSetComposition)
}
CMsgImeSetComposition::CMsgImeSetComposition(const CMsgImeSetComposition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgImeSetComposition)
}

void CMsgImeSetComposition::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgImeSetComposition::~CMsgImeSetComposition() {
  // @@protoc_insertion_point(destructor:CMsgImeSetComposition)
  SharedDtor();
}

void CMsgImeSetComposition::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgImeSetComposition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgImeSetComposition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgImeSetComposition& CMsgImeSetComposition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgImeSetComposition.base);
  return *internal_default_instance();
}


void CMsgImeSetComposition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgImeSetComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgImeSetComposition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgImeSetComposition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgImeSetComposition.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgImeSetComposition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgImeSetComposition)
  return false;
#undef DO_
}

void CMsgImeSetComposition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgImeSetComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgImeSetComposition.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgImeSetComposition)
}

::google::protobuf::uint8* CMsgImeSetComposition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgImeSetComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgImeSetComposition.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgImeSetComposition)
  return target;
}

size_t CMsgImeSetComposition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgImeSetComposition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgImeSetComposition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgImeSetComposition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgImeSetComposition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgImeSetComposition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgImeSetComposition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgImeSetComposition)
    MergeFrom(*source);
  }
}

void CMsgImeSetComposition::MergeFrom(const CMsgImeSetComposition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgImeSetComposition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgImeSetComposition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgImeSetComposition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgImeSetComposition::CopyFrom(const CMsgImeSetComposition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgImeSetComposition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgImeSetComposition::IsInitialized() const {
  return true;
}

void CMsgImeSetComposition::Swap(CMsgImeSetComposition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgImeSetComposition::InternalSwap(CMsgImeSetComposition* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgImeSetComposition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgImeCommitText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgImeCommitText::kBrowserHandleFieldNumber;
const int CMsgImeCommitText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgImeCommitText::CMsgImeCommitText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgImeCommitText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgImeCommitText)
}
CMsgImeCommitText::CMsgImeCommitText(const CMsgImeCommitText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgImeCommitText)
}

void CMsgImeCommitText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_handle_ = 0u;
}

CMsgImeCommitText::~CMsgImeCommitText() {
  // @@protoc_insertion_point(destructor:CMsgImeCommitText)
  SharedDtor();
}

void CMsgImeCommitText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgImeCommitText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgImeCommitText::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgImeCommitText& CMsgImeCommitText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgImeCommitText.base);
  return *internal_default_instance();
}


void CMsgImeCommitText::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgImeCommitText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgImeCommitText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgImeCommitText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgImeCommitText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgImeCommitText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgImeCommitText)
  return false;
#undef DO_
}

void CMsgImeCommitText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgImeCommitText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgImeCommitText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgImeCommitText)
}

::google::protobuf::uint8* CMsgImeCommitText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgImeCommitText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgImeCommitText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgImeCommitText)
  return target;
}

size_t CMsgImeCommitText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgImeCommitText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgImeCommitText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgImeCommitText)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgImeCommitText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgImeCommitText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgImeCommitText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgImeCommitText)
    MergeFrom(*source);
  }
}

void CMsgImeCommitText::MergeFrom(const CMsgImeCommitText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgImeCommitText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      browser_handle_ = from.browser_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgImeCommitText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgImeCommitText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgImeCommitText::CopyFrom(const CMsgImeCommitText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgImeCommitText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgImeCommitText::IsInitialized() const {
  return true;
}

void CMsgImeCommitText::Swap(CMsgImeCommitText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgImeCommitText::InternalSwap(CMsgImeCommitText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgImeCommitText::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgImeCancelComposition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgImeCancelComposition::kBrowserHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgImeCancelComposition::CMsgImeCancelComposition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgImeCancelComposition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgImeCancelComposition)
}
CMsgImeCancelComposition::CMsgImeCancelComposition(const CMsgImeCancelComposition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_handle_ = from.browser_handle_;
  // @@protoc_insertion_point(copy_constructor:CMsgImeCancelComposition)
}

void CMsgImeCancelComposition::SharedCtor() {
  browser_handle_ = 0u;
}

CMsgImeCancelComposition::~CMsgImeCancelComposition() {
  // @@protoc_insertion_point(destructor:CMsgImeCancelComposition)
  SharedDtor();
}

void CMsgImeCancelComposition::SharedDtor() {
}

void CMsgImeCancelComposition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgImeCancelComposition::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgImeCancelComposition& CMsgImeCancelComposition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgImeCancelComposition.base);
  return *internal_default_instance();
}


void CMsgImeCancelComposition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgImeCancelComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_handle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgImeCancelComposition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgImeCancelComposition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgImeCancelComposition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgImeCancelComposition)
  return false;
#undef DO_
}

void CMsgImeCancelComposition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgImeCancelComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgImeCancelComposition)
}

::google::protobuf::uint8* CMsgImeCancelComposition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgImeCancelComposition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgImeCancelComposition)
  return target;
}

size_t CMsgImeCancelComposition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgImeCancelComposition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 browser_handle = 1;
  if (has_browser_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->browser_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgImeCancelComposition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgImeCancelComposition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgImeCancelComposition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgImeCancelComposition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgImeCancelComposition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgImeCancelComposition)
    MergeFrom(*source);
  }
}

void CMsgImeCancelComposition::MergeFrom(const CMsgImeCancelComposition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgImeCancelComposition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_browser_handle()) {
    set_browser_handle(from.browser_handle());
  }
}

void CMsgImeCancelComposition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgImeCancelComposition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgImeCancelComposition::CopyFrom(const CMsgImeCancelComposition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgImeCancelComposition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgImeCancelComposition::IsInitialized() const {
  return true;
}

void CMsgImeCancelComposition::Swap(CMsgImeCancelComposition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgImeCancelComposition::InternalSwap(CMsgImeCancelComposition* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgImeCancelComposition::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgImeCompositionRangeChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgImeCompositionRangeChanged::kBrowserHandleFieldNumber;
const int CMsgImeCompositionRangeChanged::kXFieldNumber;
const int CMsgImeCompositionRangeChanged::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgImeCompositionRangeChanged::CMsgImeCompositionRangeChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_htmlmessages_2eproto::scc_info_CMsgImeCompositionRangeChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgImeCompositionRangeChanged)
}
CMsgImeCompositionRangeChanged::CMsgImeCompositionRangeChanged(const CMsgImeCompositionRangeChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_handle_, &from.browser_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgImeCompositionRangeChanged)
}

void CMsgImeCompositionRangeChanged::SharedCtor() {
  ::memset(&browser_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
}

CMsgImeCompositionRangeChanged::~CMsgImeCompositionRangeChanged() {
  // @@protoc_insertion_point(destructor:CMsgImeCompositionRangeChanged)
  SharedDtor();
}

void CMsgImeCompositionRangeChanged::SharedDtor() {
}

void CMsgImeCompositionRangeChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgImeCompositionRangeChanged::descriptor() {
  ::protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgImeCompositionRangeChanged& CMsgImeCompositionRangeChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_htmlmessages_2eproto::scc_info_CMsgImeCompositionRangeChanged.base);
  return *internal_default_instance();
}


void CMsgImeCompositionRangeChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgImeCompositionRangeChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&browser_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&browser_handle_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgImeCompositionRangeChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgImeCompositionRangeChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 browser_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_browser_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &browser_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgImeCompositionRangeChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgImeCompositionRangeChanged)
  return false;
#undef DO_
}

void CMsgImeCompositionRangeChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgImeCompositionRangeChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->browser_handle(), output);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgImeCompositionRangeChanged)
}

::google::protobuf::uint8* CMsgImeCompositionRangeChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgImeCompositionRangeChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 browser_handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->browser_handle(), target);
  }

  // optional uint32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgImeCompositionRangeChanged)
  return target;
}

size_t CMsgImeCompositionRangeChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgImeCompositionRangeChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 browser_handle = 1;
    if (has_browser_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->browser_handle());
    }

    // optional uint32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgImeCompositionRangeChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgImeCompositionRangeChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgImeCompositionRangeChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgImeCompositionRangeChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgImeCompositionRangeChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgImeCompositionRangeChanged)
    MergeFrom(*source);
  }
}

void CMsgImeCompositionRangeChanged::MergeFrom(const CMsgImeCompositionRangeChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgImeCompositionRangeChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      browser_handle_ = from.browser_handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgImeCompositionRangeChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgImeCompositionRangeChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgImeCompositionRangeChanged::CopyFrom(const CMsgImeCompositionRangeChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgImeCompositionRangeChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgImeCompositionRangeChanged::IsInitialized() const {
  return true;
}

void CMsgImeCompositionRangeChanged::Swap(CMsgImeCompositionRangeChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgImeCompositionRangeChanged::InternalSwap(CMsgImeCompositionRangeChanged* other) {
  using std::swap;
  swap(browser_handle_, other->browser_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgImeCompositionRangeChanged::GetMetadata() const {
  protobuf_htmlmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_htmlmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgKeyUp* Arena::CreateMaybeMessage< ::CMsgKeyUp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgKeyUp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgKeyDown* Arena::CreateMaybeMessage< ::CMsgKeyDown >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgKeyDown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgKeyChar* Arena::CreateMaybeMessage< ::CMsgKeyChar >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgKeyChar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseDown* Arena::CreateMaybeMessage< ::CMsgMouseDown >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseDown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseUp* Arena::CreateMaybeMessage< ::CMsgMouseUp >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseUp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseDblClick* Arena::CreateMaybeMessage< ::CMsgMouseDblClick >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseDblClick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseWheel* Arena::CreateMaybeMessage< ::CMsgMouseWheel >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseWheel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseMove* Arena::CreateMaybeMessage< ::CMsgMouseMove >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMouseLeave* Arena::CreateMaybeMessage< ::CMsgMouseLeave >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMouseLeave >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserCreate* Arena::CreateMaybeMessage< ::CMsgBrowserCreate >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserCreate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserCreateResponse* Arena::CreateMaybeMessage< ::CMsgBrowserCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserCreateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserRemove* Arena::CreateMaybeMessage< ::CMsgBrowserRemove >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserRemove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetLocalFileRequestMapping_AdditionalRoute* Arena::CreateMaybeMessage< ::CMsgSetLocalFileRequestMapping_AdditionalRoute >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetLocalFileRequestMapping_AdditionalRoute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetLocalFileRequestMapping* Arena::CreateMaybeMessage< ::CMsgSetLocalFileRequestMapping >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetLocalFileRequestMapping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserErrorStrings* Arena::CreateMaybeMessage< ::CMsgBrowserErrorStrings >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserErrorStrings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserSize* Arena::CreateMaybeMessage< ::CMsgBrowserSize >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserSize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserSetMinSize* Arena::CreateMaybeMessage< ::CMsgBrowserSetMinSize >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserSetMinSize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserPosition* Arena::CreateMaybeMessage< ::CMsgBrowserPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserResized* Arena::CreateMaybeMessage< ::CMsgBrowserResized >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserResized >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPostURL* Arena::CreateMaybeMessage< ::CMsgPostURL >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPostURL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAddHeader* Arena::CreateMaybeMessage< ::CMsgAddHeader >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAddHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgStopLoad* Arena::CreateMaybeMessage< ::CMsgStopLoad >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgStopLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgReload* Arena::CreateMaybeMessage< ::CMsgReload >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgReload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGoForward* Arena::CreateMaybeMessage< ::CMsgGoForward >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGoForward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGoBack* Arena::CreateMaybeMessage< ::CMsgGoBack >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGoBack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgWasHidden* Arena::CreateMaybeMessage< ::CMsgWasHidden >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgWasHidden >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClearHistory* Arena::CreateMaybeMessage< ::CMsgClearHistory >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClearHistory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClearAllBrowsingData* Arena::CreateMaybeMessage< ::CMsgClearAllBrowsingData >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClearAllBrowsingData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCopy* Arena::CreateMaybeMessage< ::CMsgCopy >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCopy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPaste* Arena::CreateMaybeMessage< ::CMsgPaste >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPaste >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgExecuteJavaScript* Arena::CreateMaybeMessage< ::CMsgExecuteJavaScript >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgExecuteJavaScript >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetFocus* Arena::CreateMaybeMessage< ::CMsgSetFocus >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetFocus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHorizontalScrollBarSize* Arena::CreateMaybeMessage< ::CMsgHorizontalScrollBarSize >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHorizontalScrollBarSize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHorizontalScrollBarSizeResponse* Arena::CreateMaybeMessage< ::CMsgHorizontalScrollBarSizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHorizontalScrollBarSizeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgVerticalScrollBarSize* Arena::CreateMaybeMessage< ::CMsgVerticalScrollBarSize >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgVerticalScrollBarSize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgVerticalScrollBarSizeResponse* Arena::CreateMaybeMessage< ::CMsgVerticalScrollBarSizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgVerticalScrollBarSizeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFind* Arena::CreateMaybeMessage< ::CMsgFind >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFind >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgStopFind* Arena::CreateMaybeMessage< ::CMsgStopFind >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgStopFind >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetHorizontalScroll* Arena::CreateMaybeMessage< ::CMsgSetHorizontalScroll >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetHorizontalScroll >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetVerticalScroll* Arena::CreateMaybeMessage< ::CMsgSetVerticalScroll >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetVerticalScroll >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetZoomLevel* Arena::CreateMaybeMessage< ::CMsgSetZoomLevel >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetZoomLevel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgViewSource* Arena::CreateMaybeMessage< ::CMsgViewSource >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgViewSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBrowserReady* Arena::CreateMaybeMessage< ::CMsgBrowserReady >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBrowserReady >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgURLChanged* Arena::CreateMaybeMessage< ::CMsgURLChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgURLChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CHTMLHeader* Arena::CreateMaybeMessage< ::CHTMLHeader >(Arena* arena) {
  return Arena::CreateInternal< ::CHTMLHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CHTMLPageSecurityInfo* Arena::CreateMaybeMessage< ::CHTMLPageSecurityInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CHTMLPageSecurityInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFinishedRequest* Arena::CreateMaybeMessage< ::CMsgFinishedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFinishedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgLoadedRequest* Arena::CreateMaybeMessage< ::CMsgLoadedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgLoadedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPageSecurity* Arena::CreateMaybeMessage< ::CMsgPageSecurity >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPageSecurity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgStartRequest* Arena::CreateMaybeMessage< ::CMsgStartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgStartRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgStartRequestResponse* Arena::CreateMaybeMessage< ::CMsgStartRequestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgStartRequestResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgShowPopup* Arena::CreateMaybeMessage< ::CMsgShowPopup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgShowPopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHidePopup* Arena::CreateMaybeMessage< ::CMsgHidePopup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHidePopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSizePopup* Arena::CreateMaybeMessage< ::CMsgSizePopup >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSizePopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgOpenNewTab* Arena::CreateMaybeMessage< ::CMsgOpenNewTab >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgOpenNewTab >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPopupHTMLWindow* Arena::CreateMaybeMessage< ::CMsgPopupHTMLWindow >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPopupHTMLWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPopupHTMLWindowResponse* Arena::CreateMaybeMessage< ::CMsgPopupHTMLWindowResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPopupHTMLWindowResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetHTMLTitle* Arena::CreateMaybeMessage< ::CMsgSetHTMLTitle >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetHTMLTitle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgLoadingResource* Arena::CreateMaybeMessage< ::CMsgLoadingResource >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgLoadingResource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgStatusText* Arena::CreateMaybeMessage< ::CMsgStatusText >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgStatusText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetCursor* Arena::CreateMaybeMessage< ::CMsgSetCursor >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetCursor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFileLoadDialog* Arena::CreateMaybeMessage< ::CMsgFileLoadDialog >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFileLoadDialog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFileLoadDialogResponse* Arena::CreateMaybeMessage< ::CMsgFileLoadDialogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFileLoadDialogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgShowToolTip* Arena::CreateMaybeMessage< ::CMsgShowToolTip >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgShowToolTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgUpdateToolTip* Arena::CreateMaybeMessage< ::CMsgUpdateToolTip >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgUpdateToolTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHideToolTip* Arena::CreateMaybeMessage< ::CMsgHideToolTip >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHideToolTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSearchResults* Arena::CreateMaybeMessage< ::CMsgSearchResults >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSearchResults >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClose* Arena::CreateMaybeMessage< ::CMsgClose >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetSharedPaintBuffers* Arena::CreateMaybeMessage< ::CMsgSetSharedPaintBuffers >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetSharedPaintBuffers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAckSharedPaintBuffers* Arena::CreateMaybeMessage< ::CMsgAckSharedPaintBuffers >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAckSharedPaintBuffers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgNeedsPaint* Arena::CreateMaybeMessage< ::CMsgNeedsPaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgNeedsPaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgComboNeedsPaint* Arena::CreateMaybeMessage< ::CMsgComboNeedsPaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgComboNeedsPaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgNeedsSharedTexturePaint* Arena::CreateMaybeMessage< ::CMsgNeedsSharedTexturePaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgNeedsSharedTexturePaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameOverlayTexturePaint* Arena::CreateMaybeMessage< ::CMsgGameOverlayTexturePaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameOverlayTexturePaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGetZoom* Arena::CreateMaybeMessage< ::CMsgGetZoom >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGetZoom >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGetZoomResponse* Arena::CreateMaybeMessage< ::CMsgGetZoomResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGetZoomResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgLinkAtPosition* Arena::CreateMaybeMessage< ::CMsgLinkAtPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgLinkAtPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgLinkAtPositionResponse* Arena::CreateMaybeMessage< ::CMsgLinkAtPositionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgLinkAtPositionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgZoomToElementAtPosition* Arena::CreateMaybeMessage< ::CMsgZoomToElementAtPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgZoomToElementAtPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgZoomToElementAtPositionResponse* Arena::CreateMaybeMessage< ::CMsgZoomToElementAtPositionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgZoomToElementAtPositionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgScalePageToValue* Arena::CreateMaybeMessage< ::CMsgScalePageToValue >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgScalePageToValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgScalePageToValueResponse* Arena::CreateMaybeMessage< ::CMsgScalePageToValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgScalePageToValueResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSavePageToJPEG* Arena::CreateMaybeMessage< ::CMsgSavePageToJPEG >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSavePageToJPEG >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSavePageToJPEGResponse* Arena::CreateMaybeMessage< ::CMsgSavePageToJPEGResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSavePageToJPEGResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSAlert* Arena::CreateMaybeMessage< ::CMsgJSAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSConfirm* Arena::CreateMaybeMessage< ::CMsgJSConfirm >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSConfirm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSDialogResponse* Arena::CreateMaybeMessage< ::CMsgJSDialogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSDialogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCanGoBackAndForward* Arena::CreateMaybeMessage< ::CMsgCanGoBackAndForward >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCanGoBackAndForward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgOpenSteamURL* Arena::CreateMaybeMessage< ::CMsgOpenSteamURL >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgOpenSteamURL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetCookie* Arena::CreateMaybeMessage< ::CMsgSetCookie >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetCookie >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetTargetFrameRate* Arena::CreateMaybeMessage< ::CMsgSetTargetFrameRate >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetTargetFrameRate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPauseRepaint* Arena::CreateMaybeMessage< ::CMsgPauseRepaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPauseRepaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFullRepaint* Arena::CreateMaybeMessage< ::CMsgFullRepaint >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFullRepaint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgRequestFullScreen* Arena::CreateMaybeMessage< ::CMsgRequestFullScreen >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgRequestFullScreen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgExitFullScreen* Arena::CreateMaybeMessage< ::CMsgExitFullScreen >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgExitFullScreen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgToggleFindInPageDialog* Arena::CreateMaybeMessage< ::CMsgToggleFindInPageDialog >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgToggleFindInPageDialog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetPIDShuttingDown* Arena::CreateMaybeMessage< ::CMsgSetPIDShuttingDown >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetPIDShuttingDown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDisableBackgroundThrottling* Arena::CreateMaybeMessage< ::CMsgDisableBackgroundThrottling >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDisableBackgroundThrottling >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAckPIDShuttingDown* Arena::CreateMaybeMessage< ::CMsgAckPIDShuttingDown >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAckPIDShuttingDown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGetCookiesForURL* Arena::CreateMaybeMessage< ::CMsgGetCookiesForURL >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGetCookiesForURL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCookie* Arena::CreateMaybeMessage< ::CCookie >(Arena* arena) {
  return Arena::CreateInternal< ::CCookie >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGetCookiesForURLResponse* Arena::CreateMaybeMessage< ::CMsgGetCookiesForURLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGetCookiesForURLResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgNodeHasFocus* Arena::CreateMaybeMessage< ::CMsgNodeHasFocus >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgNodeHasFocus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgZoomToFocusedElement* Arena::CreateMaybeMessage< ::CMsgZoomToFocusedElement >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgZoomToFocusedElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCloseFullScreenFlashIfOpen* Arena::CreateMaybeMessage< ::CMsgCloseFullScreenFlashIfOpen >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCloseFullScreenFlashIfOpen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPauseFullScreenFlashMovieIfOpen* Arena::CreateMaybeMessage< ::CMsgPauseFullScreenFlashMovieIfOpen >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPauseFullScreenFlashMovieIfOpen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFocusedNodeText* Arena::CreateMaybeMessage< ::CMsgFocusedNodeText >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFocusedNodeText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgFocusedNodeTextResponse* Arena::CreateMaybeMessage< ::CMsgFocusedNodeTextResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgFocusedNodeTextResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBuildID* Arena::CreateMaybeMessage< ::CMsgBuildID >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBuildID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgOpenDevTools* Arena::CreateMaybeMessage< ::CMsgOpenDevTools >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgOpenDevTools >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCloseDevTools* Arena::CreateMaybeMessage< ::CMsgCloseDevTools >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCloseDevTools >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgUnlockH264* Arena::CreateMaybeMessage< ::CMsgUnlockH264 >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgUnlockH264 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgScreenInformationChanged* Arena::CreateMaybeMessage< ::CMsgScreenInformationChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgScreenInformationChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgClearAllCookies* Arena::CreateMaybeMessage< ::CMsgClearAllCookies >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgClearAllCookies >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgScreenDPI* Arena::CreateMaybeMessage< ::CMsgScreenDPI >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgScreenDPI >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgAuthedSteamDomains* Arena::CreateMaybeMessage< ::CMsgAuthedSteamDomains >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgAuthedSteamDomains >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSteamAuthNeeded* Arena::CreateMaybeMessage< ::CMsgSteamAuthNeeded >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSteamAuthNeeded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSteamAuthCookiesSet* Arena::CreateMaybeMessage< ::CMsgSteamAuthCookiesSet >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSteamAuthCookiesSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSRegisterMethod* Arena::CreateMaybeMessage< ::CMsgJSRegisterMethod >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSRegisterMethod >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CJSMethodArgument* Arena::CreateMaybeMessage< ::CJSMethodArgument >(Arena* arena) {
  return Arena::CreateInternal< ::CJSMethodArgument >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSValue_JSObjectProperty* Arena::CreateMaybeMessage< ::CMsgJSValue_JSObjectProperty >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSValue_JSObjectProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSValue* Arena::CreateMaybeMessage< ::CMsgJSValue >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSMethodCall* Arena::CreateMaybeMessage< ::CMsgJSMethodCall >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSMethodCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSExecuteCallback* Arena::CreateMaybeMessage< ::CMsgJSExecuteCallback >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSExecuteCallback >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSReleaseCallback* Arena::CreateMaybeMessage< ::CMsgJSReleaseCallback >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSReleaseCallback >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJSRaiseException* Arena::CreateMaybeMessage< ::CMsgJSRaiseException >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJSRaiseException >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgLoadLocalization* Arena::CreateMaybeMessage< ::CMsgLoadLocalization >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgLoadLocalization >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgJumpListLink* Arena::CreateMaybeMessage< ::CMsgJumpListLink >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgJumpListLink >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMSgJumpListMRUApp* Arena::CreateMaybeMessage< ::CMSgJumpListMRUApp >(Arena* arena) {
  return Arena::CreateInternal< ::CMSgJumpListMRUApp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetJumpList* Arena::CreateMaybeMessage< ::CMsgSetJumpList >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetJumpList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetGameOverlayTargetPIDs* Arena::CreateMaybeMessage< ::CMsgSetGameOverlayTargetPIDs >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetGameOverlayTargetPIDs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgGameOverlayTargetTextureID* Arena::CreateMaybeMessage< ::CMsgGameOverlayTargetTextureID >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgGameOverlayTargetTextureID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDraggableRegionsChanged_DraggableRects* Arena::CreateMaybeMessage< ::CMsgDraggableRegionsChanged_DraggableRects >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDraggableRegionsChanged_DraggableRects >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgDraggableRegionsChanged* Arena::CreateMaybeMessage< ::CMsgDraggableRegionsChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgDraggableRegionsChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgResizeGripChanged* Arena::CreateMaybeMessage< ::CMsgResizeGripChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgResizeGripChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgSetWindowPosition* Arena::CreateMaybeMessage< ::CMsgSetWindowPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgSetWindowPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgShowWindow* Arena::CreateMaybeMessage< ::CMsgShowWindow >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgShowWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHideWindow* Arena::CreateMaybeMessage< ::CMsgHideWindow >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHideWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBringWindowToFront* Arena::CreateMaybeMessage< ::CMsgBringWindowToFront >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBringWindowToFront >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMaximizeRestoreWindow* Arena::CreateMaybeMessage< ::CMsgMaximizeRestoreWindow >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMaximizeRestoreWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgMinimizeWindow* Arena::CreateMaybeMessage< ::CMsgMinimizeWindow >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgMinimizeWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgShowBrowserContextMenu* Arena::CreateMaybeMessage< ::CMsgShowBrowserContextMenu >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgShowBrowserContextMenu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgImeSetComposition* Arena::CreateMaybeMessage< ::CMsgImeSetComposition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgImeSetComposition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgImeCommitText* Arena::CreateMaybeMessage< ::CMsgImeCommitText >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgImeCommitText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgImeCancelComposition* Arena::CreateMaybeMessage< ::CMsgImeCancelComposition >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgImeCancelComposition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgImeCompositionRangeChanged* Arena::CreateMaybeMessage< ::CMsgImeCompositionRangeChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgImeCompositionRangeChanged >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
