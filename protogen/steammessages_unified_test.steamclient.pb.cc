// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_unified_test.steamclient.proto

#include "steammessages_unified_test.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class CMsgTest_MessageToClient_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_MessageToClient_Request>
      _instance;
} _CMsgTest_MessageToClient_Request_default_instance_;
class CMsgTest_MessageToClient_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_MessageToClient_Response>
      _instance;
} _CMsgTest_MessageToClient_Response_default_instance_;
class CMsgTest_NotifyClient_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_NotifyClient_Notification>
      _instance;
} _CMsgTest_NotifyClient_Notification_default_instance_;
class CMsgTest_MessageToServer_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_MessageToServer_Request>
      _instance;
} _CMsgTest_MessageToServer_Request_default_instance_;
class CMsgTest_MessageToServer_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_MessageToServer_Response>
      _instance;
} _CMsgTest_MessageToServer_Response_default_instance_;
class CMsgTest_NotifyServer_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTest_NotifyServer_Notification>
      _instance;
} _CMsgTest_NotifyServer_Notification_default_instance_;
namespace protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto {
static void InitDefaultsCMsgTest_MessageToClient_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_MessageToClient_Request_default_instance_;
    new (ptr) ::CMsgTest_MessageToClient_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_MessageToClient_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_MessageToClient_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_MessageToClient_Request}, {}};

static void InitDefaultsCMsgTest_MessageToClient_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_MessageToClient_Response_default_instance_;
    new (ptr) ::CMsgTest_MessageToClient_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_MessageToClient_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_MessageToClient_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_MessageToClient_Response}, {}};

static void InitDefaultsCMsgTest_NotifyClient_Notification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_NotifyClient_Notification_default_instance_;
    new (ptr) ::CMsgTest_NotifyClient_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_NotifyClient_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_NotifyClient_Notification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_NotifyClient_Notification}, {}};

static void InitDefaultsCMsgTest_MessageToServer_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_MessageToServer_Request_default_instance_;
    new (ptr) ::CMsgTest_MessageToServer_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_MessageToServer_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_MessageToServer_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_MessageToServer_Request}, {}};

static void InitDefaultsCMsgTest_MessageToServer_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_MessageToServer_Response_default_instance_;
    new (ptr) ::CMsgTest_MessageToServer_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_MessageToServer_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_MessageToServer_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_MessageToServer_Response}, {}};

static void InitDefaultsCMsgTest_NotifyServer_Notification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgTest_NotifyServer_Notification_default_instance_;
    new (ptr) ::CMsgTest_NotifyServer_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgTest_NotifyServer_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTest_NotifyServer_Notification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTest_NotifyServer_Notification}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_MessageToClient_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_MessageToClient_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_NotifyClient_Notification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_MessageToServer_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_MessageToServer_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTest_NotifyServer_Notification.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Request, some_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToClient_Response, some_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyClient_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyClient_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyClient_Notification, some_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Request, some_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_MessageToServer_Response, some_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyServer_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyServer_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgTest_NotifyServer_Notification, some_text_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CMsgTest_MessageToClient_Request)},
  { 7, 13, sizeof(::CMsgTest_MessageToClient_Response)},
  { 14, 20, sizeof(::CMsgTest_NotifyClient_Notification)},
  { 21, 27, sizeof(::CMsgTest_MessageToServer_Request)},
  { 28, 34, sizeof(::CMsgTest_MessageToServer_Response)},
  { 35, 41, sizeof(::CMsgTest_NotifyServer_Notification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_MessageToClient_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_MessageToClient_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_NotifyClient_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_MessageToServer_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_MessageToServer_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgTest_NotifyServer_Notification_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "steammessages_unified_test.steamclient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,steammessages_unified_test.steamclient"
      ".proto\032,steammessages_unified_base.steam"
      "client.proto\"G\n CMsgTest_MessageToClient"
      "_Request\022#\n\tsome_text\030\001 \001(\tB\020\202\265\030\014Some st"
      "ring.\"H\n!CMsgTest_MessageToClient_Respon"
      "se\022#\n\tsome_text\030\001 \001(\tB\020\202\265\030\014Some string.\""
      "I\n\"CMsgTest_NotifyClient_Notification\022#\n"
      "\tsome_text\030\001 \001(\tB\020\202\265\030\014Some string.\"G\n CM"
      "sgTest_MessageToServer_Request\022#\n\tsome_t"
      "ext\030\001 \001(\tB\020\202\265\030\014Some string.\"H\n!CMsgTest_"
      "MessageToServer_Response\022#\n\tsome_text\030\001 "
      "\001(\tB\020\202\265\030\014Some string.\"I\n\"CMsgTest_Notify"
      "Server_Notification\022#\n\tsome_text\030\001 \001(\tB\020"
      "\202\265\030\014Some string.2\203\002\n\017TestSteamClient\022\201\001\n"
      "\017MessageToClient\022!.CMsgTest_MessageToCli"
      "ent_Request\032\".CMsgTest_MessageToClient_R"
      "esponse\"\'\202\265\030#Some description - MessageT"
      "oClient.\022f\n\014NotifyClient\022#.CMsgTest_Noti"
      "fyClient_Notification\032\013.NoResponse\"$\202\265\030 "
      "Some description - NotifyClient.\032\004\300\265\030\0022\202"
      "\002\n\024TestServerFromClient\022\201\001\n\017MessageToSer"
      "ver\022!.CMsgTest_MessageToServer_Request\032\""
      ".CMsgTest_MessageToServer_Response\"\'\202\265\030#"
      "Some description - MessageToServer.\022f\n\014N"
      "otifyServer\022#.CMsgTest_NotifyServer_Noti"
      "fication\032\013.NoResponse\"$\202\265\030 Some descript"
      "ion - NotifyServer.B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1064);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_unified_test.steamclient.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto

// ===================================================================

void CMsgTest_MessageToClient_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_MessageToClient_Request::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_MessageToClient_Request::CMsgTest_MessageToClient_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToClient_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_MessageToClient_Request)
}
CMsgTest_MessageToClient_Request::CMsgTest_MessageToClient_Request(const CMsgTest_MessageToClient_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_MessageToClient_Request)
}

void CMsgTest_MessageToClient_Request::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_MessageToClient_Request::~CMsgTest_MessageToClient_Request() {
  // @@protoc_insertion_point(destructor:CMsgTest_MessageToClient_Request)
  SharedDtor();
}

void CMsgTest_MessageToClient_Request::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_MessageToClient_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_MessageToClient_Request::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_MessageToClient_Request& CMsgTest_MessageToClient_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToClient_Request.base);
  return *internal_default_instance();
}


void CMsgTest_MessageToClient_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_MessageToClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_MessageToClient_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_MessageToClient_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_MessageToClient_Request.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_MessageToClient_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_MessageToClient_Request)
  return false;
#undef DO_
}

void CMsgTest_MessageToClient_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_MessageToClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToClient_Request.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_MessageToClient_Request)
}

::google::protobuf::uint8* CMsgTest_MessageToClient_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_MessageToClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToClient_Request.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_MessageToClient_Request)
  return target;
}

size_t CMsgTest_MessageToClient_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_MessageToClient_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_MessageToClient_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_MessageToClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_MessageToClient_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_MessageToClient_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_MessageToClient_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_MessageToClient_Request)
    MergeFrom(*source);
  }
}

void CMsgTest_MessageToClient_Request::MergeFrom(const CMsgTest_MessageToClient_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_MessageToClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_MessageToClient_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_MessageToClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_MessageToClient_Request::CopyFrom(const CMsgTest_MessageToClient_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_MessageToClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_MessageToClient_Request::IsInitialized() const {
  return true;
}

void CMsgTest_MessageToClient_Request::Swap(CMsgTest_MessageToClient_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_MessageToClient_Request::InternalSwap(CMsgTest_MessageToClient_Request* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_MessageToClient_Request::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTest_MessageToClient_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_MessageToClient_Response::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_MessageToClient_Response::CMsgTest_MessageToClient_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToClient_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_MessageToClient_Response)
}
CMsgTest_MessageToClient_Response::CMsgTest_MessageToClient_Response(const CMsgTest_MessageToClient_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_MessageToClient_Response)
}

void CMsgTest_MessageToClient_Response::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_MessageToClient_Response::~CMsgTest_MessageToClient_Response() {
  // @@protoc_insertion_point(destructor:CMsgTest_MessageToClient_Response)
  SharedDtor();
}

void CMsgTest_MessageToClient_Response::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_MessageToClient_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_MessageToClient_Response::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_MessageToClient_Response& CMsgTest_MessageToClient_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToClient_Response.base);
  return *internal_default_instance();
}


void CMsgTest_MessageToClient_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_MessageToClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_MessageToClient_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_MessageToClient_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_MessageToClient_Response.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_MessageToClient_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_MessageToClient_Response)
  return false;
#undef DO_
}

void CMsgTest_MessageToClient_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_MessageToClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToClient_Response.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_MessageToClient_Response)
}

::google::protobuf::uint8* CMsgTest_MessageToClient_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_MessageToClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToClient_Response.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_MessageToClient_Response)
  return target;
}

size_t CMsgTest_MessageToClient_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_MessageToClient_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_MessageToClient_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_MessageToClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_MessageToClient_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_MessageToClient_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_MessageToClient_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_MessageToClient_Response)
    MergeFrom(*source);
  }
}

void CMsgTest_MessageToClient_Response::MergeFrom(const CMsgTest_MessageToClient_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_MessageToClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_MessageToClient_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_MessageToClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_MessageToClient_Response::CopyFrom(const CMsgTest_MessageToClient_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_MessageToClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_MessageToClient_Response::IsInitialized() const {
  return true;
}

void CMsgTest_MessageToClient_Response::Swap(CMsgTest_MessageToClient_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_MessageToClient_Response::InternalSwap(CMsgTest_MessageToClient_Response* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_MessageToClient_Response::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTest_NotifyClient_Notification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_NotifyClient_Notification::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_NotifyClient_Notification::CMsgTest_NotifyClient_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_NotifyClient_Notification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_NotifyClient_Notification)
}
CMsgTest_NotifyClient_Notification::CMsgTest_NotifyClient_Notification(const CMsgTest_NotifyClient_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_NotifyClient_Notification)
}

void CMsgTest_NotifyClient_Notification::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_NotifyClient_Notification::~CMsgTest_NotifyClient_Notification() {
  // @@protoc_insertion_point(destructor:CMsgTest_NotifyClient_Notification)
  SharedDtor();
}

void CMsgTest_NotifyClient_Notification::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_NotifyClient_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_NotifyClient_Notification::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_NotifyClient_Notification& CMsgTest_NotifyClient_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_NotifyClient_Notification.base);
  return *internal_default_instance();
}


void CMsgTest_NotifyClient_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_NotifyClient_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_NotifyClient_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_NotifyClient_Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_NotifyClient_Notification.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_NotifyClient_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_NotifyClient_Notification)
  return false;
#undef DO_
}

void CMsgTest_NotifyClient_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_NotifyClient_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_NotifyClient_Notification.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_NotifyClient_Notification)
}

::google::protobuf::uint8* CMsgTest_NotifyClient_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_NotifyClient_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_NotifyClient_Notification.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_NotifyClient_Notification)
  return target;
}

size_t CMsgTest_NotifyClient_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_NotifyClient_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_NotifyClient_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_NotifyClient_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_NotifyClient_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_NotifyClient_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_NotifyClient_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_NotifyClient_Notification)
    MergeFrom(*source);
  }
}

void CMsgTest_NotifyClient_Notification::MergeFrom(const CMsgTest_NotifyClient_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_NotifyClient_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_NotifyClient_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_NotifyClient_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_NotifyClient_Notification::CopyFrom(const CMsgTest_NotifyClient_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_NotifyClient_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_NotifyClient_Notification::IsInitialized() const {
  return true;
}

void CMsgTest_NotifyClient_Notification::Swap(CMsgTest_NotifyClient_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_NotifyClient_Notification::InternalSwap(CMsgTest_NotifyClient_Notification* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_NotifyClient_Notification::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTest_MessageToServer_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_MessageToServer_Request::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_MessageToServer_Request::CMsgTest_MessageToServer_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToServer_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_MessageToServer_Request)
}
CMsgTest_MessageToServer_Request::CMsgTest_MessageToServer_Request(const CMsgTest_MessageToServer_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_MessageToServer_Request)
}

void CMsgTest_MessageToServer_Request::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_MessageToServer_Request::~CMsgTest_MessageToServer_Request() {
  // @@protoc_insertion_point(destructor:CMsgTest_MessageToServer_Request)
  SharedDtor();
}

void CMsgTest_MessageToServer_Request::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_MessageToServer_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_MessageToServer_Request::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_MessageToServer_Request& CMsgTest_MessageToServer_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToServer_Request.base);
  return *internal_default_instance();
}


void CMsgTest_MessageToServer_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_MessageToServer_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_MessageToServer_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_MessageToServer_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_MessageToServer_Request.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_MessageToServer_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_MessageToServer_Request)
  return false;
#undef DO_
}

void CMsgTest_MessageToServer_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_MessageToServer_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToServer_Request.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_MessageToServer_Request)
}

::google::protobuf::uint8* CMsgTest_MessageToServer_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_MessageToServer_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToServer_Request.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_MessageToServer_Request)
  return target;
}

size_t CMsgTest_MessageToServer_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_MessageToServer_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_MessageToServer_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_MessageToServer_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_MessageToServer_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_MessageToServer_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_MessageToServer_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_MessageToServer_Request)
    MergeFrom(*source);
  }
}

void CMsgTest_MessageToServer_Request::MergeFrom(const CMsgTest_MessageToServer_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_MessageToServer_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_MessageToServer_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_MessageToServer_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_MessageToServer_Request::CopyFrom(const CMsgTest_MessageToServer_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_MessageToServer_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_MessageToServer_Request::IsInitialized() const {
  return true;
}

void CMsgTest_MessageToServer_Request::Swap(CMsgTest_MessageToServer_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_MessageToServer_Request::InternalSwap(CMsgTest_MessageToServer_Request* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_MessageToServer_Request::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTest_MessageToServer_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_MessageToServer_Response::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_MessageToServer_Response::CMsgTest_MessageToServer_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToServer_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_MessageToServer_Response)
}
CMsgTest_MessageToServer_Response::CMsgTest_MessageToServer_Response(const CMsgTest_MessageToServer_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_MessageToServer_Response)
}

void CMsgTest_MessageToServer_Response::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_MessageToServer_Response::~CMsgTest_MessageToServer_Response() {
  // @@protoc_insertion_point(destructor:CMsgTest_MessageToServer_Response)
  SharedDtor();
}

void CMsgTest_MessageToServer_Response::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_MessageToServer_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_MessageToServer_Response::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_MessageToServer_Response& CMsgTest_MessageToServer_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_MessageToServer_Response.base);
  return *internal_default_instance();
}


void CMsgTest_MessageToServer_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_MessageToServer_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_MessageToServer_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_MessageToServer_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_MessageToServer_Response.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_MessageToServer_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_MessageToServer_Response)
  return false;
#undef DO_
}

void CMsgTest_MessageToServer_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_MessageToServer_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToServer_Response.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_MessageToServer_Response)
}

::google::protobuf::uint8* CMsgTest_MessageToServer_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_MessageToServer_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_MessageToServer_Response.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_MessageToServer_Response)
  return target;
}

size_t CMsgTest_MessageToServer_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_MessageToServer_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_MessageToServer_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_MessageToServer_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_MessageToServer_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_MessageToServer_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_MessageToServer_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_MessageToServer_Response)
    MergeFrom(*source);
  }
}

void CMsgTest_MessageToServer_Response::MergeFrom(const CMsgTest_MessageToServer_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_MessageToServer_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_MessageToServer_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_MessageToServer_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_MessageToServer_Response::CopyFrom(const CMsgTest_MessageToServer_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_MessageToServer_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_MessageToServer_Response::IsInitialized() const {
  return true;
}

void CMsgTest_MessageToServer_Response::Swap(CMsgTest_MessageToServer_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_MessageToServer_Response::InternalSwap(CMsgTest_MessageToServer_Response* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_MessageToServer_Response::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgTest_NotifyServer_Notification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTest_NotifyServer_Notification::kSomeTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTest_NotifyServer_Notification::CMsgTest_NotifyServer_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_NotifyServer_Notification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgTest_NotifyServer_Notification)
}
CMsgTest_NotifyServer_Notification::CMsgTest_NotifyServer_Notification(const CMsgTest_NotifyServer_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_some_text()) {
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgTest_NotifyServer_Notification)
}

void CMsgTest_NotifyServer_Notification::SharedCtor() {
  some_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgTest_NotifyServer_Notification::~CMsgTest_NotifyServer_Notification() {
  // @@protoc_insertion_point(destructor:CMsgTest_NotifyServer_Notification)
  SharedDtor();
}

void CMsgTest_NotifyServer_Notification::SharedDtor() {
  some_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTest_NotifyServer_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgTest_NotifyServer_Notification::descriptor() {
  ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTest_NotifyServer_Notification& CMsgTest_NotifyServer_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::scc_info_CMsgTest_NotifyServer_Notification.base);
  return *internal_default_instance();
}


void CMsgTest_NotifyServer_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTest_NotifyServer_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    some_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTest_NotifyServer_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgTest_NotifyServer_Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string some_text = 1 [(.description) = "Some string."];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_some_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->some_text().data(), static_cast<int>(this->some_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgTest_NotifyServer_Notification.some_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgTest_NotifyServer_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgTest_NotifyServer_Notification)
  return false;
#undef DO_
}

void CMsgTest_NotifyServer_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgTest_NotifyServer_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_NotifyServer_Notification.some_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->some_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgTest_NotifyServer_Notification)
}

::google::protobuf::uint8* CMsgTest_NotifyServer_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTest_NotifyServer_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string some_text = 1 [(.description) = "Some string."];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->some_text().data(), static_cast<int>(this->some_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgTest_NotifyServer_Notification.some_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->some_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTest_NotifyServer_Notification)
  return target;
}

size_t CMsgTest_NotifyServer_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTest_NotifyServer_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string some_text = 1 [(.description) = "Some string."];
  if (has_some_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->some_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTest_NotifyServer_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgTest_NotifyServer_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTest_NotifyServer_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTest_NotifyServer_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgTest_NotifyServer_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgTest_NotifyServer_Notification)
    MergeFrom(*source);
  }
}

void CMsgTest_NotifyServer_Notification::MergeFrom(const CMsgTest_NotifyServer_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgTest_NotifyServer_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_some_text()) {
    set_has_some_text();
    some_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.some_text_);
  }
}

void CMsgTest_NotifyServer_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgTest_NotifyServer_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTest_NotifyServer_Notification::CopyFrom(const CMsgTest_NotifyServer_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTest_NotifyServer_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTest_NotifyServer_Notification::IsInitialized() const {
  return true;
}

void CMsgTest_NotifyServer_Notification::Swap(CMsgTest_NotifyServer_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTest_NotifyServer_Notification::InternalSwap(CMsgTest_NotifyServer_Notification* other) {
  using std::swap;
  some_text_.Swap(&other->some_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgTest_NotifyServer_Notification::GetMetadata() const {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TestSteamClient::~TestSteamClient() {}

const ::google::protobuf::ServiceDescriptor* TestSteamClient::descriptor() {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* TestSteamClient::GetDescriptor() {
  return descriptor();
}

void TestSteamClient::MessageToClient(::google::protobuf::RpcController* controller,
                         const ::CMsgTest_MessageToClient_Request*,
                         ::CMsgTest_MessageToClient_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method MessageToClient() not implemented.");
  done->Run();
}

void TestSteamClient::NotifyClient(::google::protobuf::RpcController* controller,
                         const ::CMsgTest_NotifyClient_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyClient() not implemented.");
  done->Run();
}

void TestSteamClient::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      MessageToClient(controller,
             ::google::protobuf::down_cast<const ::CMsgTest_MessageToClient_Request*>(request),
             ::google::protobuf::down_cast< ::CMsgTest_MessageToClient_Response*>(response),
             done);
      break;
    case 1:
      NotifyClient(controller,
             ::google::protobuf::down_cast<const ::CMsgTest_NotifyClient_Notification*>(request),
             ::google::protobuf::down_cast< ::NoResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TestSteamClient::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMsgTest_MessageToClient_Request::default_instance();
    case 1:
      return ::CMsgTest_NotifyClient_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TestSteamClient::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMsgTest_MessageToClient_Response::default_instance();
    case 1:
      return ::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TestSteamClient_Stub::TestSteamClient_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TestSteamClient_Stub::TestSteamClient_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TestSteamClient_Stub::~TestSteamClient_Stub() {
  if (owns_channel_) delete channel_;
}

void TestSteamClient_Stub::MessageToClient(::google::protobuf::RpcController* controller,
                              const ::CMsgTest_MessageToClient_Request* request,
                              ::CMsgTest_MessageToClient_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TestSteamClient_Stub::NotifyClient(::google::protobuf::RpcController* controller,
                              const ::CMsgTest_NotifyClient_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
// ===================================================================

TestServerFromClient::~TestServerFromClient() {}

const ::google::protobuf::ServiceDescriptor* TestServerFromClient::descriptor() {
  protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* TestServerFromClient::GetDescriptor() {
  return descriptor();
}

void TestServerFromClient::MessageToServer(::google::protobuf::RpcController* controller,
                         const ::CMsgTest_MessageToServer_Request*,
                         ::CMsgTest_MessageToServer_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method MessageToServer() not implemented.");
  done->Run();
}

void TestServerFromClient::NotifyServer(::google::protobuf::RpcController* controller,
                         const ::CMsgTest_NotifyServer_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyServer() not implemented.");
  done->Run();
}

void TestServerFromClient::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5funified_5ftest_2esteamclient_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      MessageToServer(controller,
             ::google::protobuf::down_cast<const ::CMsgTest_MessageToServer_Request*>(request),
             ::google::protobuf::down_cast< ::CMsgTest_MessageToServer_Response*>(response),
             done);
      break;
    case 1:
      NotifyServer(controller,
             ::google::protobuf::down_cast<const ::CMsgTest_NotifyServer_Notification*>(request),
             ::google::protobuf::down_cast< ::NoResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TestServerFromClient::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMsgTest_MessageToServer_Request::default_instance();
    case 1:
      return ::CMsgTest_NotifyServer_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TestServerFromClient::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMsgTest_MessageToServer_Response::default_instance();
    case 1:
      return ::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TestServerFromClient_Stub::TestServerFromClient_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TestServerFromClient_Stub::TestServerFromClient_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TestServerFromClient_Stub::~TestServerFromClient_Stub() {
  if (owns_channel_) delete channel_;
}

void TestServerFromClient_Stub::MessageToServer(::google::protobuf::RpcController* controller,
                              const ::CMsgTest_MessageToServer_Request* request,
                              ::CMsgTest_MessageToServer_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void TestServerFromClient_Stub::NotifyServer(::google::protobuf::RpcController* controller,
                              const ::CMsgTest_NotifyServer_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_MessageToClient_Request* Arena::CreateMaybeMessage< ::CMsgTest_MessageToClient_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_MessageToClient_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_MessageToClient_Response* Arena::CreateMaybeMessage< ::CMsgTest_MessageToClient_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_MessageToClient_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_NotifyClient_Notification* Arena::CreateMaybeMessage< ::CMsgTest_NotifyClient_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_NotifyClient_Notification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_MessageToServer_Request* Arena::CreateMaybeMessage< ::CMsgTest_MessageToServer_Request >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_MessageToServer_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_MessageToServer_Response* Arena::CreateMaybeMessage< ::CMsgTest_MessageToServer_Response >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_MessageToServer_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgTest_NotifyServer_Notification* Arena::CreateMaybeMessage< ::CMsgTest_NotifyServer_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgTest_NotifyServer_Notification >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
